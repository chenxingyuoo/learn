{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/bl/bl.js","webpack:///../node_modules/bson/index.js","webpack:///../node_modules/bson/lib/bson/binary.js","webpack:///../node_modules/bson/lib/bson/bson.js","webpack:///../node_modules/bson/lib/bson/code.js","webpack:///../node_modules/bson/lib/bson/db_ref.js","webpack:///../node_modules/bson/lib/bson/decimal128.js","webpack:///../node_modules/bson/lib/bson/double.js","webpack:///../node_modules/bson/lib/bson/float_parser.js","webpack:///../node_modules/bson/lib/bson/int_32.js","webpack:///../node_modules/bson/lib/bson/long.js","webpack:///../node_modules/bson/lib/bson/map.js","webpack:///../node_modules/bson/lib/bson/max_key.js","webpack:///../node_modules/bson/lib/bson/min_key.js","webpack:///../node_modules/bson/lib/bson/objectid.js","webpack:///../node_modules/bson/lib/bson/parser/calculate_size.js","webpack:///../node_modules/bson/lib/bson/parser/deserializer.js","webpack:///../node_modules/bson/lib/bson/parser/serializer.js","webpack:///../node_modules/bson/lib/bson/parser/utils.js","webpack:///../node_modules/bson/lib/bson/regexp.js","webpack:///../node_modules/bson/lib/bson/symbol.js","webpack:///../node_modules/bson/lib/bson/timestamp.js","webpack:///../node_modules/denque/index.js","webpack:///../node_modules/memory-pager/index.js","webpack:///../node_modules/mongodb/index.js","webpack:///../node_modules/mongodb/lib/admin.js","webpack:///../node_modules/mongodb/lib/aggregation_cursor.js","webpack:///../node_modules/mongodb/lib/apm.js","webpack:///../node_modules/mongodb/lib/async/async_iterator.js","webpack:///../node_modules/mongodb/lib/bulk/common.js","webpack:///../node_modules/mongodb/lib/bulk/ordered.js","webpack:///../node_modules/mongodb/lib/bulk/unordered.js","webpack:///../node_modules/mongodb/lib/change_stream.js","webpack:///../node_modules/mongodb/lib/cmap/connection.js","webpack:///../node_modules/mongodb/lib/cmap/connection_pool.js","webpack:///../node_modules/mongodb/lib/cmap/errors.js","webpack:///../node_modules/mongodb/lib/cmap/events.js","webpack:///../node_modules/mongodb/lib/cmap/message_stream.js","webpack:///../node_modules/mongodb/lib/cmap/stream_description.js","webpack:///../node_modules/mongodb/lib/collection.js","webpack:///../node_modules/mongodb/lib/command_cursor.js","webpack:///../node_modules/mongodb/lib/constants.js","webpack:///../node_modules/mongodb/lib/core/auth/auth_provider.js","webpack:///../node_modules/mongodb/lib/core/auth/defaultAuthProviders.js","webpack:///../node_modules/mongodb/lib/core/auth/gssapi.js","webpack:///../node_modules/mongodb/lib/core/auth/mongo_credentials.js","webpack:///../node_modules/mongodb/lib/core/auth/mongocr.js","webpack:///../node_modules/mongodb/lib/core/auth/mongodb_aws.js","webpack:///../node_modules/mongodb/lib/core/auth/plain.js","webpack:///../node_modules/mongodb/lib/core/auth/scram.js","webpack:///../node_modules/mongodb/lib/core/auth/x509.js","webpack:///../node_modules/mongodb/lib/core/connection/apm.js","webpack:///../node_modules/mongodb/lib/core/connection/command_result.js","webpack:///../node_modules/mongodb/lib/core/connection/commands.js","webpack:///../node_modules/mongodb/lib/core/connection/connect.js","webpack:///../node_modules/mongodb/lib/core/connection/connection.js","webpack:///../node_modules/mongodb/lib/core/connection/logger.js","webpack:///../node_modules/mongodb/lib/core/connection/msg.js","webpack:///../node_modules/mongodb/lib/core/connection/pool.js","webpack:///../node_modules/mongodb/lib/core/connection/utils.js","webpack:///../node_modules/mongodb/lib/core/cursor.js","webpack:///../node_modules/mongodb/lib/core/error.js","webpack:///../node_modules/mongodb/lib/core/index.js","webpack:///../node_modules/mongodb/lib/core/sdam/common.js","webpack:///../node_modules/mongodb/lib/core/sdam/events.js","webpack:///../node_modules/mongodb/lib/core/sdam/monitor.js","webpack:///../node_modules/mongodb/lib/core/sdam/server.js","webpack:///../node_modules/mongodb/lib/core/sdam/server_description.js","webpack:///../node_modules/mongodb/lib/core/sdam/server_selection.js","webpack:///../node_modules/mongodb/lib/core/sdam/srv_polling.js","webpack:///../node_modules/mongodb/lib/core/sdam/topology.js","webpack:///../node_modules/mongodb/lib/core/sdam/topology_description.js","webpack:///../node_modules/mongodb/lib/core/sessions.js","webpack:///../node_modules/mongodb/lib/core/topologies/mongos.js","webpack:///../node_modules/mongodb/lib/core/topologies/read_preference.js","webpack:///../node_modules/mongodb/lib/core/topologies/replset.js","webpack:///../node_modules/mongodb/lib/core/topologies/replset_state.js","webpack:///../node_modules/mongodb/lib/core/topologies/server.js","webpack:///../node_modules/mongodb/lib/core/topologies/shared.js","webpack:///../node_modules/mongodb/lib/core/transactions.js","webpack:///../node_modules/mongodb/lib/core/uri_parser.js","webpack:///../node_modules/mongodb/lib/core/utils.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/command.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/compression.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/constants.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/get_more.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/index.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/kill_cursors.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/query.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/shared.js","webpack:///../node_modules/mongodb/lib/core/wireprotocol/write_command.js","webpack:///../node_modules/mongodb/lib/cursor.js","webpack:///../node_modules/mongodb/lib/db.js","webpack:///../node_modules/mongodb/lib/dynamic_loaders.js","webpack:///../node_modules/mongodb/lib/error.js","webpack:///../node_modules/mongodb/lib/explain.js","webpack:///../node_modules/mongodb/lib/gridfs-stream/download.js","webpack:///../node_modules/mongodb/lib/gridfs-stream/index.js","webpack:///../node_modules/mongodb/lib/gridfs-stream/upload.js","webpack:///../node_modules/mongodb/lib/gridfs/chunk.js","webpack:///../node_modules/mongodb/lib/gridfs/grid_store.js","webpack:///../node_modules/mongodb/lib/mongo_client.js","webpack:///../node_modules/mongodb/lib/operations/add_user.js","webpack:///../node_modules/mongodb/lib/operations/aggregate.js","webpack:///../node_modules/mongodb/lib/operations/bulk_write.js","webpack:///../node_modules/mongodb/lib/operations/collection_ops.js","webpack:///../node_modules/mongodb/lib/operations/collections.js","webpack:///../node_modules/mongodb/lib/operations/command.js","webpack:///../node_modules/mongodb/lib/operations/command_v2.js","webpack:///../node_modules/mongodb/lib/operations/common_functions.js","webpack:///../node_modules/mongodb/lib/operations/connect.js","webpack:///../node_modules/mongodb/lib/operations/count.js","webpack:///../node_modules/mongodb/lib/operations/count_documents.js","webpack:///../node_modules/mongodb/lib/operations/create_collection.js","webpack:///../node_modules/mongodb/lib/operations/create_indexes.js","webpack:///../node_modules/mongodb/lib/operations/cursor_ops.js","webpack:///../node_modules/mongodb/lib/operations/db_ops.js","webpack:///../node_modules/mongodb/lib/operations/delete_many.js","webpack:///../node_modules/mongodb/lib/operations/delete_one.js","webpack:///../node_modules/mongodb/lib/operations/distinct.js","webpack:///../node_modules/mongodb/lib/operations/drop.js","webpack:///../node_modules/mongodb/lib/operations/drop_index.js","webpack:///../node_modules/mongodb/lib/operations/drop_indexes.js","webpack:///../node_modules/mongodb/lib/operations/estimated_document_count.js","webpack:///../node_modules/mongodb/lib/operations/execute_db_admin_command.js","webpack:///../node_modules/mongodb/lib/operations/execute_operation.js","webpack:///../node_modules/mongodb/lib/operations/find.js","webpack:///../node_modules/mongodb/lib/operations/find_and_modify.js","webpack:///../node_modules/mongodb/lib/operations/find_one.js","webpack:///../node_modules/mongodb/lib/operations/find_one_and_delete.js","webpack:///../node_modules/mongodb/lib/operations/find_one_and_replace.js","webpack:///../node_modules/mongodb/lib/operations/find_one_and_update.js","webpack:///../node_modules/mongodb/lib/operations/geo_haystack_search.js","webpack:///../node_modules/mongodb/lib/operations/index_exists.js","webpack:///../node_modules/mongodb/lib/operations/index_information.js","webpack:///../node_modules/mongodb/lib/operations/indexes.js","webpack:///../node_modules/mongodb/lib/operations/insert_many.js","webpack:///../node_modules/mongodb/lib/operations/insert_one.js","webpack:///../node_modules/mongodb/lib/operations/is_capped.js","webpack:///../node_modules/mongodb/lib/operations/list_collections.js","webpack:///../node_modules/mongodb/lib/operations/list_databases.js","webpack:///../node_modules/mongodb/lib/operations/list_indexes.js","webpack:///../node_modules/mongodb/lib/operations/map_reduce.js","webpack:///../node_modules/mongodb/lib/operations/operation.js","webpack:///../node_modules/mongodb/lib/operations/options_operation.js","webpack:///../node_modules/mongodb/lib/operations/profiling_level.js","webpack:///../node_modules/mongodb/lib/operations/re_index.js","webpack:///../node_modules/mongodb/lib/operations/remove_user.js","webpack:///../node_modules/mongodb/lib/operations/rename.js","webpack:///../node_modules/mongodb/lib/operations/replace_one.js","webpack:///../node_modules/mongodb/lib/operations/run_command.js","webpack:///../node_modules/mongodb/lib/operations/set_profiling_level.js","webpack:///../node_modules/mongodb/lib/operations/stats.js","webpack:///../node_modules/mongodb/lib/operations/update_many.js","webpack:///../node_modules/mongodb/lib/operations/update_one.js","webpack:///../node_modules/mongodb/lib/operations/validate_collection.js","webpack:///../node_modules/mongodb/lib/read_concern.js","webpack:///../node_modules/mongodb/lib/topologies/mongos.js","webpack:///../node_modules/mongodb/lib/topologies/native_topology.js","webpack:///../node_modules/mongodb/lib/topologies/replset.js","webpack:///../node_modules/mongodb/lib/topologies/server.js","webpack:///../node_modules/mongodb/lib/topologies/topology_base.js","webpack:///../node_modules/mongodb/lib/url_parser.js","webpack:///../node_modules/mongodb/lib/utils.js","webpack:///../node_modules/mongodb/lib/write_concern.js","webpack:///../node_modules/require_optional sync","webpack:///../node_modules/require_optional/index.js","webpack:///../node_modules/saslprep/index.js","webpack:///../node_modules/saslprep/lib/memory-code-points.js","webpack:///../node_modules/sparse-bitfield/index.js","webpack:///./node_modules/graphpack/config/index.js","webpack:///./node_modules/graphpack/config/webpack.config.js","webpack:///./node_modules/graphpack/lib/server.js","webpack:///./node_modules/graphpack/lib/srcFiles.js","webpack:///(webpack)/buildin/module.js","webpack:///./src sync ^\\.\\/(context|context\\/index)\\.(js|ts)$","webpack:///./src sync ^\\.\\/(resolvers|resolvers\\/index)\\.(js|ts)$","webpack:///./src sync ^\\.\\/(schema|schema\\/index)\\.(gql|graphql|js|ts)$","webpack:///./src/db/connect.js","webpack:///./src/db/index.js","webpack:///./src/db/setting.js","webpack:///./src/resolvers/index.js","webpack:///./src/schema.graphql","webpack:///external \"apollo-server\"","webpack:///external \"apollo-server-express\"","webpack:///external \"babel-loader\"","webpack:///external \"babel-preset-graphpack\"","webpack:///external \"buffer\"","webpack:///external \"cosmiconfig\"","webpack:///external \"crypto\"","webpack:///external \"dns\"","webpack:///external \"events\"","webpack:///external \"friendly-errors-webpack-plugin\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"net\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"querystring\"","webpack:///external \"readable-stream\"","webpack:///external \"resolve-from\"","webpack:///external \"safe-buffer\"","webpack:///external \"semver\"","webpack:///external \"stream\"","webpack:///external \"tls\"","webpack:///external \"url\"","webpack:///external \"util\"","webpack:///external \"webpack\"","webpack:///external \"webpack-node-externals\"","webpack:///external \"zlib\""],"names":["DuplexStream","require","Duplex","util","Buffer","BufferList","callback","_bufs","length","_callback","piper","err","bind","on","onPipe","src","onUnpipe","removeListener","append","call","inherits","prototype","_offset","offset","tot","i","_t","_reverseOffset","blOffset","bufferId","buf","isBuffer","_appendBuffer","Array","isArray","toString","from","appendBuffer","push","_write","encoding","_read","size","Math","min","slice","consume","end","chunk","get","index","undefined","start","copy","dst","dstStart","srcStart","srcEnd","alloc","off","len","bytes","bufoff","l","concat","allocUnsafe","shallowSlice","startOffset","endOffset","buffers","pop","trunc","Number","isNaN","shift","duplicate","destroy","indexOf","search","TypeError","blIndex","buffOffset","buff","availableWindow","nativeSearchResult","revOffset","_match","searchOffset","methods","m","byteLength","module","exports","BSON","Binary","Code","DBRef","Decimal128","Double","Int32","Long","Map","MaxKey","MinKey","ObjectId","BSONRegExp","Symbol","Timestamp","BSON_INT32_MAX","BSON_INT32_MIN","BSON_INT64_MAX","pow","BSON_INT64_MIN","JS_INT_MAX","JS_INT_MIN","ObjectID","global","utils","buffer","subType","Uint8Array","Error","_bsontype","sub_type","position","BSON_BINARY_SUBTYPE_DEFAULT","toBuffer","Object","writeStringToArray","allocBuffer","BUFFER_SIZE","ArrayBuffer","put","byte_value","decoded_byte","charCodeAt","write","string","read","value","asRaw","newBuffer","convertArraytoUtf8BinaryString","toJSON","format","data","byteArray","startIndex","endIndex","result","String","fromCharCode","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_UUID","SUBTYPE_MD5","SUBTYPE_USER_DEFINED","deserialize","serializer","calculateObjectSize","MAXSIZE","serialize","object","options","checkKeys","serializeFunctions","ignoreUndefined","minInternalBufferSize","serializationIndex","finishedBuffer","serializeWithBufferAndIndex","finalBuffer","deserializeStream","numberOfDocuments","documents","docStartIndex","BSON_DATA_NUMBER","BSON_DATA_STRING","BSON_DATA_OBJECT","BSON_DATA_ARRAY","BSON_DATA_BINARY","BSON_DATA_OID","BSON_DATA_BOOLEAN","BSON_DATA_DATE","BSON_DATA_NULL","BSON_DATA_REGEXP","BSON_DATA_CODE","BSON_DATA_SYMBOL","BSON_DATA_CODE_W_SCOPE","BSON_DATA_INT","BSON_DATA_TIMESTAMP","BSON_DATA_LONG","BSON_DATA_MIN_KEY","BSON_DATA_MAX_KEY","BSON_BINARY_SUBTYPE_FUNCTION","BSON_BINARY_SUBTYPE_BYTE_ARRAY","BSON_BINARY_SUBTYPE_UUID","BSON_BINARY_SUBTYPE_MD5","BSON_BINARY_SUBTYPE_USER_DEFINED","code","scope","namespace","oid","db","$ref","$id","$db","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","EXPONENT_MAX","EXPONENT_MIN","EXPONENT_BIAS","MAX_DIGITS","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","isDigit","parseInt","divideu128","DIVISOR","fromNumber","_rem","parts","quotient","rem","shiftLeft","add","div","low_","modulo","multiply64x2","left","right","high","low","leftHigh","shiftRightUnsigned","leftLow","getLowBits","rightHigh","rightLow","productHigh","multiply","productMid","productMid2","productLow","lessThan","uhleft","high_","uhright","ulleft","ulright","fromString","isNegative","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","digits","nDigitsStored","digitsInsert","firstDigit","lastDigit","exponent","significandHigh","significandLow","biasedExponent","trim","stringMatch","match","infMatch","nanMatch","substr","digitsString","join","endOfString","roundDigit","roundBit","dIdx","significand","dec","and","equals","or","COMBINATION_MASK","EXPONENT_MASK","COMBINATION_INFINITY","COMBINATION_NAN","midh","midl","combination","biased_exponent","significand_digits","scientific_exponent","is_zero","significand_msb","significand128","j","k","ZERO","least_digits","floor","radix_position","max","$numberDecimal","valueOf","readIEEE754","endian","mLen","nBytes","e","bBE","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","writeIEEE754","c","rt","abs","log","LN2","toInt","toNumber","TWO_PWR_32_DBL_","getLowBitsUnsigned","opt_radix","radix","isZero","MIN_VALUE","radixLong","subtract","negate","radixToPower","remDiv","intval","getHighBits","getNumBitsAbs","val","bit","isOdd","other","notEquals","compare","lessThanOrEqual","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","ONE","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","fromBits","TWO_PWR_24_","NEG_ONE","halfThis","shiftRight","approx","res","log2","ceil","delta","approxRes","approxRem","xor","numBits","fromInt","cachedObj","INT_CACHE_","obj","isFinite","TWO_PWR_63_DBL_","MAX_VALUE","lowBits","highBits","str","charAt","substring","power","TWO_PWR_16_DBL_","TWO_PWR_24_DBL_","TWO_PWR_31_DBL_","TWO_PWR_48_DBL_","TWO_PWR_64_DBL_","array","_keys","_values","entry","key","v","clear","delete","splice","entries","self","next","done","forEach","has","keys","set","values","defineProperty","enumerable","inspect","MACHINE_ID","random","checkForHexRegExp","RegExp","hasBufferType","custom","id","generate","cacheHexString","__id","valid","isValid","createFromHexString","toHexString","hexTable","hexString","JSON","stringify","_Buffer","convertToHex","get_inc","getInc","time","Date","now","pid","process","inc","otherId","toLowerCase","getTimestamp","timestamp","setTime","createPk","createFromTime","decodeLookup","n","test","normalizedFunctionString","isDate","totalLength","calculateElement","toBSON","name","ordered_values","source","ignoreCase","multiline","pattern","deserializeObject","evalFunctions","cacheFunctions","cacheFunctionsCrc32","crc32","fieldsAsRaw","raw","bsonRegExp","promoteBuffers","promoteLongs","promoteValues","arrayIndex","elementType","stringSize","readDoubleLE","_index","objectSize","arrayOptions","stopIndex","BSON_DATA_UNDEFINED","long","JS_INT_MAX_LONG","JS_INT_MIN_LONG","BSON_DATA_DECIMAL128","decimal128","toObject","binarySize","totalBinarySize","_buffer","regExpOptions","optionsArray","functionString","hash","isolateEvalWithHash","functionCache","isolateEval","totalSize","scopeObject","BSON_DATA_DBPOINTER","oidBuffer","split","collection","eval","regexp","ignoreKeys","isRegExp","serializeString","numberOfWrittenBytes","serializeNumber","longVal","serializeNull","serializeBoolean","serializeDate","dateInMilis","getTime","serializeRegExp","serializeBSONRegExp","sort","serializeMinMax","serializeObjectId","serializeBuffer","serializeObject","depth","path","serializeInto","serializeDecimal128","serializeLong","serializeInt32","serializeDouble","serializeFunction","serializeCode","codeSize","serializeBinary","serializeSymbol","serializeDBRef","startingIndex","type","iterator","fn","replace","item","apply","arguments","radixTimestamp","Denque","_head","_tail","_capacity","capacity","_capacityMask","_list","_fromArray","peekAt","peek","peekFront","peekBack","unshift","_growArray","head","_shrinkArray","tail","removeOne","remove","count","removed","del_count","toArray","temp","arg_len","arguments_index","leng","isEmpty","_copyArray","fullCopy","newArray","list","Pager","pageSize","opts","updates","Uint16Array","pages","maxPages","level","deduplicate","zeros","updated","page","lastUpdate","_array","noAllocate","grow","factor","arr","p","first","Page","b","truncate","empty","ptr","pager","old","cpy","fill","out","core","Instrumentation","connect","MongoError","MongoNetworkError","MongoTimeoutError","MongoServerSelectionError","MongoParseError","MongoWriteConcernError","MongoBulkWriteError","BulkWriteError","Admin","MongoClient","Db","Collection","Server","ReplSet","Mongos","ReadPreference","GridStore","Chunk","Logger","AggregationCursor","CommandCursor","Cursor","GridFSBucket","CoreServer","CoreConnection","Connection","instrument","instrumentation","applyWriteConcern","AddUserOperation","ExecuteDbAdminCommandOperation","RemoveUserOperation","ValidateCollectionOperation","ListDatabasesOperation","executeOperation","topology","promiseLibrary","command","args","commandOperation","buildInfo","cmd","buildinfo","buildInfoOperation","serverInfo","serverInfoOperation","serverStatus","serverStatusOperation","ping","pingOperation","addUser","username","password","assign","dbName","addUserOperation","removeUser","removeUserOperation","validateCollection","collectionName","validateCollectionOperation","listDatabases","replSetGetStatus","replSetGetStatusOperation","CursorState","constructor","operation","batchSize","state","CLOSED","isDead","create","message","driver","setCursorBatchSize","geoNear","document","addToPipeline","$geoNear","group","$group","limit","$limit","$match","maxTimeMS","destination","$out","project","$project","lookup","$lookup","redact","$redact","skip","$skip","$sort","unwind","field","$unwind","getLogger","logger","EventEmitter","$MongoClient","$prototypeConnect","monitorCommands","event","emit","uninstrument","asyncIterator","cursor","Promise","resolve","then","close","toError","handleCallback","applyRetryableWrites","executeLegacyOperation","isPromiseLike","hasAtomicOperators","maxWireVersion","WRITE_CONCERN_ERROR","INSERT","UPDATE","REMOVE","bson","Batch","batchType","originalZeroIndex","currentIndex","originalIndexes","operations","sizeBytes","BulkWriteResult","bulkResult","ok","nInserted","nUpserted","nMatched","nModified","nRemoved","getInsertedIds","insertedIds","getUpsertedIds","upserted","getUpsertedIdAt","getRawResponse","hasWriteErrors","writeErrors","getWriteErrorCount","getWriteErrorAt","getWriteErrors","getLastOp","lastOp","getWriteConcernError","writeConcernErrors","errmsg","WriteConcernError","isOk","WriteError","getOperation","op","mergeBatchResults","batch","writeError","opTime","lastOpTS","lastOpT","ts","t","opTimeTS","opTimeT","_id","writeConcernError","executeCommands","bulkOperation","batches","resultHandler","handleMongoWriteConcernError","writeResult","mergeResult","handleWriteError","finalOptionsHandler","wrappedWriteConcernError","error","errMessage","FindOperators","update","updateDocument","upsert","currentOp","q","selector","u","multi","hint","addToOperationsList","updateOne","replaceOne","replacement","deleteOne","BulkOperationBase","isOrdered","executed","isMaster","lastIsMaster","usingAutoEncryption","autoEncrypter","maxBsonObjectSize","maxBatchSizeBytes","maxWriteBatchSize","maxKeySize","finalOptions","writeConcern","currentBatch","currentBatchSize","currentBatchSizeBytes","currentInsertBatch","currentUpdateBatch","currentRemoveBatch","bypassDocumentValidation","insert","forceServerObjectId","find","updateMany","filter","collation","arrayFilters","removeMany","deleteMany","insertOne","insertMany","_handleEarlyError","reject","bulkExecute","_writeConcern","executedError","emptyBatchError","execute","ret","config","ordered","operationId","retryWrites","some","msg","common","docType","bsonSize","OrderedBulkOperation","initializeOrderedBulkOp","Bulk","UnorderedBulkOperation","initializeUnorderedBulkOp","isResumableError","relayEvents","maybePromise","calculateDurationInMs","AggregateOperation","kResumeQueue","CHANGE_STREAM_OPTIONS","CURSOR_OPTIONS","CHANGE_DOMAIN_TYPES","COLLECTION","DATABASE","CLUSTER","ChangeStream","parent","pipeline","serverConfig","readPreference","createChangeStreamCursor","closed","eventName","listenerCount","change","processNewChange","removeAllListeners","resumeToken","hasNext","cb","getCursor","processError","isClosed","pipe","pipeDestinations","unpipe","stream","streamOptions","pause","resume","ChangeStreamCursor","_resumeToken","startAtOperationTime","startAfter","resumeAfter","token","resumeOptions","optionName","resumeKey","hasReceived","server","cacheResumeToken","bufferedCount","cursorState","postBatchResumeToken","_processBatch","batchName","response","_initializeCursor","operationTime","_getMore","changeStreamStageOptions","fullDocument","applyKnownOptions","allChangesForCluster","$changeStream","cursorOptions","changeStreamCursor","cursorStream","pipeDestination","target","optionNames","SELECTION_TIMEOUT","waitForTopologyConnected","setTimeout","timeout","isConnected","changeStream","noResumeTokenError","resumeWithCursor","newCursor","processResumeQueue","unresumableError","request","MessageStream","MongoNetworkTimeoutError","CommandResult","StreamDescription","wp","apm","updateSessionFromResponse","uuidV4","kStream","kQueue","kMessageStream","kGeneration","kLastUseTime","kClusterTime","kDescription","kIsMaster","kAutoEncrypter","address","streamIdentifier","socketTimeout","host","port","destroyed","generation","messageHandler","beforeHandshake","description","ismaster","receiveResponse","idleTime","clusterTime","markAvailable","force","ns","makeServerTrampoline","query","getMore","killCursors","ops","connection","pool","conn","responseTo","operationDescription","moreToCome","requestId","socketTimeoutOverride","parse","session","$clusterTime","$err","fullResult","remoteAddress","remotePort","noResponse","documentsReturnedIn","compressor","agreedCompressor","zlibCompressionLevel","CommandStartedEvent","started","reply","CommandFailedEvent","CommandSucceededEvent","writeCommand","makeCounter","eachAsync","errors","PoolClosedError","WaitQueueTimeoutError","events","ConnectionPoolCreatedEvent","ConnectionPoolClosedEvent","ConnectionCreatedEvent","ConnectionReadyEvent","ConnectionClosedEvent","ConnectionCheckOutStartedEvent","ConnectionCheckOutFailedEvent","ConnectionCheckedOutEvent","ConnectionCheckedInEvent","ConnectionPoolClearedEvent","kLogger","kConnections","kPermits","kMinPoolSizeTimer","kConnectionCounter","kCancellationToken","kWaitQueue","kCancelled","VALID_POOL_OPTIONS","Set","resolveOptions","defaults","newOptions","reduce","hasOwnProperty","freeze","ConnectionPool","connectionType","maxPoolSize","minPoolSize","maxIdleTimeMS","waitQueueTimeoutMS","metadata","minSize","maxSize","setMaxListeners","nextTick","ensureMinPoolSize","totalConnectionCount","availableConnectionCount","waitQueueSize","checkOut","waitQueueMember","timer","processWaitQueue","checkIn","poolClosed","stale","connectionIsStale","willDestroy","reason","destroyConnection","clearTimeout","return","withConnection","fnErr","createConnection","connectionIsIdle","connectOptions","debug","isStale","isIdle","ConnectionPoolMonitoringEvent","connectionId","CMAP_EVENT_NAMES","decompress","Response","BinMsg","OP_COMPRESSED","opcodes","OP_MSG","MESSAGE_HEADER_SIZE","COMPRESSION_DETAILS_SIZE","compress","compressorIDs","uncompressibleCommands","Msg","kDefaultMaxBsonMessageSize","kBuffer","maxBsonMessageSize","_","processIncomingData","shouldCompress","canCompress","toBin","concatenatedOriginalCommandBuffer","messageToBeCompressed","originalCommandOpCode","readInt32LE","compressedMessage","msgHeader","writeInt32LE","compressionDetails","writeUInt8","commandDoc","commandName","sizeOfMessage","messageHeader","opCode","ResponseType","responseOptions","messageBody","fromCompressed","compressorID","compressedBuffer","parseServerType","RESPONSE_FIELDS","minWireVersion","maxMessageSizeBytes","compressors","compression","deprecate","deprecateOptions","checkCollectionName","normalizeHintField","decorateCommand","decorateWithCollation","decorateWithReadConcern","formattedOrderClause","unordered","WriteConcern","ReadConcern","MongoDBNamespace","ensureIndex","parallelCollectionScan","removeDocuments","save","updateDocuments","BulkWriteOperation","CountDocumentsOperation","CreateIndexesOperation","DeleteManyOperation","DeleteOneOperation","DistinctOperation","DropCollectionOperation","DropIndexOperation","DropIndexesOperation","EstimatedDocumentCountOperation","FindOperation","FindOneOperation","FindAndModifyOperation","FindOneAndDeleteOperation","FindOneAndReplaceOperation","FindOneAndUpdateOperation","GeoHaystackSearchOperation","IndexesOperation","IndexExistsOperation","IndexInformationOperation","InsertManyOperation","InsertOneOperation","IsCappedOperation","ListIndexesOperation","MapReduceOperation","OptionsOperation","RenameOperation","ReIndexOperation","ReplaceOneOperation","StatsOperation","UpdateManyOperation","UpdateOneOperation","mergeKeys","pkFactory","internalHint","slaveOk","collectionHint","fromOptions","readConcern","DEPRECATED_FIND_OPTIONS","deprecatedOptions","optionsIndex","console","warn","object_size","projection","fields","mode","findCommand","allowDiskUse","awaitdata","awaitData","noCursorTimeout","doc","insertOneOperation","docs","insertManyOperation","bulkWrite","bulkWriteOperation","keepGoing","deleteOneOperation","deleteManyOperation","findOne","findOneOperation","rename","newName","PRIMARY","renameOperation","drop","dropCollectionOperation","optionsOperation","isCapped","isCappedOperation","createIndex","fieldOrSpec","createIndexesOperation","createIndexes","indexSpecs","dropIndex","indexName","dropIndexOperation","dropIndexes","dropIndexesOperation","dropAllIndexes","reIndex","reIndexOperation","listIndexes","indexExists","indexes","indexExistsOperation","indexInformation","indexInformationOperation","estimatedDocumentCount","estimatedDocumentCountOperation","countDocuments","countDocumentsOperation","distinct","queryOption","optionsOption","distinctOperation","indexesOperation","stats","statsOperation","findOneAndDelete","findOneAndReplace","findOneAndUpdate","findAndModify","_findAndModify","findAndRemove","aggregate","explain","watch","numCursors","skipSessions","geoHaystackSearch","x","y","geoHaystackSearchOperation","condition","initial","finalize","mapReduce","map","mapReduceOperation","setReadPreference","INIT","SYSTEM_NAMESPACE_COLLECTION","SYSTEM_INDEX_COLLECTION","SYSTEM_PROFILE_COLLECTION","SYSTEM_USER_COLLECTION","SYSTEM_COMMAND_COLLECTION","SYSTEM_JS_COLLECTION","AuthContext","credentials","AuthProvider","prepare","handshakeDoc","context","auth","MongoCR","X509","Plain","GSSAPI","ScramSHA1","ScramSHA256","MongoDBAWS","defaultAuthProviders","mongocr","x509","plain","gssapi","dns","retrieveKerberos","kerberos","authContext","externalCommand","makeKerberosClient","client","step","payload","saslStart","negotiate","saslContinue","conversationId","mechanismProperties","serviceName","performGssapiCanonicalizeHostName","initOptions","user","initializeClient","platform","mechanism","autoAuthorize","retries","unwrap","wrap","wrapped","canonicalizeHostName","gssapiCanonicalizeHostName","resolveCname","r","getDefaultAuthMechanism","saslSupportedMechs","MongoCredentials","env","AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY","AWS_SESSION_TOKEN","resolveAuthMechanism","crypto","getnonce","nonce","md5","createHash","hash_password","digest","authenticateCommand","authenticate","http","url","aws4","ASCII_N","AWS_RELATIVE_URI","AWS_EC2_URI","AWS_EC2_PATH","makeTempCredentials","tempCredentials","randomBytes","serverResponse","h","serverNonce","body","sign","method","region","deriveRegion","service","headers","accessKeyId","secretAccessKey","authorization","Authorization","date","a","creds","AccessKeyId","SecretAccessKey","Token","AWS_CONTAINER_CREDENTIALS_RELATIVE_URI","json","roleName","uri","req","setEncoding","parsed","retrieveBSON","saslprep","ScramSHA","cryptoMethod","speculativeAuthenticate","makeFirstMessage","continueScramConversation","executeScram","cleanUsername","clientFirstMessageBare","skipEmptyExchange","saslStartCmd","_err","resolveError","processedPassword","passwordDigest","dict","parsePayload","iterations","salt","rnonce","startsWith","withoutProof","saltedPassword","HI","clientKey","HMAC","serverKey","storedKey","H","authMessage","clientSignature","clientProof","clientFinal","serverSignature","saslContinueCmd","parsedResponse","compareDigest","retrySaslContinueCmd","valueParts","text","createHmac","_hiCache","_hiCacheCount","_hiCachePurge","hiLengthMap","sha256","sha1","saltedData","pbkdf2Sync","lhs","rhs","timingSafeEqual","x509AuthenticateCommand","KillCursor","GetMore","SENSITIVE_COMMANDS","extractCommandName","databaseName","generateConnectionId","maybeRedact","isLegacyPool","queue","LEGACY_FIND_QUERY_MAP","$query","$orderby","$hint","$comment","$maxScan","$max","$min","$returnKey","$showDiskLoc","$maxTimeMS","$snapshot","LEGACY_FIND_OPTIONS_MAP","numberToSkip","numberToReturn","returnFieldsSelector","OP_QUERY_KEYS","extractCommand","cursorId","cursors","cursorIds","pre32Limit","$explain","extractReply","nextBatch","cursorsUnknown","firstBatch","extractConnectionDetails","connectionDetails","commandObj","duration","failure","_requestId","OPTS_TAILABLE_CURSOR","OPTS_SLAVE","OPTS_OPLOG_REPLAY","OPTS_NO_CURSOR_TIMEOUT","OPTS_AWAIT_DATA","OPTS_EXHAUST","OPTS_PARTIAL","CURSOR_NOT_FOUND","QUERY_FAILURE","SHARD_CONFIG_STALE","AWAIT_CAPABLE","Query","returnFieldSelector","getRequestId","maxBsonSize","tailable","oplogReplay","exhaust","partial","incRequestId","nextRequestId","flags","header","OP_QUERY","OP_GETMORE","OP_KILL_CURSORS","msgBody","responseFlags","startingFrom","numberReturned","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","isParsed","_options","net","tls","WIRE_CONSTANTS","makeClientMetadata","MAX_SUPPORTED_WIRE_VERSION","MAX_SUPPORTED_SERVER_VERSION","MIN_SUPPORTED_WIRE_VERSION","MIN_SUPPORTED_SERVER_VERSION","AUTH_PROVIDERS","cancellationToken","ConnectionType","family","makeConnection","socket","performInitialHandshake","isModernConnectionType","checkSupportedServer","serverVersionHighEnough","serverVersionLowEnough","prepareHandshakeDocument","handshakeOptions","connectTimeoutMS","connectionTimeout","supportedServerErr","agreedCompressors","lastIsMasterMS","arbiterOnly","resolvedCredentials","authProvider","LEGAL_SSL_SOCKET_OPTIONS","parseConnectOptions","rejectUnauthorized","parseSslOptions","checkServerIdentity","servername","SOCKET_ERROR_EVENTS","useSsl","ssl","keepAlive","keepAliveInitialDelay","noDelay","round","disableRenegotiation","setKeepAlive","setNoDelay","connectEvent","cancellationHandler","errorHandler","connectHandler","connectionFailureError","authorizationError","once","debugOptions","parseHeader","DEFAULT_MAX_BSON_MESSAGE_SIZE","DEBUG_FIELDS","connectionAccountingSpy","connectionAccounting","connections","tag","isDebug","flushing","writeStream","timedOut","hashedName","workItems","timeoutHandler","closeHandler","dataHandler","addConnection","setSocketTimeout","resetSocketTimeout","enableConnectionAccounting","spy","disableConnectionAccounting","unref","flush","workItem","deleteConnection","writable","noop","CONNECTION_ERROR_EVENTS","hadError","processMessage","ResponseConstructor","decompressedMsgBody","bytesRead","remainingBytesToRead","emitBuffer","stubBuffer","newData","newStubBuffer","errorObject","trace","bin","parseState","f","classFilters","filteredClasses","currentLogger","className","loggerLevel","dateTime","meta","isWarn","info","isInfo","isError","reset","setCurrentLogger","setLevel","_level","databaseNamespace","OPTS_CHECKSUM_PRESENT","OPTS_MORE_TO_COME","OPTS_EXHAUST_ALLOWED","$readPreference","checksumPresent","exhaustAllowed","makeDocumentSegment","writeUInt32LE","payloadTypeBuffer","documentBuffer","serializeBson","payloadType","readUInt8","readUInt32LE","makeStateMachine","DISCONNECTED","CONNECTING","CONNECTED","DRAINING","DESTROYING","DESTROYED","stateTransition","CONNECTION_EVENTS","Pool","ca","crl","cert","passphrase","reconnect","reconnectInterval","reconnectTries","domainsEnabled","legacyCompatMode","retriesLeft","reconnectId","reconnectError","availableConnections","inUseConnections","connectingConnections","executing","numberOfConsecutiveTimeouts","connectionIndex","_messageHandler","_connectionCloseHandler","connectionFailureHandler","_connectionErrorHandler","_connectionTimeoutHandler","_connectionParseErrorHandler","resetPoolState","_connectionFailHandled","removeConnection","socketCount","attemptReconnect","totalConnections","moveConnectionBetween","to","monitoring","handleOperationCallback","_execute","immediateRelease","responseDoc","allConnections","isDestroyed","isDisconnected","logout","checkStatus","flushMonitoringOperations","serializeCommand","originalCommandBuffer","domain","oldCb","serializedBuffers","foundValidConnection","writeSuccessful","require_optional","debugFields","finaloptions","native","optionalBSON","noSnappyWarning","retrieveSnappy","snappy","uncompress","compressSync","uncompressSync","collationNotSupported","isUnifiedTopology","Readable","SUPPORTS","mergeOptions","OperationBase","OPEN","GET_MORE","CoreCursor","objectMode","disconnectHandler","cursorIndex","dead","killed","init","notified","currentLimit","transforms","topologyOptions","lastCursorId","cursorBatchSize","setCursorLimit","cursorLimit","setCursorSkip","cursorSkip","_next","nextFunction","clone","clonedOptions","isKilled","isNotified","readBufferedDocuments","number","unreadDocumentsLength","elements","kill","rewind","listeners","transform","_endSession","owner","clearSession","endSession","shouldCheckForSessionSupport","selectServer","primaryPreferred","setCursorNotified","queryCallback","virtual","serverSelectOptions","addObjectAndMethod","commandOptions","ASYNC_ITERATOR","isConnectionDead","_setCursorNotifiedImpl","isCursorDeadButNotkilled","isCursorDeadAndKilled","isCursorKilled","setCursorDeadAndNotified","_type","kErrorLabels","stack","errorLabels","captureStackTrace","hasErrorLabel","label","addErrorLabel","kBeforeHandshake","isNetworkErrorBeforeHandshake","makeWriteConcernResultObject","input","output","codeName","RETRYABLE_ERROR_CODES","RETRYABLE_WRITE_ERROR_CODES","isRetryableWriteError","isRetryableError","SDAM_RECOVERING_CODES","SDAM_NOTMASTER_CODES","SDAM_NODE_SHUTTING_DOWN_ERROR_CODES","isRecoveringError","isNotMasterError","isNodeShuttingDownError","isSDAMUnrecoverableError","EJSON","retrieveEJSON","BSONNative","Sessions","Topology","parseConnectionString","STATE_CLOSING","STATE_CLOSED","STATE_CONNECTING","STATE_CONNECTED","TopologyType","Single","ReplicaSetNoPrimary","ReplicaSetWithPrimary","Sharded","Unknown","ServerType","Standalone","PossiblePrimary","RSPrimary","RSSecondary","RSArbiter","RSOther","RSGhost","serverType","serverDescription","topologyType","servers","TOPOLOGY_DEFAULTS","useUnifiedTopology","localThresholdMS","serverSelectionTimeoutMS","heartbeatFrequencyMS","minHeartbeatFrequencyMS","drainTimerQueue","clearAndRemoveTimerFrom","timers","ServerDescriptionChangedEvent","topologyId","previousDescription","newDescription","ServerOpeningEvent","ServerClosedEvent","TopologyDescriptionChangedEvent","TopologyOpeningEvent","TopologyClosedEvent","ServerHeartbeatStartedEvent","ServerHeartbeatSucceededEvent","ServerHeartbeatFailedEvent","makeInterruptableAsyncInterval","sdamEvents","kServer","kMonitorId","kConnection","kRTTPinger","kRoundTripTime","STATE_IDLE","STATE_MONITORING","INVALID_REQUEST_CHECK_STATES","isInCloseState","monitor","Monitor","monitorServer","interval","minInterval","immediate","requestCheck","wake","topologyVersion","resetMonitorState","stop","checkServer","failureHandler","maxAwaitTimeMS","isAwaitable","makeTopologyVersion","RTTPinger","roundTripTime","tv","processId","counter","measureRoundTripTime","rttPinger","measureAndReschedule","ServerDescription","compareTopologyVersion","isTransactionCommand","kMonitor","poolOptions","markServerUnknown","calculateRoundTripTime","basicReadValidations","wireProtocolCommand","makeOperationHandler","executeWriteOperation","supportsRetryableWrites","logicalSessionTimeoutMinutes","oldRtt","alpha","unacknowledgedWrite","w","o","shouldHandleStateChangeError","etv","stv","inActiveTransaction","inTransaction","handleOperationResult","hasEnded","serverSession","isDirty","arrayStrictEqual","tagsStrictEqual","errorStrictEqual","WRITABLE_SERVER_TYPES","DATA_BEARING_SERVER_TYPES","ISMASTER_FIELDS","hosts","passives","arbiters","tags","lastUpdateTime","lastWriteDate","lastWrite","me","allHosts","isReadable","isWritable","isDataBearing","chopLength","topologyVersionsEqual","setName","setVersion","electionId","primary","isreplicaset","hidden","secondary","IDLE_WRITE_PERIOD","SMALLEST_MAX_STALENESS_SECONDS","writableServerSelector","topologyDescription","latencyWindowReducer","maxStalenessReducer","maxStalenessSeconds","maxStaleness","maxStalenessVariance","primaryFilter","stalenessMS","staleness","sMax","tagSetMatch","tagSet","serverTags","serverTagKeys","tagSetReducer","serversMatchingTagset","matched","secondaryFilter","nearestFilter","knownFilter","readPreferenceServerSelector","commonWireVersion","PRIMARY_PREFERRED","NEAREST","selectedServers","SECONDARY_PREFERRED","matchesParentDomain","srvAddress","parentDomain","regex","srv","endsWith","SrvPollingEvent","srvRecords","addresses","record","SrvPoller","srvHost","rescanSrvIntervalMS","haMode","_timeout","intervalMS","schedule","_poll","success","parentDomainMismatch","srvRecord","resolveSrv","finalAddresses","TopologyDescription","isRetryableWritesSupported","createCompressionInfo","ClientSession","resolveClusterTime","getMMAPError","emitDeprecationWarning","ServerSessionPool","serverSelection","globalTopologyCounter","SERVER_RELAY_EVENTS","LOCAL_SERVER_EVENTS","DEPRECATED_OPTIONS","seedlist","parseStringSeedlist","topologyTypeFromSeedlist","serverDescriptions","seed","domain_socket","replicaSet","cursorFactory","sessionPool","sessions","connectionTimers","srvPoller","detectTopologyDescriptionChange","ev","previousType","newType","handleSrvPolling","srvPollingHandler","parserType","connectServers","translate","drainWaitQueue","endAllPooledSessions","destroyServer","isSharded","transaction","serverSelector","timeoutError","hasKnownServers","hasDataBearingServers","hasSessionSupport","startSession","clientOptions","endSessions","serverUpdateHandler","hasServer","isStaleServerDescription","previousTopologyDescription","previousServerDescription","equalDescriptions","compatibilityError","updateServers","willRetryWrite","retrying","isWriteCommand","shouldRetryOperation","incrementTransactionNumber","CursorClass","clientMetadata","sd","RETRYABLE_WRITE_OPERATIONS","incomingServerDescription","currentServerDescription","currentTopologyVersion","directConnection","rs_name","randomSelection","createAndConnectServer","connectDelay","connectTimer","serverAddress","handler","newArgs","updateFromSrvPollingEvent","membersToProcess","selectedDescriptions","selectedServerDescription","selectedServer","isActive","pinServer","maxSetVersion","maxElectionId","compatible","enumberable","readableServers","newAddresses","topologyTypeForServerType","updateRsFromPrimary","updateRsNoPrimaryFromMember","checkHasPrimary","updateRsWithPrimaryFromMember","descriptionsWithError","compareObjectId","oid1","oid2","oid1Buffer","oid2Buffer","oid1String","oid2String","localeCompare","currentAddresses","responseAddresses","addr","Transaction","TxnState","minWireVersionForShardedTransactions","assertAlive","kServerSession","supports","causalConsistency","initialClusterTime","explicit","defaultTransactionOptions","acquire","completeEndSession","release","abortTransaction","advanceOperationTime","txnNumber","startTransaction","topologyMaxWireVersion","transition","STARTING_TRANSACTION","commitTransaction","endTransaction","withTransaction","startTime","attemptTransaction","MAX_WITH_TRANSACTION_TIMEOUT","UNSATISFIABLE_WRITE_CONCERN_CODE","UNKNOWN_REPL_WRITE_CONCERN_CODE","MAX_TIME_MS_EXPIRED_CODE","NON_DETERMINISTIC_WRITE_CONCERN_ERRORS","hasNotTimedOut","isUnknownTransactionCommitResult","isMaxTimeMSExpiredError","attemptTransactionCommit","catch","USER_EXPLICIT_TXN_END_STATES","NO_TRANSACTION","TRANSACTION_COMMITTED","TRANSACTION_ABORTED","userExplicitlyEndedTransaction","promise","maybeRetryOrThrow","txnState","TRANSACTION_COMMITTED_EMPTY","wtimeout","commandHandler","unpinServer","transactionError","recoveryToken","supportsRecoveryToken","_reply","useRecoveryToken","ServerSession","lastUse","hasTimedOut","sessionTimeoutMinutes","idleTimeMinutes","pooledSession","commandSupportsReadConcern","geoSearch","inline","applySession","lsid","isRetryableWrite","shouldApplyReadConcern","afterClusterTime","autocommit","TRANSACTION_IN_PROGRESS","_recoveryToken","diff","cloneOptions","SessionMixins","legacyIsRetryableWriteError","UNREFERENCED","newState","legalTransitions","disconnected","connecting","connected","unreferenced","legalStates","handlers","seeds","haInterval","connectingProxies","connectedProxies","disconnectedProxies","haTimeoutId","emitSDAMEvent","SERVER_EVENTS","connectProxies","handleEvent","moveServerFrom","emitTopologyDescriptionChanged","handleInitialConnectEvent","_this","removeProxyFrom","topologyMonitor","firstConnect","timeoutInterval","pickProxy","lowerBoundLatency","proxy","reconnectProxies","proxies","_handleEvent","_self","_server","pingServer","latencyMS","durationMS","serverCount","serverDestroyed","FinalCursor","getDescription","diffResult","tagsHasMaxStalenessSeconds","tagsHasHedge","hedge","tagsHasOptions","SECONDARY","VALID_MODES","readPreferenceTags","preference","inheritedReadPreference","needSlaveOk","secondaryPreferred","nearest","ReplSetState","Timeout","Interval","acceptableLatency","replicaSetState","connectingServers","types","initialConnectState","fullsetup","all","intervalIds","rexecuteOperations","hasPrimaryAndSecondary","hasPrimary","executePrimary","hasSecondary","executeSecondary","connectNewServers","existingServerIdx","findIndex","connectingServer","updateServerMaxStaleness","__host","_process","_haInterval","intervalId","isRunning","secondaryOnlyConnectionAllowed","unknownServers","executeReconnect","monitoringFrequencey","intervalTime","addServerToList","shouldTriggerConnect","isConnecting","readPreferenceSecondary","destroyCount","allServers","secondaries","SERVER_SELECTION_TIMEOUT_MS","SERVER_SELECTION_INTERVAL_MS","lastError","_selectServer","pickServer","getServers","ghosts","replicasetDescription","hasPrimaryOrSecondary","ignoreArbiters","serversToDestroy","serverName","removeType","removeFrom","isArbiter","inList","passive","ismasterElectionId","compareObjectIds","ismasterSetVersion","normalizedHosts","locationIndex","currentElectionId","currentSetVersion","currentSetName","ismasterSetName","addToList","updateSecondariesMaxStaleness","allservers","pickNearest","pickNearestMaxStalenessSeconds","filterByTags","filteredServers","tagsArray","serverTag","found","maxStalenessMS","lowest","id1","id2","desc","wireProtocol","sdam","serverAccounting","inTopology","monitoringInterval","monitoringProcessId","initialConnect","settings","enableServerAccounting","disableServerAccounting","monitoringProcess","eventHandler","emitServerDescriptionChanged","getTopologyType","basicWriteValidations","_destroyed","emitClose","emitDestroy","MMAPv1_RETRY_WRITES_ERROR_CODE","getPreviousDescription","getPreviousTopologyDescription","changedIsMaster","currentIsmaster","currentType","inquireServerState","isMasterLatencyMS","inquireServerStateTimeout","setInterval","clearInterval","func","previous","current","prevServer","currServer","RETRYABLE_WIRE_VERSION","MMAPv1_RETRY_WRITES_ERROR_MESSAGE","includes","newErr","originalError","stateMachine","maxCommitTimeMS","_pinnedServer","isPinned","nextState","nextStates","URL","qs","HOSTS_RX","FILE_PATH_OPTIONS","parseSrvConnectionString","directconnection","hostname","domainLength","pathname","PROTOCOL_MONGODB_SRV","lookupAddress","protocol","resolveTxt","finalString","parseQueryStringItemValue","idx","pair","STRING_OPTIONS","numericValue","parseFloat","BOOLEAN_OPTIONS","AUTH_MECHANISMS","CASE_TRANSLATION","replicaset","connecttimeoutms","sockettimeoutms","maxpoolsize","minpoolsize","maxidletimems","waitqueuemultiple","waitqueuetimeoutms","wtimeoutms","readconcern","readconcernlevel","readpreference","maxstalenessseconds","readpreferencetags","authsource","authmechanism","authmechanismproperties","gssapiservicename","localthresholdms","serverselectiontimeoutms","serverselectiontryonce","heartbeatfrequencyms","retrywrites","uuidrepresentation","zlibcompressionlevel","tlsallowinvalidcertificates","tlsallowinvalidhostnames","tlsinsecure","tlscafile","tlscertificatekeyfile","tlscertificatekeyfilepassword","applyConnectionStringOption","decodeURIComponent","every","SERVICE_NAME","gssapiServiceName","SERVICE_REALM","gssapiServiceRealm","CANONICALIZE_HOST_NAME","splitArrayOfMultipleReadPreferenceTags","caseTranslate","USERNAME_REQUIRED_MECHANISMS","parsedTags","individualTag","splitTag","applyAuthExpectations","authSource","authMechanism","parseQueryString","parsedQueryString","checkTLSOptions","normalizedKey","parsedValue","translateTLSOptions","queryString","tlsInsecure","sslValidate","tlsAllowInvalidHostnames","tlsAllowInvalidCertificates","tlsCAFile","sslCA","tlsCertificateKeyFile","tlsCertificateFile","sslCert","sslKey","tlsCertificateKeyFilePassword","sslPass","queryStringKeys","tlsValue","assertTlsOptionsAreEqual","sslValue","queryStringHasTLSOption","optionValue","firstValue","PROTOCOL_MONGODB","SUPPORTED_PROTOCOLS","cap","dbAndQuery","parsedOptions","parseError","unescape","authorityParts","authParts","hostParsingError","parsedHost","defaultDatabase","authError","os","requireOptional","listener","emitter","noEJSONError","setBSONModule","topologyOrServer","eachFn","awaiting","eachCallback","eachAsyncSeries","arr2","elt","tags2","tagsKeys","tags2Keys","stateTable","version","architecture","arch","endianness","driverInfo","appname","application","getReadPreference","isClientEncryptionEnabled","wireVersion","_command","_cryptCommand","shouldUseOpMsg","supportsOpMsg","finalCmd","cmdNs","commandResponseHandler","__nodejs_mock_server__","decrypt","decrypted","encrypt","encrypted","Snappy","zlib","dataToBeCompressed","zlibOptions","deflate","compressedData","inflate","collectionNamespace","applyCommonQueryOptions","getMoreOp","queryOptions","getMoreCmd","killCursor","killCursorCmd","decorateWithExplain","Explain","prepareLegacyFindQuery","findCmd","prepareFindCommand","sortValue","sortObject","sortDirection","singleBatch","comment","maxScan","returnKey","showRecordId","showDiskLoc","snapshot","OP_REPLY","OP_UPDATE","OP_INSERT","OP_DELETE","opsField","Transform","PassThrough","Aspect","each","CountOperation","numberOfRetries","tailableRetryInterval","currentNumberOfRetries","explicitlyIgnoreSession","addCursorFlag","setCursorOption","flag","addQueryModifier","keyOrList","direction","order","$meta","internalCallback","fulfill","items","fetchDocs","skipKillCursors","applySkipLimit","countOperation","oldTransform","transformStream","verbosity","hasAspect","EXPLAINABLE","maxTimeMs","getSingleProperty","filterOptions","mergeOptionsAndWriteConcern","CONSTANTS","createListener","evaluate","profilingInfo","validateDatabaseName","CollectionsOperation","CommandOperation","RunCommandOperation","CreateCollectionOperation","DropDatabaseOperation","ListCollectionsOperation","ProfilingLevelOperation","SetProfilingLevelOperation","legalOptionNames","dbCache","children","bufferMaxEntries","parentDb","nativeParser","native_parser","noListener","super_","admin","collectionKeys","strict","listCollectionOptions","nameOnly","listCollections","collections","createCollection","createCollectionOperation","commandObject","dbStats","parameters","renameCollection","fromCollection","toCollection","new_collection","dropCollection","dropDatabase","dropDatabaseOperation","collectionsOperation","executeDbAdminCommand","executeDbAdminCommandOperation","addChild","setProfilingLevel","setProfilingLevelOperation","profilingLevel","profilingLevelOperation","loadCollection","loadCursor","loadDb","GET_MORE_RESUMABLE_CODES","ExplainVerbosity","queryPlanner","queryPlannerExtended","executionStats","allPlansExecution","GridFSBucketReadStream","chunks","files","expected","expectedEnd","file","waitForFile","doRead","throwIfInitialized","abort","__handleError","bytesRemaining","expectedN","expectedLength","chunkSize","sliceStart","sliceEnd","bytesToSkip","atEndOfStream","bytesLeftToRead","bytesToTrim","findOneOptions","identifier","filename","handleStartOption","files_id","$gte","handleEndOption","Emitter","GridFSBucketWriteStream","shallowClone","DEFAULT_GRIDFS_BUCKET_OPTIONS","bucketName","chunkSizeBytes","_chunksCollection","_filesCollection","checkedIndexes","calledOpenUploadStream","openUploadStream","openUploadStreamWithId","openDownloadStream","_delete","openDownloadStreamByName","uploadDate","revision","_rename","$set","_drop","ERROR_NAMESPACE_NOT_FOUND","bucket","Writable","bufToStore","disableMD5","pos","streamEnd","outstandingRequests","errored","aborted","checkIndexes","waitForIndexes","doWrite","checkAborted","writeRemnant","createChunkDoc","filesId","checkChunksIndex","background","unique","hasChunksIndex","indexOptions","getWriteOptions","checkDone","filesDoc","createFilesDoc","contentType","aliases","hasFileIndex","inputBuf","inputBufRemaining","spaceRemaining","numToCopy","inputBufPos","remnant","mongoObject","mongoObjectFinal","objectId","chunkNumber","internalPosition","readSlice","readInto","eof","getc","chunkCollection","writeOptions","buildMongoObject","fileId","DEFAULT_CHUNK_SIZE","fs","REFERENCE_BY_FILENAME","REFERENCE_BY_ID","deprecationFn","referenceBy","isOpen","root","DEFAULT_ROOT_COLLECTION","_getWriteConcern","internalChunkSize","internalMd5","currentChunk","open","chunkIndexOptions","_open","nthChunk","puts","GridStoreStream","_writeNormal","readable","_q","writeFile","fd","fstat","writeChunk","unlink","deleteChunks","readlines","separator","finalLength","tell","seek","seekLocation","seekLocationFinal","IO_SEEK_SET","finalPosition","targetPosition","IO_SEEK_CUR","IO_SEEK_END","newChunkNumber","seekChunk","DEFAULT_CONTENT_TYPE","txtId","lastChunkNumber","writeBuffer","finalClose","previousChunkNumber","leftOverDataSize","firstChunkData","leftOverData","chunksToWrite","newChunk","numberOfChunksToWrite","md5Command","filemd5","results","finalChunk","exist","fileIdObject","rootCollection","exists","rootCollectionFinal","byId","readStatic","gridStore","readlinesStatic","finalSeperator","names","unlinkStatic","tc","_setWriteConcernHash","baseOptions","journal","fsync","safe","gs","endCalled","totalBytesToRead","seekPosition","_pipe","NativeTopology","validOptions","completeClose","teardown","err2","returnNonCachedInstance","mongoClient","withSession","cleanupHandler","ReferenceError","throw","defineAspects","_buildCommand","roles","digestPassword","userPassword","createUser","customData","pwd","WRITE_OPERATION","CommandOperationV2","DB_AGGREGATE_COLLECTION","MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT","fullResponse","hasWriteStage","finalStage","$merge","canRetryRead","stage","serverWireVersion","full","executeCommand","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","coll","bulk","writeCon","capabilities","commandsTakeCollation","insertedCount","matchedCount","modifiedCount","deletedCount","upsertedCount","upsertedIds","inserted","createIndexDb","ensureIndexDb","indexInformationDb","insertDocuments","groupFunction","reduceFunction","$reduce","cond","$keyf","retval","groupfn","rawId","authdb","SUPPORTS_WRITE_CONCERN_AND_COLLATION","operationOptions","withCollection","propertyProvider","NO_INHERIT_OPTIONS","resolveReadConcern","resolveWriteConcern","buildCountCommand","collectionOrCursor","queryObject","new","processResults","prepareDocs","nextObject","single","loadClient","legacyParse","AUTH_MECHANISM_INTERNAL_MAP","DEFAULT","PLAIN","monitoringEvents","VALID_AUTH_MECHANISMS","validOptionNames","ignoreOptionNames","legacyOptionNames","_validOptions","validateOptions","LEGACY_OPTIONS_MAP","addListeners","assignTopology","coreTopology","clearAllEvents","collectEvents","collectedEvents","object1","object2","resolveTLSOptions","readFileSync","emitDeprecationForNonUnifiedTopology","didRequestAuthentication","connectWithUrl","connectCallback","useNewUrlParser","parseFn","transformUrlOptions","legacyTransformUrlOptions","_object","_finalOptions","createUnifiedOptions","socketTimeoutMS","db_options","generateCredentials","createTopology","createServer","warningMessage","read_preference","isDoingAuth","eventSet","v1","v2","translateOptions","replayEvents","DEPRECATED_UNIFIED_EVENTS","registerDeprecatedEventNotifiers","translationOptions","createServers","autoEncryption","AutoEncrypter","mongodbClientEncryption","extension","mongoCryptOptions","childOptions","noMerge","optionsWriteConcern","authMechanismRaw","toUpperCase","authMechanismProperties","flatten","serverOrCommandEvents","camelCaseName","hasUsername","hasAuthMechanism","poolSize","readConcernLevel","wTimeoutMS","wcKeys","read_preference_tags","serverObj","$sum","ILLEGAL_COMMAND_FIELDS","strictMode","parseIndexOptions","VALID_INDEX_OPTIONS","onlyReturnNameOfCreatedIndex","indexParameters","indexSpec","fieldHash","commitQuorum","loop","createIndexUsingCreateIndexes","createCreateIndexCommand","index_name","finalCode","finalParameters","$eval","invalidChars","finalUnique","keysToOmit","removeKeys","DropOperation","selectServerForSessionSupport","executeCallback","executeWithServerSelection","supportsRetryableReads","serverSelectionOptions","callbackWithRetry","shouldRetryReads","retryReads","returnOriginal","near","mapInsertManyResults","finalResult","insertedId","capped","LIST_COLLECTIONS_WIRE_VERSION","listCollectionsTransforms","matching","$and","authorizedDatabases","LIST_INDEXES_WIRE_VERSION","systemIndexesNS","collectionNS","isObject","exclusionList","mapCommandHash","processScope","timeMillis","counts","timing","new_scope","aspect","aspects","profile","was","dropUser","dropTarget","replaceCallback","upsertedId","levelValues","collStats","validate","MAJORITY","AVAILABLE","LINEARIZABLE","SNAPSHOT","TopologyBase","CMongos","Store","MAX_JS_INT","storeOptions","store","auto_reconnect","autoReconnect","emitError","socketOptions","sCapabilities","connectErrorHandler","reconnectHandler","relay","ServerCapabilities","CReplSet","replsetRelay","relayHa","forceClosed","CServer","connectHandlers","reconnectFailedHandler","destroyHandler","storedOps","opType","params","primaryOptions","secondaryOptions","setup_get_property","aggregationCursor","writeCommands","textSearch","authCommands","maxNumberOfDocsInBatch","commandsTakeWriteConcern","parser","parseHandler","base","connectionStrings","connectionString","connectionStringOptions","defaultDb","parsedRecord","connection_part","auth_part","query_string_part","clean","strings","hostString","authPart","encodeURIComponent","pass","hostPart","urlOptions","serverOptions","dbOptions","replSetServersOptions","mongosOptions","server_options","rs_options","mongos_options","domainSocket","lastIndexOf","deduplicatedServers","_host","_port","ipv6match","exec","hostPort","opt","splitOpt","slave_ok","reconnectWait","read_secondary","urlDecodeAuthPart","tagObject","formatSortValue","orderBy","value1","value2","finalHint","param","arg","exclude","translations","sslCRL","secondaryAcceptableLatencyMS","connectWithNoPrimary","acceptableLatencyMS","writeConcernKeys","targetOptions","sourceOptions","mergeWriteConcern","opOptions","makeExecuteCallback","returnsCursor","sources","emitProcessWarning","emitWarning","emitConsoleWarning","defaultMsgHandler","option","noDeprecation","msgHandler","optionsWarned","deprecated","deprecatedOption","setPrototypeOf","newCount","PromiseLibrary","hrtime","elapsed","timerId","lastCallTime","lastWakeTime","stopped","clock","currentTime","timeSinceLastWake","timeSinceLastCall","timeUntilNextCall","reschedule","executeAndReschedule","ms","MAX_SAFE_INTEGER","kWriteConcernKeys","resolveFrom","semver","existsSync","find_package_json","location","dirname","find_package_json_with_name","currentModule","peerOptionalDependencies","expectedVersions","moduleEntry","moduleEntryFile","cwd","dependentOnModule","satisfies","unassigned_code_points","commonly_mapped_to_nothing","non_ASCII_space_characters","prohibited_characters","bidirectional_r_al","bidirectional_l","mapping2space","mapping2nothing","getCodePoint","character","codePointAt","last","toCodePoints","codepoints","before","mapped_input","normalized_input","fromCodePoint","normalize","normalized_map","hasProhibited","allowUnassigned","hasUnassigned","hasBidiRAL","hasBidiL","isFirstBidiRAL","isLastBidiRAL","bitfield","memory","__dirname","readUInt32BE","Bitfield","pageOffset","powerOfTwo","_trackUpdates","trackUpdates","_pageMask","getByte","setByte","allOffset","cosmiconfig","webpack","defaultConfig","explorer","loadServerConfig","userConfig","PORT","loadWebpackConfig","FriendlyErrorsWebpackPlugin","nodeExternals","isDev","isWebpack","__webpack_modules__","hasBabelRc","devtool","externals","whitelist","rules","use","loader","babelrc","cacheDirectory","presets","node","__filename","optimization","noEmitOnErrors","libraryTarget","sourceMapFilename","performance","hints","plugins","optimize","LimitChunkCountPlugin","maxChunks","EnvironmentPlugin","DEBUG","GRAPHPACK_SRC_DIR","NODE_ENV","clearConsole","extensions","resolvers","applyMiddleware","serverPort","app","listen","ApolloExpressServer","graphqlPath","ApolloServer","startServer","typeDefs","importFirst","mod","default","webpackPolyfill","paths","DB_URL","DEFAULT_BASE","_connectDB","targ","DbConn","DB_USERS","findUsers","findUser","email","age","gender","deleteUser","updateUser","users","Mutation","existUser"],"mappings":"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B,CAAxB;AACA;AACA;AACA;AACA;AACA;;AACAvF,IAAI,CAACwF,eAAL,GAAuB,CAAvB;AACA;AACA;AACA;AACA;AACA;;AACAxF,IAAI,CAACyF,gBAAL,GAAwB,CAAxB;AACA;AACA;AACA;AACA;AACA;;AACAzF,IAAI,CAACmZ,mBAAL,GAA2B,CAA3B;AACA;AACA;AACA;AACA;AACA;;AACAnZ,IAAI,CAAC0F,aAAL,GAAqB,CAArB;AACA;AACA;AACA;AACA;AACA;;AACA1F,IAAI,CAAC2F,iBAAL,GAAyB,CAAzB;AACA;AACA;AACA;AACA;AACA;;AACA3F,IAAI,CAAC4F,cAAL,GAAsB,CAAtB;AACA;AACA;AACA;AACA;AACA;;AACA5F,IAAI,CAAC6F,cAAL,GAAsB,EAAtB;AACA;AACA;AACA;AACA;AACA;;AACA7F,IAAI,CAAC8F,gBAAL,GAAwB,EAAxB;AACA;AACA;AACA;AACA;AACA;;AACA9F,IAAI,CAACsa,mBAAL,GAA2B,EAA3B;AACA;AACA;AACA;AACA;AACA;;AACAta,IAAI,CAAC+F,cAAL,GAAsB,EAAtB;AACA;AACA;AACA;AACA;AACA;;AACA/F,IAAI,CAACgG,gBAAL,GAAwB,EAAxB;AACA;AACA;AACA;AACA;AACA;;AACAhG,IAAI,CAACiG,sBAAL,GAA8B,EAA9B;AACA;AACA;AACA;AACA;AACA;;AACAjG,IAAI,CAACkG,aAAL,GAAqB,EAArB;AACA;AACA;AACA;AACA;AACA;;AACAlG,IAAI,CAACmG,mBAAL,GAA2B,EAA3B;AACA;AACA;AACA;AACA;AACA;;AACAnG,IAAI,CAACoG,cAAL,GAAsB,EAAtB;AACA;AACA;AACA;AACA;AACA;;AACApG,IAAI,CAACuZ,oBAAL,GAA4B,EAA5B;AACA;AACA;AACA;AACA;AACA;;AACAvZ,IAAI,CAACqG,iBAAL,GAAyB,IAAzB;AACA;AACA;AACA;AACA;AACA;;AACArG,IAAI,CAACsG,iBAAL,GAAyB,IAAzB;AAEA;AACA;AACA;AACA;AACA;;AACAtG,IAAI,CAACgC,2BAAL,GAAmC,CAAnC;AA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;;AACA7F,IAAI,CAAC8F,gBAAL,GAAwB,EAAxB;AACA;AACA;AACA;AACA;AACA;;AACA9F,IAAI,CAAC+F,cAAL,GAAsB,EAAtB;AACA;AACA;AACA;AACA;AACA;;AACA/F,IAAI,CAACgG,gBAAL,GAAwB,EAAxB;AACA;AACA;AACA;AACA;AACA;;AACAhG,IAAI,CAACiG,sBAAL,GAA8B,EAA9B;AACA;AACA;AACA;AACA;AACA;;AACAjG,IAAI,CAACkG,aAAL,GAAqB,EAArB;AACA;AACA;AACA;AACA;AACA;;AACAlG,IAAI,CAACmG,mBAAL,GAA2B,EAA3B;AACA;AACA;AACA;AACA;AACA;;AACAnG,IAAI,CAACoG,cAAL,GAAsB,EAAtB;AACA;AACA;AACA;AACA;AACA;;AACApG,IAAI,CAACuZ,oBAAL,GAA4B,EAA5B;AACA;AACA;AACA;AACA;AACA;;AACAvZ,IAAI,CAACqG,iBAAL,GAAyB,IAAzB;AACA;AACA;AACA;AACA;AACA;;AACArG,IAAI,CAACsG,iBAAL,GAAyB,IAAzB;AACA;AACA;AACA;AACA;AACA;;AACAtG,IAAI,CAACgC,2BAAL,GAAmC,CAAnC;AACA;AACA;AACA;AACA;AACA;;AACAhC,IAAI,CAACuG,4BAAL,GAAoC,CAApC;AACA;AACA;AACA;AACA;AACA;;AACAvG,IAAI,CAACwG,8BAAL,GAAsC,CAAtC;AACA;AACA;AACA;AACA;AACA;;AACAxG,IAAI,CAACyG,wBAAL,GAAgC,CAAhC;AACA;AACA;AACA;AACA;AACA;;AACAzG,IAAI,CAAC0G,uBAAL,GAA+B,CAA/B;AACA;AACA;AACA;AACA;AACA;;AACA1G,IAAI,CAAC2G,gCAAL,GAAwC,GAAxC,C,CAEA;;AACA3G,IAAI,CAACe,cAAL,GAAsB,UAAtB;AACAf,IAAI,CAACgB,cAAL,GAAsB,CAAC,UAAvB;AAEAhB,IAAI,CAACiB,cAAL,GAAsBnE,IAAI,CAACoE,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAAxC;AACAlB,IAAI,CAACmB,cAAL,GAAsB,CAACrE,IAAI,CAACoE,GAAL,C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,WAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEe,QAAM,CAACf,QAAD,EAAW;AACf,SAAKV,SAAL,CAAeW,aAAf,CAA6B;AAAEe,aAAO,EAAEhB;AAAX,KAA7B;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEiB,MAAI,CAACpkB,KAAD,EAAQ;AACV,SAAKyiB,SAAL,CAAeW,aAAf,CAA6B;AAAEiB,WAAK,EAAErkB;AAAT,KAA7B;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACE2Y,MAAI,CAACwK,QAAD,EAAW;AACb,SAAKV,SAAL,CAAeW,aAAf,CAA6B;AAAEkB,WAAK,EAAEnB;AAAT,KAA7B;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEoB,QAAM,CAACC,KAAD,EAAQ;AACZ,SAAK/B,SAAL,CAAeW,aAAf,CAA6B;AAAEqB,aAAO,EAAED;AAAX,KAA7B;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEE,WAAS,GAAG;AACV,WAAO,KAAKC,MAAZ;AACD;;AAtKoC,C,CAyKvC;;;AACAjF,iBAAiB,CAAChnB,SAAlB,CAA4B4B,GAA5B,GAAkColB,iBAAiB,CAAChnB,SAAlB,CAA4BkjB,OAA9D;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AA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EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEAh4B,MAAM,CAACC,OAAP,GAAiBoiB,MAAjB,C;;;;;;;;;;;;ACp3Ca;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,UAASsjB,IAAT,EAAektB,IAAf,EAAqBpuD,OAArB,EAA8B;AACnD,MAAI,CAAC4d,cAAc,CAAC1M,OAAf,CAAuBgwB,IAAvB,CAAL,EAAmC;AACjC,UAAM,IAAIxmC,SAAJ,CAAe,gCAA+BwmC,IAAK,EAAnD,CAAN;AACD,GAHkD,CAKnD;;;AACA,MAAIktB,IAAI,IAAI,CAACx2D,KAAK,CAACC,OAAN,CAAcu2D,IAAd,CAAb,EAAkC;AAChCvtB,WAAO,CAACC,IAAR,CACE,kFADF;AAIA,UAAM0/B,0BAA0B,GAAG,OAAOpS,IAAI,CAACwB,mBAAZ,KAAoC,WAAvE;AACA,UAAM6Q,YAAY,GAAG,OAAOrS,IAAI,CAACsS,KAAZ,KAAsB,WAA3C;AACA,UAAMC,cAAc,GAAGH,0BAA0B,IAAIC,YAArD;;AACA,QAAIE,cAAJ,EAAoB;AAClB;AACA3gE,aAAO,GAAGouD,IAAV;AACAA,UAAI,GAAGt1D,SAAP;AACD,KAJD,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Af,CAAmBunB,MAAnB,CAAP;AACD,GAdkD,CAgBnD;;;AACA8J,cAAY,CAAChL,cAAb,GAA8B,KAAKjV,CAAL,CAAOiV,cAArC,CAjBmD,CAmBnD;;AACA,MAAI,CAAC,KAAKD,QAAV,EAAoB;AAClB,UAAM,IAAInC,UAAJ,CAAe,uEAAf,CAAN;AACD,GAtBkD,CAwBnD;;;AACA,QAAMra,EAAE,GAAG,IAAI+a,EAAJ,CAAO4C,MAAP,EAAe,KAAKnB,QAApB,EAA8BiL,YAA9B,CAAX,CAzBmD,CA2BnD;;AACA,OAAKjgB,CAAL,CAAOutE,OAAP,CAAernE,GAAf,CAAmBiQ,MAAnB,EAA2B3d,EAA3B,EA5BmD,CA6BnD;;AACA,SAAOA,EAAP;AACD,CA/BD;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA8a,WAAW,CAACtmB,SAAZ,CAAsBo6B,WAAtB,GAAoC,UAASpxB,OAAT,EAAkB;AACpDA,SAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,MAAI,CAAC,KAAKgf,QAAV,EAAoB,OAAO,KAAP;AACpB,SAAO,KAAKA,QAAL,CAAcoS,WAAd,CAA0BpxB,OAA1B,CAAP;AACD,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAsd,WAAW,CAACV,OAAZ,GAAsB,UAAS8tB,GAAT,EAAc1qC,OAAd,EAAuB/J,QAAv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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict'\nvar DuplexStream = require('readable-stream').Duplex\n  , util         = require('util')\n  , Buffer       = require('safe-buffer').Buffer\n\nfunction BufferList (callback) {\n  if (!(this instanceof BufferList))\n    return new BufferList(callback)\n\n  this._bufs  = []\n  this.length = 0\n\n  if (typeof callback == 'function') {\n    this._callback = callback\n\n    var piper = function piper (err) {\n      if (this._callback) {\n        this._callback(err)\n        this._callback = null\n      }\n    }.bind(this)\n\n    this.on('pipe', function onPipe (src) {\n      src.on('error', piper)\n    })\n    this.on('unpipe', function onUnpipe (src) {\n      src.removeListener('error', piper)\n    })\n  } else {\n    this.append(callback)\n  }\n\n  DuplexStream.call(this)\n}\n\n\nutil.inherits(BufferList, DuplexStream)\n\n\nBufferList.prototype._offset = function _offset (offset) {\n  var tot = 0, i = 0, _t\n  if (offset === 0) return [ 0, 0 ]\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length\n    if (offset < _t || i == this._bufs.length - 1) {\n      return [ i, offset - tot ]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  var bufferId = blOffset[0]\n  var offset = blOffset[1]\n  for (var i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n  return offset\n}\n\nBufferList.prototype.append = function append (buf) {\n  var i = 0\n\n  if (Buffer.isBuffer(buf)) {\n    this._appendBuffer(buf)\n  } else if (Array.isArray(buf)) {\n    for (; i < buf.length; i++)\n      this.append(buf[i])\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++)\n      this.append(buf._bufs[i])\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number')\n      buf = buf.toString()\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\n\nBufferList.prototype._write = function _write (buf, encoding, callback) {\n  this._appendBuffer(buf)\n\n  if (typeof callback == 'function')\n    callback()\n}\n\n\nBufferList.prototype._read = function _read (size) {\n  if (!this.length)\n    return this.push(null)\n\n  size = Math.min(size, this.length)\n  this.push(this.slice(0, size))\n  this.consume(size)\n}\n\n\nBufferList.prototype.end = function end (chunk) {\n  DuplexStream.prototype.end.call(this, chunk)\n\n  if (this._callback) {\n    this._callback(null, this.slice())\n    this._callback = null\n  }\n}\n\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n  var offset = this._offset(index)\n  return this._bufs[offset[0]][offset[1]]\n}\n\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start == 'number' && start < 0)\n    start += this.length\n  if (typeof end == 'number' && end < 0)\n    end += this.length\n  return this.copy(null, 0, start, end)\n}\n\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0)\n    srcStart = 0\n  if (typeof srcEnd != 'number' || srcEnd > this.length)\n    srcEnd = this.length\n  if (srcStart >= this.length)\n    return dst || Buffer.alloc(0)\n  if (srcEnd <= 0)\n    return dst || Buffer.alloc(0)\n\n  var copy   = !!dst\n    , off    = this._offset(srcStart)\n    , len    = srcEnd - srcStart\n    , bytes  = len\n    , bufoff = (copy && dstStart) || 0\n    , start  = off[1]\n    , l\n    , i\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) { // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start)\n      start = 0\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0)\n    start += this.length\n  if (end < 0)\n    end += this.length\n\n  if (start === end) {\n    return new BufferList()\n  }\n  var startOffset = this._offset(start)\n    , endOffset = this._offset(end)\n    , buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] == 0)\n    buffers.pop()\n  else\n    buffers[buffers.length-1] = buffers[buffers.length-1].slice(0, endOffset[1])\n\n  if (startOffset[1] != 0)\n    buffers[0] = buffers[0].slice(startOffset[1])\n\n  return new BufferList(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n  return this\n}\n\n\nBufferList.prototype.duplicate = function duplicate () {\n  var i = 0\n    , copy = new BufferList()\n\n  for (; i < this._bufs.length; i++)\n    copy.append(this._bufs[i])\n\n  return copy\n}\n\n\nBufferList.prototype.destroy = function destroy () {\n  this._bufs.length = 0\n  this.length = 0\n  this.push(null)\n}\n\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n      search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (search instanceof BufferList) {\n    search = search.slice()\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  var blOffset = this._offset(offset)\n  var blIndex = blOffset[0] // index of which internal buffer we're working on\n  var buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (blIndex; blIndex < this._bufs.length; blIndex++) {\n    var buff = this._bufs[blIndex]\n    while(buffOffset < buff.length) {\n      var availableWindow = buff.length - buffOffset\n      if (availableWindow >= search.length) {\n        var nativeSearchResult = buff.indexOf(search, buffOffset)\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        var revOffset = this._reverseOffset([blIndex, buffOffset])\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n        buffOffset++\n      }\n    }\n    buffOffset = 0\n  }\n  return -1\n}\n\nBufferList.prototype._match = function(offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n  for (var searchOffset = 0; searchOffset < search.length ; searchOffset++) {\n    if(this.get(offset + searchOffset) !== search[searchOffset]){\n      return false\n    }\n  }\n  return true\n}\n\n\n;(function () {\n  var methods = {\n      'readDoubleBE' : 8\n    , 'readDoubleLE' : 8\n    , 'readFloatBE'  : 4\n    , 'readFloatLE'  : 4\n    , 'readInt32BE'  : 4\n    , 'readInt32LE'  : 4\n    , 'readUInt32BE' : 4\n    , 'readUInt32LE' : 4\n    , 'readInt16BE'  : 2\n    , 'readInt16LE'  : 2\n    , 'readUInt16BE' : 2\n    , 'readUInt16LE' : 2\n    , 'readInt8'     : 1\n    , 'readUInt8'    : 1\n    , 'readIntBE'    : null\n    , 'readIntLE'    : null\n    , 'readUIntBE'   : null\n    , 'readUIntLE'   : null\n  }\n\n  for (var m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      }\n      else {\n        BufferList.prototype[m] = function (offset) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n\nmodule.exports = BufferList\n","var BSON = require('./lib/bson/bson'),\n  Binary = require('./lib/bson/binary'),\n  Code = require('./lib/bson/code'),\n  DBRef = require('./lib/bson/db_ref'),\n  Decimal128 = require('./lib/bson/decimal128'),\n  Double = require('./lib/bson/double'),\n  Int32 = require('./lib/bson/int_32'),\n  Long = require('./lib/bson/long'),\n  Map = require('./lib/bson/map'),\n  MaxKey = require('./lib/bson/max_key'),\n  MinKey = require('./lib/bson/min_key'),\n  ObjectId = require('./lib/bson/objectid'),\n  BSONRegExp = require('./lib/bson/regexp'),\n  Symbol = require('./lib/bson/symbol'),\n  Timestamp = require('./lib/bson/timestamp');\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Add BSON types to function creation\nBSON.Binary = Binary;\nBSON.Code = Code;\nBSON.DBRef = DBRef;\nBSON.Decimal128 = Decimal128;\nBSON.Double = Double;\nBSON.Int32 = Int32;\nBSON.Long = Long;\nBSON.Map = Map;\nBSON.MaxKey = MaxKey;\nBSON.MinKey = MinKey;\nBSON.ObjectId = ObjectId;\nBSON.ObjectID = ObjectId;\nBSON.BSONRegExp = BSONRegExp;\nBSON.Symbol = Symbol;\nBSON.Timestamp = Timestamp;\n\n// Return the BSON\nmodule.exports = BSON;\n","/**\n * Module dependencies.\n * @ignore\n */\n\n// Test if we're in Node via presence of \"global\" not absence of \"window\"\n// to support hybrid environments like Electron\nif (typeof global !== 'undefined') {\n  var Buffer = require('buffer').Buffer; // TODO just use global Buffer\n}\n\nvar utils = require('./parser/utils');\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nfunction Binary(buffer, subType) {\n  if (!(this instanceof Binary)) return new Binary(buffer, subType);\n\n  if (\n    buffer != null &&\n    !(typeof buffer === 'string') &&\n    !Buffer.isBuffer(buffer) &&\n    !(buffer instanceof Uint8Array) &&\n    !Array.isArray(buffer)\n  ) {\n    throw new Error('only String, Buffer, Uint8Array or Array accepted');\n  }\n\n  this._bsontype = 'Binary';\n\n  if (buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if (buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer, Uint8Array or Arrays\n    if (typeof buffer === 'string') {\n      // Different ways of writing the length of the string for the different types\n      if (typeof Buffer !== 'undefined') {\n        this.buffer = utils.toBuffer(buffer);\n      } else if (\n        typeof Uint8Array !== 'undefined' ||\n        Object.prototype.toString.call(buffer) === '[object Array]'\n      ) {\n        this.buffer = writeStringToArray(buffer);\n      } else {\n        throw new Error('only String, Buffer, Uint8Array or Array accepted');\n      }\n    } else {\n      this.buffer = buffer;\n    }\n    this.position = buffer.length;\n  } else {\n    if (typeof Buffer !== 'undefined') {\n      this.buffer = utils.allocBuffer(Binary.BUFFER_SIZE);\n    } else if (typeof Uint8Array !== 'undefined') {\n      this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    } else {\n      this.buffer = new Array(Binary.BUFFER_SIZE);\n    }\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {string} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function put(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if (byte_value['length'] != null && typeof byte_value !== 'number' && byte_value.length !== 1)\n    throw new Error('only accepts single character String, Uint8Array or Array');\n  if ((typeof byte_value !== 'number' && byte_value < 0) || byte_value > 255)\n    throw new Error('only accepts number in a valid unsigned byte range 0-255');\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if (typeof byte_value === 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if (byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if (this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n      // Create additional overflow buffer\n      var buffer = utils.allocBuffer(Binary.BUFFER_SIZE + this.buffer.length);\n      // Combine the two buffers together\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n      this.buffer = buffer;\n      this.buffer[this.position++] = decoded_byte;\n    } else {\n      buffer = null;\n      // Create a new buffer (typed or normal array)\n      if (Object.prototype.toString.call(this.buffer) === '[object Uint8Array]') {\n        buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n      } else {\n        buffer = new Array(Binary.BUFFER_SIZE + this.buffer.length);\n      }\n\n      // We need to copy all the content to the new array\n      for (var i = 0; i < this.buffer.length; i++) {\n        buffer[i] = this.buffer[i];\n      }\n\n      // Reassign the buffer\n      this.buffer = buffer;\n      // Write the byte\n      this.buffer[this.position++] = decoded_byte;\n    }\n  }\n};\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function write(string, offset) {\n  offset = typeof offset === 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if (this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // If we are in node.js\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n      buffer = utils.allocBuffer(this.buffer.length + string.length);\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n    } else if (Object.prototype.toString.call(this.buffer) === '[object Uint8Array]') {\n      // Create a new buffer\n      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length));\n      // Copy the content\n      for (var i = 0; i < this.position; i++) {\n        buffer[i] = this.buffer[i];\n      }\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(string) && Buffer.isBuffer(this.buffer)) {\n    string.copy(this.buffer, offset, 0, string.length);\n    this.position = offset + string.length > this.position ? offset + string.length : this.position;\n    // offset = string.length\n  } else if (\n    typeof Buffer !== 'undefined' &&\n    typeof string === 'string' &&\n    Buffer.isBuffer(this.buffer)\n  ) {\n    this.buffer.write(string, offset, 'binary');\n    this.position = offset + string.length > this.position ? offset + string.length : this.position;\n    // offset = string.length;\n  } else if (\n    Object.prototype.toString.call(string) === '[object Uint8Array]' ||\n    (Object.prototype.toString.call(string) === '[object Array]' && typeof string !== 'string')\n  ) {\n    for (i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string[i];\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  } else if (typeof string === 'string') {\n    for (i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string.charCodeAt(i);\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  }\n};\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function read(position, length) {\n  length = length && length > 0 ? length : this.position;\n\n  // Let's return the data based on the type we have\n  if (this.buffer['slice']) {\n    return this.buffer.slice(position, position + length);\n  } else {\n    // Create a buffer to keep the result\n    var buffer =\n      typeof Uint8Array !== 'undefined'\n        ? new Uint8Array(new ArrayBuffer(length))\n        : new Array(length);\n    for (var i = 0; i < length; i++) {\n      buffer[i] = this.buffer[position++];\n    }\n  }\n  // Return the buffer\n  return buffer;\n};\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {string}\n */\nBinary.prototype.value = function value(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n\n  // Optimize to serialize for the situation where the data == size of buffer\n  if (\n    asRaw &&\n    typeof Buffer !== 'undefined' &&\n    Buffer.isBuffer(this.buffer) &&\n    this.buffer.length === this.position\n  )\n    return this.buffer;\n\n  // If it's a node.js buffer object\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n    return asRaw\n      ? this.buffer.slice(0, this.position)\n      : this.buffer.toString('binary', 0, this.position);\n  } else {\n    if (asRaw) {\n      // we support the slice command use it\n      if (this.buffer['slice'] != null) {\n        return this.buffer.slice(0, this.position);\n      } else {\n        // Create a new buffer to copy content to\n        var newBuffer =\n          Object.prototype.toString.call(this.buffer) === '[object Uint8Array]'\n            ? new Uint8Array(new ArrayBuffer(this.position))\n            : new Array(this.position);\n        // Copy content\n        for (var i = 0; i < this.position; i++) {\n          newBuffer[i] = this.buffer[i];\n        }\n        // Return the buffer\n        return newBuffer;\n      }\n    } else {\n      return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n    }\n  }\n};\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function length() {\n  return this.position;\n};\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  return this.buffer != null ? this.buffer.toString('base64') : '';\n};\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n};\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer =\n    typeof Uint8Array !== 'undefined'\n      ? new Uint8Array(new ArrayBuffer(data.length))\n      : new Array(data.length);\n  // Write the content to the buffer\n  for (var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n};\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = '';\n  for (var i = startIndex; i < endIndex; i++) {\n    result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\n/**\n * Expose.\n */\nmodule.exports = Binary;\nmodule.exports.Binary = Binary;\n","'use strict';\n\nvar Map = require('./map'),\n  Long = require('./long'),\n  Double = require('./double'),\n  Timestamp = require('./timestamp'),\n  ObjectID = require('./objectid'),\n  BSONRegExp = require('./regexp'),\n  Symbol = require('./symbol'),\n  Int32 = require('./int_32'),\n  Code = require('./code'),\n  Decimal128 = require('./decimal128'),\n  MinKey = require('./min_key'),\n  MaxKey = require('./max_key'),\n  DBRef = require('./db_ref'),\n  Binary = require('./binary');\n\n// Parts of the parser\nvar deserialize = require('./parser/deserializer'),\n  serializer = require('./parser/serializer'),\n  calculateObjectSize = require('./parser/calculate_size'),\n  utils = require('./parser/utils');\n\n/**\n * @ignore\n * @api private\n */\n// Default Max Size\nvar MAXSIZE = 1024 * 1024 * 17;\n\n// Current Internal Temporary Serialization Buffer\nvar buffer = utils.allocBuffer(MAXSIZE);\n\nvar BSON = function() {};\n\n/**\n * Serialize a Javascript object.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @param {Number} [options.minInternalBufferSize=1024*1024*17] minimum size of the internal temporary serialization buffer **(default:1024*1024*17)**.\n * @return {Buffer} returns the Buffer object containing the serialized object.\n * @api public\n */\nBSON.prototype.serialize = function serialize(object, options) {\n  options = options || {};\n  // Unpack the options\n  var checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  var minInternalBufferSize =\n    typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n  \n  // Resize the internal serialization buffer if needed\n  if (buffer.length < minInternalBufferSize) {\n    buffer = utils.allocBuffer(minInternalBufferSize);\n  }\n\n  // Attempt to serialize\n  var serializationIndex = serializer(\n    buffer,\n    object,\n    checkKeys,\n    0,\n    0,\n    serializeFunctions,\n    ignoreUndefined,\n    []\n  );\n  // Create the final buffer\n  var finishedBuffer = utils.allocBuffer(serializationIndex);\n  // Copy into the finished buffer\n  buffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);\n  // Return the buffer\n  return finishedBuffer;\n};\n\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @param {Number} [options.index] the index in the buffer where we wish to start serializing into.\n * @return {Number} returns the index pointing to the last written byte in the buffer.\n * @api public\n */\nBSON.prototype.serializeWithBufferAndIndex = function(object, finalBuffer, options) {\n  options = options || {};\n  // Unpack the options\n  var checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  var startIndex = typeof options.index === 'number' ? options.index : 0;\n\n  // Attempt to serialize\n  var serializationIndex = serializer(\n    finalBuffer,\n    object,\n    checkKeys,\n    startIndex || 0,\n    0,\n    serializeFunctions,\n    ignoreUndefined\n  );\n\n  // Return the index\n  return serializationIndex - 1;\n};\n\n/**\n * Deserialize data as BSON.\n *\n * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance.\n * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n * @return {Object} returns the deserialized Javascript Object.\n * @api public\n */\nBSON.prototype.deserialize = function(buffer, options) {\n  return deserialize(buffer, options);\n};\n\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param {Object} object the Javascript object to calculate the BSON byte size for.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @return {Number} returns the number of bytes the BSON object will take up.\n * @api public\n */\nBSON.prototype.calculateObjectSize = function(object, options) {\n  options = options || {};\n\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n\n  return calculateObjectSize(object, serializeFunctions, ignoreUndefined);\n};\n\n/**\n * Deserialize stream data as BSON documents.\n *\n * @param {Buffer} data the buffer containing the serialized set of BSON documents.\n * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n * @param {Number} numberOfDocuments number of documents to deserialize.\n * @param {Array} documents an array where to store the deserialized documents.\n * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n * @param {Object} [options] additional options used for the deserialization.\n * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance.\n * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n * @api public\n */\nBSON.prototype.deserializeStream = function(\n  data,\n  startIndex,\n  numberOfDocuments,\n  documents,\n  docStartIndex,\n  options\n) {\n  options = options != null ? options : {};\n  var index = startIndex;\n  // Loop over all documents\n  for (var i = 0; i < numberOfDocuments; i++) {\n    // Find size of the document\n    var size =\n      data[index] | (data[index + 1] << 8) | (data[index + 2] << 16) | (data[index + 3] << 24);\n    // Update options with index\n    options['index'] = index;\n    // Parse the document at this point\n    documents[docStartIndex + i] = this.deserialize(data, options);\n    // Adjust index by the document size\n    index = index + size;\n  }\n\n  // Return object containing end index of parsing and list of documents\n  return index;\n};\n\n/**\n * @ignore\n * @api private\n */\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\n// var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\n// var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// Return BSON\nmodule.exports = BSON;\nmodule.exports.Code = Code;\nmodule.exports.Map = Map;\nmodule.exports.Symbol = Symbol;\nmodule.exports.BSON = BSON;\nmodule.exports.DBRef = DBRef;\nmodule.exports.Binary = Binary;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.Long = Long;\nmodule.exports.Timestamp = Timestamp;\nmodule.exports.Double = Double;\nmodule.exports.Int32 = Int32;\nmodule.exports.MinKey = MinKey;\nmodule.exports.MaxKey = MaxKey;\nmodule.exports.BSONRegExp = BSONRegExp;\nmodule.exports.Decimal128 = Decimal128;\n","/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if (!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n};\n\n/**\n * @ignore\n */\nCode.prototype.toJSON = function() {\n  return { scope: this.scope, code: this.code };\n};\n\nmodule.exports = Code;\nmodule.exports.Code = Code;\n","/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {string} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {string} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nfunction DBRef(namespace, oid, db) {\n  if (!(this instanceof DBRef)) return new DBRef(namespace, oid, db);\n\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\n/**\n * @ignore\n * @api private\n */\nDBRef.prototype.toJSON = function() {\n  return {\n    $ref: this.namespace,\n    $id: this.oid,\n    $db: this.db == null ? '' : this.db\n  };\n};\n\nmodule.exports = DBRef;\nmodule.exports.DBRef = DBRef;\n","'use strict';\n\nvar Long = require('./long');\n\nvar PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [\n  0x7c,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [\n  0xf8,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\nvar INF_POSITIVE_BUFFER = [\n  0x78,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\n\nvar EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n\nvar utils = require('./parser/utils');\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n};\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for (i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n};\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if (!left && !right) {\n    return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n    .add(productMid2)\n    .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return { high: productHigh, low: productLow };\n};\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if (uhleft < uhright) {\n    return true;\n  } else if (uhleft === uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if (ulleft < ulright) return true;\n  }\n\n  return false;\n};\n\n// var longtoHex = function(value) {\n//   var buffer = utils.allocBuffer(8);\n//   var index = 0;\n//   // Encode the low 64 bits of the decimal\n//   // Encode low bits\n//   buffer[index++] = value.low_ & 0xff;\n//   buffer[index++] = (value.low_ >> 8) & 0xff;\n//   buffer[index++] = (value.low_ >> 16) & 0xff;\n//   buffer[index++] = (value.low_ >> 24) & 0xff;\n//   // Encode high bits\n//   buffer[index++] = value.high_ & 0xff;\n//   buffer[index++] = (value.high_ >> 8) & 0xff;\n//   buffer[index++] = (value.high_ >> 16) & 0xff;\n//   buffer[index++] = (value.high_ >> 24) & 0xff;\n//   return buffer.reverse().toString('hex');\n// };\n\n// var int32toHex = function(value) {\n//   var buffer = utils.allocBuffer(4);\n//   var index = 0;\n//   // Encode the low 64 bits of the decimal\n//   // Encode low bits\n//   buffer[index++] = value & 0xff;\n//   buffer[index++] = (value >> 8) & 0xff;\n//   buffer[index++] = (value >> 16) & 0xff;\n//   buffer[index++] = (value >> 24) & 0xff;\n//   return buffer.reverse().toString('hex');\n// };\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes a buffer containing the raw Decimal128 bytes.\n * @return {Double}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n};\n\n/**\n * Create a Decimal128 instance from a string representation\n *\n * @method\n * @param {string} string a numeric string representation.\n * @return {Decimal128} returns a Decimal128 instance.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Naively prevent against REDOS attacks.\n  // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n  //       further gains.\n  if (string.length >= 7000) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if ((!stringMatch && !infMatch && !nanMatch) || string.length === 0) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Check if we have an illegal exponent format\n  if (stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Get the negative or positive sign\n  if (string[index] === '+' || string[index] === '-') {\n    isNegative = string[index++] === '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if (!isDigit(string[index]) && string[index] !== '.') {\n    if (string[index] === 'i' || string[index] === 'I') {\n      return new Decimal128(utils.toBuffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if (string[index] === 'N') {\n      return new Decimal128(utils.toBuffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while (isDigit(string[index]) || string[index] === '.') {\n    if (string[index] === '.') {\n      if (sawRadix) {\n        return new Decimal128(utils.toBuffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if (nDigitsStored < 34) {\n      if (string[index] !== '0' || foundNonZero) {\n        if (!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if (foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if (sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if (sawRadix && !nDigitsRead) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Read exponent if exists\n  if (string[index] === 'e' || string[index] === 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if (!match || !match[2]) {\n      return new Decimal128(utils.toBuffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if (string[index]) {\n    return new Decimal128(utils.toBuffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if (!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if (exponent !== 0 && significantDigits !== 1) {\n      while (string[firstNonZero + significantDigits - 1] === '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while (exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if (lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if (digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(utils.toBuffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if (lastDigit === 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if (nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if (exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      digitsString = digits.join('');\n      if (digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(utils.toBuffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if (lastDigit - firstDigit + 1 < significantDigits && string[significantDigits] !== '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if (sawRadix && exponent === EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if (roundDigit >= 5) {\n      roundBit = 1;\n\n      if (roundDigit === 5) {\n        roundBit = digits[lastDigit] % 2 === 1;\n\n        for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if (parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if (roundBit) {\n      var dIdx = lastDigit;\n\n      for (; dIdx >= 0; dIdx--) {\n        if (++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if (dIdx === 0) {\n            if (exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(\n                utils.toBuffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER)\n              );\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if (significantDigits === 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if (lastDigit - firstDigit < 17) {\n    dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for (; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for (; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for (; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n\n  significand.low = significand.low.add(significandLow);\n\n  if (lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  biasedExponent = exponent + EXPONENT_BIAS;\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if (\n    significand.high\n      .shiftRightUnsigned(49)\n      .and(Long.fromNumber(1))\n      .equals(Long.fromNumber)\n  ) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(\n      Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47))\n    );\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if (isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = utils.allocBuffer(16);\n  index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n};\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\n// var COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nEXPONENT_BIAS = 6176;\n\n/**\n * Create a string representation of the raw Decimal128 value\n *\n * @method\n * @return {string} returns a Decimal128 string representation.\n */\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for (var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = { parts: new Array(4) };\n  // indexing variables\n  i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n  midl =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Unpack the high 64bits into a long\n  midh =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n  high =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Unpack index\n  index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high)\n  };\n\n  if (dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if (combination >> 3 === 3) {\n    // Check for 'special' values\n    if (combination === COMBINATION_INFINITY) {\n      return string.join('') + 'Infinity';\n    } else if (combination === COMBINATION_NAN) {\n      return 'NaN';\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if (\n    significand128.parts[0] === 0 &&\n    significand128.parts[1] === 0 &&\n    significand128.parts[2] === 0 &&\n    significand128.parts[3] === 0\n  ) {\n    is_zero = true;\n  } else {\n    for (k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if (!least_digits) continue;\n\n      for (j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if (is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    i = 0;\n\n    while (!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if (significand_digits) {\n      string.push('.');\n    }\n\n    for (i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if (scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if (exponent >= 0) {\n      for (i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if (radix_position > 0) {\n        for (i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while (radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for (i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n};\n\nDecimal128.prototype.toJSON = function() {\n  return { $numberDecimal: this.toString() };\n};\n\nmodule.exports = Decimal128;\nmodule.exports.Decimal128 = Decimal128;\n","/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nfunction Double(value) {\n  if (!(this instanceof Double)) return new Double(value);\n\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nDouble.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Double;\nmodule.exports.Double = Double;\n","// Copyright (c) 2008, Fair Oaks Labs, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright notice,\n//    this list of conditions and the following disclaimer.\n//\n//  * Redistributions in binary form must reproduce the above copyright notice,\n//    this list of conditions and the following disclaimer in the documentation\n//    and/or other materials provided with the distribution.\n//\n//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n//    may be used to endorse or promote products derived from this software\n//    without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n//\n//\n// Modifications to writeIEEE754 to support negative zeroes made by Brian White\n\nvar readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    nBits = -7,\n    i = bBE ? 0 : nBytes - 1,\n    d = bBE ? 1 : -1,\n    s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << -nBits) - 1);\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << -nBits) - 1);\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    c,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,\n    i = bBE ? nBytes - 1 : 0,\n    d = bBE ? -1 : 1,\n    s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nexports.readIEEE754 = readIEEE754;\nexports.writeIEEE754 = writeIEEE754;\n","/**\n * A class representation of a BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  if (!(this instanceof Int32)) return new Int32(value);\n\n  this._bsontype = 'Int32';\n  this.value = value;\n};\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nInt32.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nfunction Long(low, high) {\n  if (!(this instanceof Long)) return new Long(low, high);\n\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0; // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0; // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n};\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n};\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {string} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return this.toString();\n};\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {string} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  rem = this;\n  var result = '';\n\n  while (!rem.isZero()) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return this.low_ >= 0 ? this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ !== 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) !== 0) {\n        break;\n      }\n    }\n    return this.high_ !== 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ === 0 && this.low_ === 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) === 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return this.high_ === other.high_ && this.low_ === other.low_;\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return this.high_ !== other.high_ || this.low_ !== other.low_;\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 + b48;\n  c48 &= 0xffff;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate()\n        .multiply(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) && other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xffff;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) || other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate()\n        .div(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(low << numBits, (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >> numBits);\n    } else {\n      return Long.fromBits(high >> (numBits - 32), high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits);\n    } else if (numBits === 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long((value % Long.TWO_PWR_32_DBL_) | 0, (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {string} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length === 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) === '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\n/**\n * Expose.\n */\nmodule.exports = Long;\nmodule.exports.Long = Long;\n","'use strict';\n\n// We have an ES6 Map available, return the native instance\nif (typeof global.Map !== 'undefined') {\n  module.exports = global.Map;\n  module.exports.Map = global.Map;\n} else {\n  // We will return a polyfill\n  var Map = function(array) {\n    this._keys = [];\n    this._values = {};\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] == null) continue; // skip null and undefined\n      var entry = array[i];\n      var key = entry[0];\n      var value = entry[1];\n      // Add the key to the list of keys in order\n      this._keys.push(key);\n      // Add the key and value to the values dictionary with a point\n      // to the location in the ordered keys list\n      this._values[key] = { v: value, i: this._keys.length - 1 };\n    }\n  };\n\n  Map.prototype.clear = function() {\n    this._keys = [];\n    this._values = {};\n  };\n\n  Map.prototype.delete = function(key) {\n    var value = this._values[key];\n    if (value == null) return false;\n    // Delete entry\n    delete this._values[key];\n    // Remove the key from the ordered keys list\n    this._keys.splice(value.i, 1);\n    return true;\n  };\n\n  Map.prototype.entries = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? [key, self._values[key].v] : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  Map.prototype.forEach = function(callback, self) {\n    self = self || this;\n\n    for (var i = 0; i < this._keys.length; i++) {\n      var key = this._keys[i];\n      // Call the forEach callback\n      callback.call(self, this._values[key].v, key, self);\n    }\n  };\n\n  Map.prototype.get = function(key) {\n    return this._values[key] ? this._values[key].v : undefined;\n  };\n\n  Map.prototype.has = function(key) {\n    return this._values[key] != null;\n  };\n\n  Map.prototype.keys = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? key : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  Map.prototype.set = function(key, value) {\n    if (this._values[key]) {\n      this._values[key].v = value;\n      return this;\n    }\n\n    // Add the key to the list of keys in order\n    this._keys.push(key);\n    // Add the key and value to the values dictionary with a point\n    // to the location in the ordered keys list\n    this._values[key] = { v: value, i: this._keys.length - 1 };\n    return this;\n  };\n\n  Map.prototype.values = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? self._values[key].v : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  // Last ismaster\n  Object.defineProperty(Map.prototype, 'size', {\n    enumerable: true,\n    get: function() {\n      return this._keys.length;\n    }\n  });\n\n  module.exports = Map;\n  module.exports.Map = Map;\n}\n","/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nfunction MaxKey() {\n  if (!(this instanceof MaxKey)) return new MaxKey();\n\n  this._bsontype = 'MaxKey';\n}\n\nmodule.exports = MaxKey;\nmodule.exports.MaxKey = MaxKey;\n","/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nfunction MinKey() {\n  if (!(this instanceof MinKey)) return new MinKey();\n\n  this._bsontype = 'MinKey';\n}\n\nmodule.exports = MinKey;\nmodule.exports.MinKey = MinKey;\n","// Custom inspect property name / symbol.\nvar inspect = 'inspect';\n\nvar utils = require('./parser/utils');\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xffffff, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n\n// Check if buffer exists\ntry {\n  if (Buffer && Buffer.from) {\n    var hasBufferType = true;\n    inspect = require('util').inspect.custom || 'inspect';\n  }\n} catch (err) {\n  hasBufferType = false;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function ObjectID(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if (id instanceof ObjectID) return id;\n  if (!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  // The most common usecase (blank id, new objectId instance)\n  if (id == null || typeof id === 'number') {\n    // Generate a new id\n    this.id = this.generate(id);\n    // If we are caching the hex string\n    if (ObjectID.cacheHexString) this.__id = this.toString('hex');\n    // Return the object\n    return;\n  }\n\n  // Check if the passed in id is valid\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if (!valid && id != null) {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  } else if (valid && typeof id === 'string' && id.length === 24 && hasBufferType) {\n    return new ObjectID(utils.toBuffer(id, 'hex'));\n  } else if (valid && typeof id === 'string' && id.length === 24) {\n    return ObjectID.createFromHexString(id);\n  } else if (id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if (id != null && typeof id.toHexString === 'function') {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  }\n\n  if (ObjectID.cacheHexString) this.__id = this.toString('hex');\n};\n\n// Allow usage of ObjectId as well as ObjectID\n// var ObjectId = ObjectID;\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {string} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if (ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if (!this.id || !this.id.length) {\n    throw new Error(\n      'invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [' +\n        JSON.stringify(this.id) +\n        ']'\n    );\n  }\n\n  if (this.id instanceof _Buffer) {\n    hexString = convertToHex(this.id);\n    if (ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if (ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n};\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.get_inc = function() {\n  return (ObjectID.index = (ObjectID.index + 1) % 0xffffff);\n};\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return this.get_inc();\n};\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' !== typeof time) {\n    time = ~~(Date.now() / 1000);\n  }\n\n  // Use pid\n  var pid =\n    (typeof process === 'undefined' || process.pid === 1\n      ? Math.floor(Math.random() * 100000)\n      : process.pid) % 0xffff;\n  var inc = this.get_inc();\n  // Buffer used\n  var buffer = utils.allocBuffer(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n};\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @param {String} format The Buffer toString format parameter.\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function(format) {\n  // Is the id a buffer then use the buffer toString method to return the format\n  if (this.id && this.id.copy) {\n    return this.id.toString(typeof format === 'string' ? format : 'hex');\n  }\n\n  // if(this.buffer )\n  return this.toHexString();\n};\n\n/**\n* Converts to a string representation of this Id.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype[inspect] = ObjectID.prototype.toString;\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return this.toHexString();\n};\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {object} otherID ObjectID instance to compare against.\n* @return {boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function equals(otherId) {\n  // var id;\n\n  if (otherId instanceof ObjectID) {\n    return this.toString() === otherId.toString();\n  } else if (\n    typeof otherId === 'string' &&\n    ObjectID.isValid(otherId) &&\n    otherId.length === 12 &&\n    this.id instanceof _Buffer\n  ) {\n    return otherId === this.id.toString('binary');\n  } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 24) {\n    return otherId.toLowerCase() === this.toHexString();\n  } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 12) {\n    return otherId === this.id;\n  } else if (otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n};\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n};\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xffffff);\n\n/**\n* @ignore\n*/\nObjectID.createPk = function createPk() {\n  return new ObjectID();\n};\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function createFromTime(time) {\n  var buffer = utils.toBuffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n};\n\n// Lookup tables\n//var encodeLookup = '0123456789abcdef'.split('');\nvar decodeLookup = [];\ni = 0;\nwhile (i < 10) decodeLookup[0x30 + i] = i++;\nwhile (i < 16) decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++;\n\nvar _Buffer = Buffer;\nvar convertToHex = function(bytes) {\n  return bytes.toString('hex');\n};\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {string} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function createFromHexString(string) {\n  // Throw an error if it's not a valid setup\n  if (typeof string === 'undefined' || (string != null && string.length !== 24)) {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  }\n\n  // Use Buffer.from method if available\n  if (hasBufferType) return new ObjectID(utils.toBuffer(string, 'hex'));\n\n  // Calculate lengths\n  var array = new _Buffer(12);\n  var n = 0;\n  var i = 0;\n\n  while (i < 24) {\n    array[n++] = (decodeLookup[string.charCodeAt(i++)] << 4) | decodeLookup[string.charCodeAt(i++)];\n  }\n\n  return new ObjectID(array);\n};\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function isValid(id) {\n  if (id == null) return false;\n\n  if (typeof id === 'number') {\n    return true;\n  }\n\n  if (typeof id === 'string') {\n    return id.length === 12 || (id.length === 24 && checkForHexRegExp.test(id));\n  }\n\n  if (id instanceof ObjectID) {\n    return true;\n  }\n\n  if (id instanceof _Buffer) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if (\n      typeof id.toHexString === 'function' &&\n      (id.id instanceof _Buffer || typeof id.id === 'string')\n  ) {\n    return id.id.length === 12 || (id.id.length === 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n};\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, 'generationTime', {\n  enumerable: true,\n  get: function() {\n    return this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n  },\n  set: function(value) {\n    // Encode time into first 4 bytes\n    this.id[3] = value & 0xff;\n    this.id[2] = (value >> 8) & 0xff;\n    this.id[1] = (value >> 16) & 0xff;\n    this.id[0] = (value >> 24) & 0xff;\n  }\n});\n\n/**\n * Expose.\n */\nmodule.exports = ObjectID;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.ObjectId = ObjectID;\n","'use strict';\n\nvar Long = require('../long').Long,\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Code = require('../code').Code,\n  Decimal128 = require('../decimal128'),\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  DBRef = require('../db_ref').DBRef,\n  Binary = require('../binary').Binary;\n\nvar normalizedFunctionString = require('./utils').normalizedFunctionString;\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar calculateObjectSize = function calculateObjectSize(\n  object,\n  serializeFunctions,\n  ignoreUndefined\n) {\n  var totalLength = 4 + 1;\n\n  if (Array.isArray(object)) {\n    for (var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(\n        i.toString(),\n        object[i],\n        serializeFunctions,\n        true,\n        ignoreUndefined\n      );\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n    if (object.toBSON) {\n      object = object.toBSON();\n    }\n\n    // Calculate size\n    for (var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n\n  return totalLength;\n};\n\n/**\n * @ignore\n * @api private\n */\nfunction calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {\n  // If we have toBSON defined, override the current object\n  if (value && value.toBSON) {\n    value = value.toBSON();\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if (isArray || !ignoreUndefined)\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      return 0;\n    case 'boolean':\n      return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n    case 'object':\n      if (\n        value == null ||\n        value instanceof MinKey ||\n        value instanceof MaxKey ||\n        value['_bsontype'] === 'MinKey' ||\n        value['_bsontype'] === 'MaxKey'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      } else if (value instanceof ObjectID || value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || isDate(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.length\n        );\n      } else if (\n        value instanceof Long ||\n        value instanceof Double ||\n        value instanceof Timestamp ||\n        value['_bsontype'] === 'Long' ||\n        value['_bsontype'] === 'Double' ||\n        value['_bsontype'] === 'Timestamp'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (value instanceof Decimal128 || value['_bsontype'] === 'Decimal128') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n      } else if (value instanceof Code || value['_bsontype'] === 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1\n          );\n        }\n      } else if (value instanceof Binary || value['_bsontype'] === 'Binary') {\n        // Check what kind of subtype we have\n        if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            (value.position + 1 + 4 + 1 + 4)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1)\n          );\n        }\n      } else if (value instanceof Symbol || value['_bsontype'] === 'Symbol') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          Buffer.byteLength(value.value, 'utf8') +\n          4 +\n          1 +\n          1\n        );\n      } else if (value instanceof DBRef || value['_bsontype'] === 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n          $ref: value.namespace,\n          $id: value.oid\n        };\n\n        // Add db reference if it exists\n        if (null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined)\n        );\n      } else if (\n        value instanceof RegExp ||\n        Object.prototype.toString.call(value) === '[object RegExp]'\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else if (value instanceof BSONRegExp || value['_bsontype'] === 'BSONRegExp') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.pattern, 'utf8') +\n          1 +\n          Buffer.byteLength(value.options, 'utf8') +\n          1\n        );\n      } else {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          calculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n          1\n        );\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if (\n        value instanceof RegExp ||\n        Object.prototype.toString.call(value) === '[object RegExp]' ||\n        String.call(value) === '[object RegExp]'\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else {\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else if (serializeFunctions) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\n            1\n          );\n        }\n      }\n  }\n\n  return 0;\n}\n\nvar BSON = {};\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = calculateObjectSize;\n","'use strict';\n\nvar Long = require('../long').Long,\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  Code = require('../code').Code,\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  Decimal128 = require('../decimal128'),\n  Int32 = require('../int_32'),\n  DBRef = require('../db_ref').DBRef,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Binary = require('../binary').Binary;\n\nvar utils = require('./utils');\n\nvar deserialize = function(buffer, options, isArray) {\n  options = options == null ? {} : options;\n  var index = options && options.index ? options.index : 0;\n  // Read the document size\n  var size =\n    buffer[index] |\n    (buffer[index + 1] << 8) |\n    (buffer[index + 2] << 16) |\n    (buffer[index + 3] << 24);\n\n  // Ensure buffer is valid size\n  if (size < 5 || buffer.length < size || size + index > buffer.length) {\n    throw new Error('corrupt bson message');\n  }\n\n  // Illegal end value\n  if (buffer[index + size - 1] !== 0) {\n    throw new Error(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n  }\n\n  // Start deserializtion\n  return deserializeObject(buffer, index, options, isArray);\n};\n\nvar deserializeObject = function(buffer, index, options, isArray) {\n  var evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n  var cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n  var cacheFunctionsCrc32 =\n    options['cacheFunctionsCrc32'] == null ? false : options['cacheFunctionsCrc32'];\n\n  if (!cacheFunctionsCrc32) var crc32 = null;\n\n  var fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n\n  // Return raw bson buffer instead of parsing it\n  var raw = options['raw'] == null ? false : options['raw'];\n\n  // Return BSONRegExp objects instead of native regular expressions\n  var bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n\n  // Controls the promotion of values vs wrapper classes\n  var promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n  var promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n  var promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];\n\n  // Set the start index\n  var startIndex = index;\n\n  // Validate that we have at least 4 bytes of buffer\n  if (buffer.length < 5) throw new Error('corrupt bson message < 5 bytes long');\n\n  // Read the document size\n  var size =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Ensure buffer is valid size\n  if (size < 5 || size > buffer.length) throw new Error('corrupt bson message');\n\n  // Create holding object\n  var object = isArray ? [] : {};\n  // Used for arrays to skip having to perform utf8 decoding\n  var arrayIndex = 0;\n\n  var done = false;\n\n  // While we have more left data left keep parsing\n  // while (buffer[index + 1] !== 0) {\n  while (!done) {\n    // Read the type\n    var elementType = buffer[index++];\n    // If we get a zero it's the last byte, exit\n    if (elementType === 0) break;\n\n    // Get the start search index\n    var i = index;\n    // Locate the end of the c string\n    while (buffer[i] !== 0x00 && i < buffer.length) {\n      i++;\n    }\n\n    // If are at the end of the buffer there is a problem with the document\n    if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n    var name = isArray ? arrayIndex++ : buffer.toString('utf8', index, i);\n\n    index = i + 1;\n\n    if (elementType === BSON.BSON_DATA_STRING) {\n      var stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      object[name] = buffer.toString('utf8', index, index + stringSize - 1);\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_OID) {\n      var oid = utils.allocBuffer(12);\n      buffer.copy(oid, 0, index, index + 12);\n      object[name] = new ObjectID(oid);\n      index = index + 12;\n    } else if (elementType === BSON.BSON_DATA_INT && promoteValues === false) {\n      object[name] = new Int32(\n        buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24)\n      );\n    } else if (elementType === BSON.BSON_DATA_INT) {\n      object[name] =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n    } else if (elementType === BSON.BSON_DATA_NUMBER && promoteValues === false) {\n      object[name] = new Double(buffer.readDoubleLE(index));\n      index = index + 8;\n    } else if (elementType === BSON.BSON_DATA_NUMBER) {\n      object[name] = buffer.readDoubleLE(index);\n      index = index + 8;\n    } else if (elementType === BSON.BSON_DATA_DATE) {\n      var lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      object[name] = new Date(new Long(lowBits, highBits).toNumber());\n    } else if (elementType === BSON.BSON_DATA_BOOLEAN) {\n      if (buffer[index] !== 0 && buffer[index] !== 1) throw new Error('illegal boolean type value');\n      object[name] = buffer[index++] === 1;\n    } else if (elementType === BSON.BSON_DATA_OBJECT) {\n      var _index = index;\n      var objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      if (objectSize <= 0 || objectSize > buffer.length - index)\n        throw new Error('bad embedded document length in bson');\n\n      // We have a raw value\n      if (raw) {\n        object[name] = buffer.slice(index, index + objectSize);\n      } else {\n        object[name] = deserializeObject(buffer, _index, options, false);\n      }\n\n      index = index + objectSize;\n    } else if (elementType === BSON.BSON_DATA_ARRAY) {\n      _index = index;\n      objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      var arrayOptions = options;\n\n      // Stop index\n      var stopIndex = index + objectSize;\n\n      // All elements of array to be returned as raw bson\n      if (fieldsAsRaw && fieldsAsRaw[name]) {\n        arrayOptions = {};\n        for (var n in options) arrayOptions[n] = options[n];\n        arrayOptions['raw'] = true;\n      }\n\n      object[name] = deserializeObject(buffer, _index, arrayOptions, true);\n      index = index + objectSize;\n\n      if (buffer[index - 1] !== 0) throw new Error('invalid array terminator byte');\n      if (index !== stopIndex) throw new Error('corrupted array bson');\n    } else if (elementType === BSON.BSON_DATA_UNDEFINED) {\n      object[name] = undefined;\n    } else if (elementType === BSON.BSON_DATA_NULL) {\n      object[name] = null;\n    } else if (elementType === BSON.BSON_DATA_LONG) {\n      // Unpack the low and high bits\n      lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var long = new Long(lowBits, highBits);\n      // Promote the long if possible\n      if (promoteLongs && promoteValues === true) {\n        object[name] =\n          long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n            ? long.toNumber()\n            : long;\n      } else {\n        object[name] = long;\n      }\n    } else if (elementType === BSON.BSON_DATA_DECIMAL128) {\n      // Buffer to contain the decimal bytes\n      var bytes = utils.allocBuffer(16);\n      // Copy the next 16 bytes into the bytes buffer\n      buffer.copy(bytes, 0, index, index + 16);\n      // Update index\n      index = index + 16;\n      // Assign the new Decimal128 value\n      var decimal128 = new Decimal128(bytes);\n      // If we have an alternative mapper use that\n      object[name] = decimal128.toObject ? decimal128.toObject() : decimal128;\n    } else if (elementType === BSON.BSON_DATA_BINARY) {\n      var binarySize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var totalBinarySize = binarySize;\n      var subType = buffer[index++];\n\n      // Did we have a negative binary size, throw\n      if (binarySize < 0) throw new Error('Negative binary type element size found');\n\n      // Is the length longer than the document\n      if (binarySize > buffer.length) throw new Error('Binary type size larger than document size');\n\n      // Decode as raw Buffer object if options specifies it\n      if (buffer['slice'] != null) {\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize =\n            buffer[index++] |\n            (buffer[index++] << 8) |\n            (buffer[index++] << 16) |\n            (buffer[index++] << 24);\n          if (binarySize < 0)\n            throw new Error('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to long binary size');\n          if (binarySize < totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to short binary size');\n        }\n\n        if (promoteBuffers && promoteValues) {\n          object[name] = buffer.slice(index, index + binarySize);\n        } else {\n          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);\n        }\n      } else {\n        var _buffer =\n          typeof Uint8Array !== 'undefined'\n            ? new Uint8Array(new ArrayBuffer(binarySize))\n            : new Array(binarySize);\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize =\n            buffer[index++] |\n            (buffer[index++] << 8) |\n            (buffer[index++] << 16) |\n            (buffer[index++] << 24);\n          if (binarySize < 0)\n            throw new Error('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to long binary size');\n          if (binarySize < totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to short binary size');\n        }\n\n        // Copy the data\n        for (i = 0; i < binarySize; i++) {\n          _buffer[i] = buffer[index + i];\n        }\n\n        if (promoteBuffers && promoteValues) {\n          object[name] = _buffer;\n        } else {\n          object[name] = new Binary(_buffer, subType);\n        }\n      }\n\n      // Update the index\n      index = index + binarySize;\n    } else if (elementType === BSON.BSON_DATA_REGEXP && bsonRegExp === false) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      var source = buffer.toString('utf8', index, i);\n      // Create the regexp\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      var regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // For each option add the corresponding one for javascript\n      var optionsArray = new Array(regExpOptions.length);\n\n      // Parse options\n      for (i = 0; i < regExpOptions.length; i++) {\n        switch (regExpOptions[i]) {\n          case 'm':\n            optionsArray[i] = 'm';\n            break;\n          case 's':\n            optionsArray[i] = 'g';\n            break;\n          case 'i':\n            optionsArray[i] = 'i';\n            break;\n        }\n      }\n\n      object[name] = new RegExp(source, optionsArray.join(''));\n    } else if (elementType === BSON.BSON_DATA_REGEXP && bsonRegExp === true) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      source = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Set the object\n      object[name] = new BSONRegExp(source, regExpOptions);\n    } else if (elementType === BSON.BSON_DATA_SYMBOL) {\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_TIMESTAMP) {\n      lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      object[name] = new Timestamp(lowBits, highBits);\n    } else if (elementType === BSON.BSON_DATA_MIN_KEY) {\n      object[name] = new MinKey();\n    } else if (elementType === BSON.BSON_DATA_MAX_KEY) {\n      object[name] = new MaxKey();\n    } else if (elementType === BSON.BSON_DATA_CODE) {\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      var functionString = buffer.toString('utf8', index, index + stringSize - 1);\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n        } else {\n          object[name] = isolateEval(functionString);\n        }\n      } else {\n        object[name] = new Code(functionString);\n      }\n\n      // Update parse index position\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_CODE_W_SCOPE) {\n      var totalSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n\n      // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n      if (totalSize < 4 + 4 + 4 + 1) {\n        throw new Error('code_w_scope total size shorter minimum expected length');\n      }\n\n      // Get the code string size\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n\n      // Javascript function\n      functionString = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n      // Parse the element\n      _index = index;\n      // Decode the size of the object document\n      objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      // Decode the scope object\n      var scopeObject = deserializeObject(buffer, _index, options, false);\n      // Adjust the index\n      index = index + objectSize;\n\n      // Check if field length is to short\n      if (totalSize < 4 + 4 + objectSize + stringSize) {\n        throw new Error('code_w_scope total size is to short, truncating scope');\n      }\n\n      // Check if totalSize field is to long\n      if (totalSize > 4 + 4 + objectSize + stringSize) {\n        throw new Error('code_w_scope total size is to long, clips outer document');\n      }\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n        } else {\n          object[name] = isolateEval(functionString);\n        }\n\n        object[name].scope = scopeObject;\n      } else {\n        object[name] = new Code(functionString, scopeObject);\n      }\n    } else if (elementType === BSON.BSON_DATA_DBPOINTER) {\n      // Get the code string size\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      // Namespace\n      var namespace = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n\n      // Read the oid\n      var oidBuffer = utils.allocBuffer(12);\n      buffer.copy(oidBuffer, 0, index, index + 12);\n      oid = new ObjectID(oidBuffer);\n\n      // Update the index\n      index = index + 12;\n\n      // Split the namespace\n      var parts = namespace.split('.');\n      var db = parts.shift();\n      var collection = parts.join('.');\n      // Upgrade to DBRef type\n      object[name] = new DBRef(collection, oid, db);\n    } else {\n      throw new Error(\n        'Detected unknown BSON type ' +\n          elementType.toString(16) +\n          ' for fieldname \"' +\n          name +\n          '\", are you using the latest BSON parser'\n      );\n    }\n  }\n\n  // Check if the deserialization was against a valid array/object\n  if (size !== index - startIndex) {\n    if (isArray) throw new Error('corrupt array bson');\n    throw new Error('corrupt object bson');\n  }\n\n  // Check if we have a db ref object\n  if (object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);\n  return object;\n};\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEvalWithHash = function(functionCache, hash, functionString, object) {\n  // Contains the value we are going to set\n  var value = null;\n\n  // Check for cache hit, eval if missing and return cached function\n  if (functionCache[hash] == null) {\n    eval('value = ' + functionString);\n    functionCache[hash] = value;\n  }\n  // Set the object\n  return functionCache[hash].bind(object);\n};\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEval = function(functionString) {\n  // Contains the value we are going to set\n  var value = null;\n  // Eval the function\n  eval('value = ' + functionString);\n  return value;\n};\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\nvar functionCache = (BSON.functionCache = {});\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_DBPOINTER\n **/\nBSON.BSON_DATA_DBPOINTER = 12;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = deserialize;\n","'use strict';\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754,\n  Long = require('../long').Long,\n  Map = require('../map'),\n  Binary = require('../binary').Binary;\n\nvar normalizedFunctionString = require('./utils').normalizedFunctionString;\n\n// try {\n//   var _Buffer = Uint8Array;\n// } catch (e) {\n//   _Buffer = Buffer;\n// }\n\nvar regexp = /\\x00/; // eslint-disable-line no-control-regex\nvar ignoreKeys = ['$db', '$ref', '$id', '$clusterTime'];\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar isRegExp = function isRegExp(d) {\n  return Object.prototype.toString.call(d) === '[object RegExp]';\n};\n\nvar serializeString = function(buffer, key, value, index, isArray) {\n  // Encode String type\n  buffer[index++] = BSON.BSON_DATA_STRING;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n  // Write the string\n  var size = buffer.write(value, index + 4, 'utf8');\n  // Write the size of the string to buffer\n  buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n  buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n  buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n  buffer[index] = (size + 1) & 0xff;\n  // Update index\n  index = index + 4 + size;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeNumber = function(buffer, key, value, index, isArray) {\n  // We have an integer value\n  if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n    // If the value fits in 32 bits encode as int, if it fits in a double\n    // encode it as a double, otherwise long\n    if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n      // Set int type 32 bits or less\n      buffer[index++] = BSON.BSON_DATA_INT;\n      // Number of written bytes\n      var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write the int value\n      buffer[index++] = value & 0xff;\n      buffer[index++] = (value >> 8) & 0xff;\n      buffer[index++] = (value >> 16) & 0xff;\n      buffer[index++] = (value >> 24) & 0xff;\n    } else if (value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n      // Encode as double\n      buffer[index++] = BSON.BSON_DATA_NUMBER;\n      // Number of written bytes\n      numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write float\n      writeIEEE754(buffer, value, index, 'little', 52, 8);\n      // Ajust index\n      index = index + 8;\n    } else {\n      // Set long type\n      buffer[index++] = BSON.BSON_DATA_LONG;\n      // Number of written bytes\n      numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      var longVal = Long.fromNumber(value);\n      var lowBits = longVal.getLowBits();\n      var highBits = longVal.getHighBits();\n      // Encode low bits\n      buffer[index++] = lowBits & 0xff;\n      buffer[index++] = (lowBits >> 8) & 0xff;\n      buffer[index++] = (lowBits >> 16) & 0xff;\n      buffer[index++] = (lowBits >> 24) & 0xff;\n      // Encode high bits\n      buffer[index++] = highBits & 0xff;\n      buffer[index++] = (highBits >> 8) & 0xff;\n      buffer[index++] = (highBits >> 16) & 0xff;\n      buffer[index++] = (highBits >> 24) & 0xff;\n    }\n  } else {\n    // Encode as double\n    buffer[index++] = BSON.BSON_DATA_NUMBER;\n    // Number of written bytes\n    numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    writeIEEE754(buffer, value, index, 'little', 52, 8);\n    // Ajust index\n    index = index + 8;\n  }\n\n  return index;\n};\n\nvar serializeNull = function(buffer, key, value, index, isArray) {\n  // Set long type\n  buffer[index++] = BSON.BSON_DATA_NULL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeBoolean = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n  return index;\n};\n\nvar serializeDate = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_DATE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  var dateInMilis = Long.fromNumber(value.getTime());\n  var lowBits = dateInMilis.getLowBits();\n  var highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n};\n\nvar serializeRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  if (value.source && value.source.match(regexp) != null) {\n    throw Error('value ' + value.source + ' must not contain null bytes');\n  }\n  // Adjust the index\n  index = index + buffer.write(value.source, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if (value.global) buffer[index++] = 0x73; // s\n  if (value.ignoreCase) buffer[index++] = 0x69; // i\n  if (value.multiline) buffer[index++] = 0x6d; // m\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeBSONRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Check the pattern for 0 bytes\n  if (value.pattern.match(regexp) != null) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n  }\n\n  // Adjust the index\n  index = index + buffer.write(value.pattern, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the options\n  index =\n    index +\n    buffer.write(\n      value.options\n        .split('')\n        .sort()\n        .join(''),\n      index,\n      'utf8'\n    );\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeMinMax = function(buffer, key, value, index, isArray) {\n  // Write the type of either min or max key\n  if (value === null) {\n    buffer[index++] = BSON.BSON_DATA_NULL;\n  } else if (value._bsontype === 'MinKey') {\n    buffer[index++] = BSON.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeObjectId = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OID;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the objectId into the shared buffer\n  if (typeof value.id === 'string') {\n    buffer.write(value.id, index, 'binary');\n  } else if (value.id && value.id.copy) {\n    value.id.copy(buffer, index, 0, 12);\n  } else {\n    throw new Error('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n  }\n\n  // Ajust index\n  return index + 12;\n};\n\nvar serializeBuffer = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  var size = value.length;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the default subtype\n  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  value.copy(buffer, index, 0, size);\n  // Adjust the index\n  index = index + size;\n  return index;\n};\n\nvar serializeObject = function(\n  buffer,\n  key,\n  value,\n  index,\n  checkKeys,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  isArray,\n  path\n) {\n  for (var i = 0; i < path.length; i++) {\n    if (path[i] === value) throw new Error('cyclic dependency detected');\n  }\n\n  // Push value to stack\n  path.push(value);\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  var endIndex = serializeInto(\n    buffer,\n    value,\n    checkKeys,\n    index,\n    depth + 1,\n    serializeFunctions,\n    ignoreUndefined,\n    path\n  );\n  // Pop stack\n  path.pop();\n  // Write size\n  return endIndex;\n};\n\nvar serializeDecimal128 = function(buffer, key, value, index, isArray) {\n  buffer[index++] = BSON.BSON_DATA_DECIMAL128;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the data from the value\n  value.bytes.copy(buffer, index, 0, 16);\n  return index + 16;\n};\n\nvar serializeLong = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = value._bsontype === 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  var lowBits = value.getLowBits();\n  var highBits = value.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n};\n\nvar serializeInt32 = function(buffer, key, value, index, isArray) {\n  // Set int type 32 bits or less\n  buffer[index++] = BSON.BSON_DATA_INT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the int value\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return index;\n};\n\nvar serializeDouble = function(buffer, key, value, index, isArray) {\n  // Encode as double\n  buffer[index++] = BSON.BSON_DATA_NUMBER;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write float\n  writeIEEE754(buffer, value, index, 'little', 52, 8);\n  // Ajust index\n  index = index + 8;\n  return index;\n};\n\nvar serializeFunction = function(buffer, key, value, index, checkKeys, depth, isArray) {\n  buffer[index++] = BSON.BSON_DATA_CODE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Function string\n  var functionString = normalizedFunctionString(value);\n\n  // Write the string\n  var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeCode = function(\n  buffer,\n  key,\n  value,\n  index,\n  checkKeys,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  isArray\n) {\n  if (value.scope && typeof value.scope === 'object') {\n    // Write the type\n    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    var startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    var functionString = typeof value.code === 'string' ? value.code : value.code.toString();\n    // Index adjustment\n    index = index + 4;\n    // Write string into buffer\n    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = codeSize & 0xff;\n    buffer[index + 1] = (codeSize >> 8) & 0xff;\n    buffer[index + 2] = (codeSize >> 16) & 0xff;\n    buffer[index + 3] = (codeSize >> 24) & 0xff;\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    //\n    // Serialize the scope value\n    var endIndex = serializeInto(\n      buffer,\n      value.scope,\n      checkKeys,\n      index,\n      depth + 1,\n      serializeFunctions,\n      ignoreUndefined\n    );\n    index = endIndex - 1;\n\n    // Writ the total\n    var totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    buffer[startIndex++] = totalSize & 0xff;\n    buffer[startIndex++] = (totalSize >> 8) & 0xff;\n    buffer[startIndex++] = (totalSize >> 16) & 0xff;\n    buffer[startIndex++] = (totalSize >> 24) & 0xff;\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_CODE;\n    // Number of written bytes\n    numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    functionString = value.code.toString();\n    // Write the string\n    var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n  return index;\n};\n\nvar serializeBinary = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  var data = value.value(true);\n  // Calculate size\n  var size = value.position;\n  // Add the deprecated 02 type 4 bytes of size to total\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n    size = size - 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n  }\n\n  // Write the data to the object\n  data.copy(buffer, index, 0, value.position);\n  // Adjust the index\n  index = index + value.position;\n  return index;\n};\n\nvar serializeSymbol = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the string\n  var size = buffer.write(value.value, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  var startIndex = index;\n  var endIndex;\n\n  // Serialize object\n  if (null != value.db) {\n    endIndex = serializeInto(\n      buffer,\n      {\n        $ref: value.namespace,\n        $id: value.oid,\n        $db: value.db\n      },\n      false,\n      index,\n      depth + 1,\n      serializeFunctions\n    );\n  } else {\n    endIndex = serializeInto(\n      buffer,\n      {\n        $ref: value.namespace,\n        $id: value.oid\n      },\n      false,\n      index,\n      depth + 1,\n      serializeFunctions\n    );\n  }\n\n  // Calculate object size\n  var size = endIndex - startIndex;\n  // Write the size\n  buffer[startIndex++] = size & 0xff;\n  buffer[startIndex++] = (size >> 8) & 0xff;\n  buffer[startIndex++] = (size >> 16) & 0xff;\n  buffer[startIndex++] = (size >> 24) & 0xff;\n  // Set index\n  return endIndex;\n};\n\nvar serializeInto = function serializeInto(\n  buffer,\n  object,\n  checkKeys,\n  startingIndex,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  path\n) {\n  startingIndex = startingIndex || 0;\n  path = path || [];\n\n  // Push the object to the path\n  path.push(object);\n\n  // Start place to serialize into\n  var index = startingIndex + 4;\n  // var self = this;\n\n  // Special case isArray\n  if (Array.isArray(object)) {\n    // Get object keys\n    for (var i = 0; i < object.length; i++) {\n      var key = '' + i;\n      var value = object[i];\n\n      // Is there an override value\n      if (value && value.toBSON) {\n        if (typeof value.toBSON !== 'function') throw new Error('toBSON is not a function');\n        value = value.toBSON();\n      }\n\n      var type = typeof value;\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index, true);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index, true);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index, true);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index, true);\n      } else if (value === undefined) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        index = serializeObjectId(buffer, key, value, index, true);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index, true);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index, true);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index, true);\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          true\n        );\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true\n        );\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index, true);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n      }\n    }\n  } else if (object instanceof Map) {\n    var iterator = object.entries();\n    var done = false;\n\n    while (!done) {\n      // Unpack the next entry\n      var entry = iterator.next();\n      done = entry.done;\n      // Are we done, then skip and terminate\n      if (done) continue;\n\n      // Get the entry values\n      key = entry.value[0];\n      value = entry.value[1];\n\n      // Check the type of the value\n      type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && ignoreKeys.indexOf(key) === -1) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n        // } else if (value === undefined && ignoreUndefined === true) {\n      } else if (value === null || (value === undefined && ignoreUndefined === false)) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n      }\n    }\n  } else {\n    // Did we provide a custom serialization method\n    if (object.toBSON) {\n      if (typeof object.toBSON !== 'function') throw new Error('toBSON is not a function');\n      object = object.toBSON();\n      if (object != null && typeof object !== 'object')\n        throw new Error('toBSON function did not return an object');\n    }\n\n    // Iterate over all the keys\n    for (key in object) {\n      value = object[key];\n      // Is there an override value\n      if (value && value.toBSON) {\n        if (typeof value.toBSON !== 'function') throw new Error('toBSON is not a function');\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && ignoreKeys.indexOf(key) === -1) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if (value === undefined) {\n        if (ignoreUndefined === false) index = serializeNull(buffer, key, value, index);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectID' || value['_bsontype'] === 'ObjectId') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n      }\n    }\n  }\n\n  // Remove the path\n  path.pop();\n\n  // Final padding byte for object\n  buffer[index++] = 0x00;\n\n  // Final size\n  var size = index - startingIndex;\n  // Write the size of the object\n  buffer[startingIndex++] = size & 0xff;\n  buffer[startingIndex++] = (size >> 8) & 0xff;\n  buffer[startingIndex++] = (size >> 16) & 0xff;\n  buffer[startingIndex++] = (size >> 24) & 0xff;\n  return index;\n};\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\n// var functionCache = (BSON.functionCache = {});\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type, deprecated\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\n// var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\n// var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = serializeInto;\n","'use strict';\n\n/**\n * Normalizes our expected stringified form of a function across versions of node\n * @param {Function} fn The function to stringify\n */\nfunction normalizedFunctionString(fn) {\n  return fn.toString().replace(/function *\\(/, 'function (');\n}\n\nfunction newBuffer(item, encoding) {\n  return new Buffer(item, encoding);\n}\n\nfunction allocBuffer() {\n  return Buffer.alloc.apply(Buffer, arguments);\n}\n\nfunction toBuffer() {\n  return Buffer.from.apply(Buffer, arguments);\n}\n\nmodule.exports = {\n  normalizedFunctionString: normalizedFunctionString,\n  allocBuffer: typeof Buffer.alloc === 'function' ? allocBuffer : newBuffer,\n  toBuffer: typeof Buffer.from === 'function' ? toBuffer : newBuffer\n};\n\n","/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nfunction BSONRegExp(pattern, options) {\n  if (!(this instanceof BSONRegExp)) return new BSONRegExp();\n\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern || '';\n  this.options = options || '';\n\n  // Validate options\n  for (var i = 0; i < this.options.length; i++) {\n    if (\n      !(\n        this.options[i] === 'i' ||\n        this.options[i] === 'm' ||\n        this.options[i] === 'x' ||\n        this.options[i] === 'l' ||\n        this.options[i] === 's' ||\n        this.options[i] === 'u'\n      )\n    ) {\n      throw new Error('the regular expression options [' + this.options[i] + '] is not supported');\n    }\n  }\n}\n\nmodule.exports = BSONRegExp;\nmodule.exports.BSONRegExp = BSONRegExp;\n","// Custom inspect property name / symbol.\nvar inspect = Buffer ? require('util').inspect.custom || 'inspect' : 'inspect';\n\n/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {string} value the string representing the symbol.\n * @return {Symbol}\n */\nfunction Symbol(value) {\n  if (!(this instanceof Symbol)) return new Symbol(value);\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toString = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype[inspect] = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Symbol;\nmodule.exports.Symbol = Symbol;\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * This type is for INTERNAL use in MongoDB only and should not be used in applications.\n * The appropriate corresponding type is the JavaScript Date type.\n * \n * Defines a Timestamp class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Timestamp\". This\n * implementation is derived from TimestampLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Timestamps.\n *\n * The internal representation of a Timestamp is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n */\nfunction Timestamp(low, high) {\n  if (!(this instanceof Timestamp)) return new Timestamp(low, high);\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0; // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0; // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n};\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n};\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {string} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return this.toString();\n};\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {string} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Timestamp value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixTimestamp = Timestamp.fromNumber(radix);\n      var div = this.div(radixTimestamp);\n      var rem = div.multiply(radixTimestamp).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  rem = this;\n  var result = '';\n\n  while (!rem.isZero()) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return this.low_ >= 0 ? this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ !== 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) !== 0) {\n        break;\n      }\n    }\n    return this.high_ !== 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ === 0 && this.low_ === 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) === 1;\n};\n\n/**\n * Return whether this Timestamp equals the other\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return this.high_ === other.high_ && this.low_ === other.low_;\n};\n\n/**\n * Return whether this Timestamp does not equal the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return this.high_ !== other.high_ || this.low_ !== other.low_;\n};\n\n/**\n * Return whether this Timestamp is less than the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Timestamp is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Timestamp is greater than the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Timestamp is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Timestamp with the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 + b48;\n  c48 &= 0xffff;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate()\n        .multiply(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Timestamps are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) && other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xffff;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Timestamp divided by the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp by which to divide.\n * @return {Timestamp} this Timestamp divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) || other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate()\n        .div(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Timestamp modulo the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp by which to mod.\n * @return {Timestamp} this Timestamp modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Timestamp with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(low << numBits, (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Timestamp with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits((low >>> numBits) | (high << (32 - numBits)), high >> numBits);\n    } else {\n      return Timestamp.fromBits(high >> (numBits - 32), high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits);\n    } else if (numBits === 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Timestamp representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n      (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n      (value / Timestamp.TWO_PWR_32_DBL_) | 0\n    );\n  }\n};\n\n/**\n * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Timestamp representation of the given string, written using the given radix.\n *\n * @method\n * @param {string} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length === 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) === '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n/**\n * A cache of the Timestamp representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE = Timestamp.fromBits(0xffffffff | 0, 0x7fffffff | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\n/**\n * Expose.\n */\nmodule.exports = Timestamp;\nmodule.exports.Timestamp = Timestamp;\n","'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array, options) {\n  var options = options || {};\n\n  this._head = 0;\n  this._tail = 0;\n  this._capacity = options.capacity;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * -------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peekAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (item === undefined) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._capacity && this.size() > this._capacity) this.pop();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (item === undefined) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n  if (this._capacity && this.size() > this._capacity) {\n    this.shift();\n  }\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = ( i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length *= 2;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n","module.exports = Pager\n\nfunction Pager (pageSize, opts) {\n  if (!(this instanceof Pager)) return new Pager(pageSize, opts)\n\n  this.length = 0\n  this.updates = []\n  this.path = new Uint16Array(4)\n  this.pages = new Array(32768)\n  this.maxPages = this.pages.length\n  this.level = 0\n  this.pageSize = pageSize || 1024\n  this.deduplicate = opts ? opts.deduplicate : null\n  this.zeros = this.deduplicate ? alloc(this.deduplicate.length) : null\n}\n\nPager.prototype.updated = function (page) {\n  while (this.deduplicate && page.buffer[page.deduplicate] === this.deduplicate[page.deduplicate]) {\n    page.deduplicate++\n    if (page.deduplicate === this.deduplicate.length) {\n      page.deduplicate = 0\n      if (page.buffer.equals && page.buffer.equals(this.deduplicate)) page.buffer = this.deduplicate\n      break\n    }\n  }\n  if (page.updated || !this.updates) return\n  page.updated = true\n  this.updates.push(page)\n}\n\nPager.prototype.lastUpdate = function () {\n  if (!this.updates || !this.updates.length) return null\n  var page = this.updates.pop()\n  page.updated = false\n  return page\n}\n\nPager.prototype._array = function (i, noAllocate) {\n  if (i >= this.maxPages) {\n    if (noAllocate) return\n    grow(this, i)\n  }\n\n  factor(i, this.path)\n\n  var arr = this.pages\n\n  for (var j = this.level; j > 0; j--) {\n    var p = this.path[j]\n    var next = arr[p]\n\n    if (!next) {\n      if (noAllocate) return\n      next = arr[p] = new Array(32768)\n    }\n\n    arr = next\n  }\n\n  return arr\n}\n\nPager.prototype.get = function (i, noAllocate) {\n  var arr = this._array(i, noAllocate)\n  var first = this.path[0]\n  var page = arr && arr[first]\n\n  if (!page && !noAllocate) {\n    page = arr[first] = new Page(i, alloc(this.pageSize))\n    if (i >= this.length) this.length = i + 1\n  }\n\n  if (page && page.buffer === this.deduplicate && this.deduplicate && !noAllocate) {\n    page.buffer = copy(page.buffer)\n    page.deduplicate = 0\n  }\n\n  return page\n}\n\nPager.prototype.set = function (i, buf) {\n  var arr = this._array(i, false)\n  var first = this.path[0]\n\n  if (i >= this.length) this.length = i + 1\n\n  if (!buf || (this.zeros && buf.equals && buf.equals(this.zeros))) {\n    arr[first] = undefined\n    return\n  }\n\n  if (this.deduplicate && buf.equals && buf.equals(this.deduplicate)) {\n    buf = this.deduplicate\n  }\n\n  var page = arr[first]\n  var b = truncate(buf, this.pageSize)\n\n  if (page) page.buffer = b\n  else arr[first] = new Page(i, b)\n}\n\nPager.prototype.toBuffer = function () {\n  var list = new Array(this.length)\n  var empty = alloc(this.pageSize)\n  var ptr = 0\n\n  while (ptr < list.length) {\n    var arr = this._array(ptr, true)\n    for (var i = 0; i < 32768 && ptr < list.length; i++) {\n      list[ptr++] = (arr && arr[i]) ? arr[i].buffer : empty\n    }\n  }\n\n  return Buffer.concat(list)\n}\n\nfunction grow (pager, index) {\n  while (pager.maxPages < index) {\n    var old = pager.pages\n    pager.pages = new Array(32768)\n    pager.pages[0] = old\n    pager.level++\n    pager.maxPages *= 32768\n  }\n}\n\nfunction truncate (buf, len) {\n  if (buf.length === len) return buf\n  if (buf.length > len) return buf.slice(0, len)\n  var cpy = alloc(len)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction alloc (size) {\n  if (Buffer.alloc) return Buffer.alloc(size)\n  var buf = new Buffer(size)\n  buf.fill(0)\n  return buf\n}\n\nfunction copy (buf) {\n  var cpy = Buffer.allocUnsafe ? Buffer.allocUnsafe(buf.length) : new Buffer(buf.length)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction Page (i, buf) {\n  this.offset = i * buf.length\n  this.buffer = buf\n  this.updated = false\n  this.deduplicate = 0\n}\n\nfunction factor (n, out) {\n  n = (n - (out[0] = (n & 32767))) / 32768\n  n = (n - (out[1] = (n & 32767))) / 32768\n  out[3] = ((n - (out[2] = (n & 32767))) / 32768) & 32767\n}\n","'use strict';\n\n// Core module\nconst core = require('./lib/core');\nconst Instrumentation = require('./lib/apm');\n\n// Set up the connect function\nconst connect = require('./lib/mongo_client').connect;\n\n// Expose error class\nconnect.MongoError = core.MongoError;\nconnect.MongoNetworkError = core.MongoNetworkError;\nconnect.MongoTimeoutError = core.MongoTimeoutError;\nconnect.MongoServerSelectionError = core.MongoServerSelectionError;\nconnect.MongoParseError = core.MongoParseError;\nconnect.MongoWriteConcernError = core.MongoWriteConcernError;\nconnect.MongoBulkWriteError = require('./lib/bulk/common').BulkWriteError;\nconnect.BulkWriteError = connect.MongoBulkWriteError;\n\n// Actual driver classes exported\nconnect.Admin = require('./lib/admin');\nconnect.MongoClient = require('./lib/mongo_client');\nconnect.Db = require('./lib/db');\nconnect.Collection = require('./lib/collection');\nconnect.Server = require('./lib/topologies/server');\nconnect.ReplSet = require('./lib/topologies/replset');\nconnect.Mongos = require('./lib/topologies/mongos');\nconnect.ReadPreference = core.ReadPreference;\nconnect.GridStore = require('./lib/gridfs/grid_store');\nconnect.Chunk = require('./lib/gridfs/chunk');\nconnect.Logger = core.Logger;\nconnect.AggregationCursor = require('./lib/aggregation_cursor');\nconnect.CommandCursor = require('./lib/command_cursor');\nconnect.Cursor = require('./lib/cursor');\nconnect.GridFSBucket = require('./lib/gridfs-stream');\n// Exported to be used in tests not to be used anywhere else\nconnect.CoreServer = core.Server;\nconnect.CoreConnection = core.Connection;\n\n// BSON types exported\nconnect.Binary = core.BSON.Binary;\nconnect.Code = core.BSON.Code;\nconnect.Map = core.BSON.Map;\nconnect.DBRef = core.BSON.DBRef;\nconnect.Double = core.BSON.Double;\nconnect.Int32 = core.BSON.Int32;\nconnect.Long = core.BSON.Long;\nconnect.MinKey = core.BSON.MinKey;\nconnect.MaxKey = core.BSON.MaxKey;\nconnect.ObjectID = core.BSON.ObjectID;\nconnect.ObjectId = core.BSON.ObjectID;\nconnect.Symbol = core.BSON.Symbol;\nconnect.Timestamp = core.BSON.Timestamp;\nconnect.BSONRegExp = core.BSON.BSONRegExp;\nconnect.Decimal128 = core.BSON.Decimal128;\n\n// Add connect method\nconnect.connect = connect;\n\n// Set up the instrumentation method\nconnect.instrument = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const instrumentation = new Instrumentation();\n  instrumentation.instrument(connect.MongoClient, callback);\n  return instrumentation;\n};\n\n// Set our exports to be the connect function\nmodule.exports = connect;\n","'use strict';\n\nconst applyWriteConcern = require('./utils').applyWriteConcern;\n\nconst AddUserOperation = require('./operations/add_user');\nconst ExecuteDbAdminCommandOperation = require('./operations/execute_db_admin_command');\nconst RemoveUserOperation = require('./operations/remove_user');\nconst ValidateCollectionOperation = require('./operations/validate_collection');\nconst ListDatabasesOperation = require('./operations/list_databases');\n\nconst executeOperation = require('./operations/execute_operation');\n\n/**\n * @fileOverview The **Admin** class is an internal class that allows convenient access to\n * the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n *\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Use the admin database for the operation\n *   const adminDb = client.db(dbName).admin();\n *\n *   // List all the available databases\n *   adminDb.listDatabases(function(err, dbs) {\n *     test.equal(null, err);\n *     test.ok(dbs.databases.length > 0);\n *     client.close();\n *   });\n * });\n */\n\n/**\n * Create a new Admin instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @return {Admin} a collection instance.\n */\nfunction Admin(db, topology, promiseLibrary) {\n  if (!(this instanceof Admin)) return new Admin(db, topology);\n\n  // Internal state\n  this.s = {\n    db: db,\n    topology: topology,\n    promiseLibrary: promiseLibrary\n  };\n}\n\n/**\n * The callback format for results\n * @callback Admin~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.command = function(command, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : {};\n\n  const commandOperation = new ExecuteDbAdminCommandOperation(this.s.db, command, options);\n\n  return executeOperation(this.s.db.s.topology, commandOperation, callback);\n};\n\n/**\n * Retrieve the server information for the current\n * instance of the db client\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.buildInfo = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { buildinfo: 1 };\n\n  const buildInfoOperation = new ExecuteDbAdminCommandOperation(this.s.db, cmd, options);\n\n  return executeOperation(this.s.db.s.topology, buildInfoOperation, callback);\n};\n\n/**\n * Retrieve the server information for the current\n * instance of the db client\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.serverInfo = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { buildinfo: 1 };\n\n  const serverInfoOperation = new ExecuteDbAdminCommandOperation(this.s.db, cmd, options);\n\n  return executeOperation(this.s.db.s.topology, serverInfoOperation, callback);\n};\n\n/**\n * Retrieve this db's server status.\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.serverStatus = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const serverStatusOperation = new ExecuteDbAdminCommandOperation(\n    this.s.db,\n    { serverStatus: 1 },\n    options\n  );\n\n  return executeOperation(this.s.db.s.topology, serverStatusOperation, callback);\n};\n\n/**\n * Ping the MongoDB server and retrieve results\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.ping = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { ping: 1 };\n\n  const pingOperation = new ExecuteDbAdminCommandOperation(this.s.db, cmd, options);\n\n  return executeOperation(this.s.db.s.topology, pingOperation, callback);\n};\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {boolean} [options.fsync=false] **Deprecated** Specify a file sync write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {object} [options.customData] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.addUser = function(username, password, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  // Special case where there is no password ($external users)\n  if (typeof username === 'string' && password != null && typeof password === 'object') {\n    options = password;\n    password = null;\n  }\n\n  options = args.length ? args.shift() : {};\n  options = Object.assign({}, options);\n  // Get the options\n  options = applyWriteConcern(options, { db: this.s.db });\n  // Set the db name to admin\n  options.dbName = 'admin';\n\n  const addUserOperation = new AddUserOperation(this.s.db, username, password, options);\n\n  return executeOperation(this.s.db.s.topology, addUserOperation, callback);\n};\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {boolean} [options.fsync=false] **Deprecated** Specify a file sync write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.removeUser = function(username, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  options = args.length ? args.shift() : {};\n  options = Object.assign({}, options);\n  // Get the options\n  options = applyWriteConcern(options, { db: this.s.db });\n  // Set the db name\n  options.dbName = 'admin';\n\n  const removeUserOperation = new RemoveUserOperation(this.s.db, username, options);\n\n  return executeOperation(this.s.db.s.topology, removeUserOperation, callback);\n};\n\n/**\n * Validate an existing collection\n *\n * @param {string} collectionName The name of the collection to validate.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.background] Validates a collection in the background, without interrupting read or write traffic (only in MongoDB 4.4+)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.validateCollection = function(collectionName, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const validateCollectionOperation = new ValidateCollectionOperation(\n    this,\n    collectionName,\n    options\n  );\n\n  return executeOperation(this.s.db.s.topology, validateCollectionOperation, callback);\n};\n\n/**\n * List the available databases\n *\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.nameOnly=false] Whether the command should return only db names, or names and size info.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.listDatabases = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(\n    this.s.db.s.topology,\n    new ListDatabasesOperation(this.s.db, options),\n    callback\n  );\n};\n\n/**\n * Get ReplicaSet status\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.replSetGetStatus = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const replSetGetStatusOperation = new ExecuteDbAdminCommandOperation(\n    this.s.db,\n    { replSetGetStatus: 1 },\n    options\n  );\n\n  return executeOperation(this.s.db.s.topology, replSetGetStatusOperation, callback);\n};\n\nmodule.exports = Admin;\n","'use strict';\n\nconst MongoError = require('./core').MongoError;\nconst Cursor = require('./cursor');\nconst CursorState = require('./core/cursor').CursorState;\n\n/**\n * @fileOverview The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n *\n * **AGGREGATIONCURSOR Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // Show that duplicate records got dropped\n *     col.aggregation({}, {cursor: {}}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the browser.\n * @external Readable\n */\n\n/**\n * Creates a new Aggregation Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class AggregationCursor\n * @extends external:Readable\n * @fires AggregationCursor#data\n * @fires AggregationCursor#end\n * @fires AggregationCursor#close\n * @fires AggregationCursor#readable\n * @return {AggregationCursor} an AggregationCursor instance.\n */\nclass AggregationCursor extends Cursor {\n  constructor(topology, operation, options) {\n    super(topology, operation, options);\n  }\n\n  /**\n   * Set the batch size for the cursor.\n   * @method\n   * @param {number} value The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n   * @throws {MongoError}\n   * @return {AggregationCursor}\n   */\n  batchSize(value) {\n    if (this.s.state === CursorState.CLOSED || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (typeof value !== 'number') {\n      throw MongoError.create({ message: 'batchSize requires an integer', driver: true });\n    }\n\n    this.operation.options.batchSize = value;\n    this.setCursorBatchSize(value);\n    return this;\n  }\n\n  /**\n   * Add a geoNear stage to the aggregation pipeline\n   * @method\n   * @param {object} document The geoNear stage document.\n   * @return {AggregationCursor}\n   */\n  geoNear(document) {\n    this.operation.addToPipeline({ $geoNear: document });\n    return this;\n  }\n\n  /**\n   * Add a group stage to the aggregation pipeline\n   * @method\n   * @param {object} document The group stage document.\n   * @return {AggregationCursor}\n   */\n  group(document) {\n    this.operation.addToPipeline({ $group: document });\n    return this;\n  }\n\n  /**\n   * Add a limit stage to the aggregation pipeline\n   * @method\n   * @param {number} value The state limit value.\n   * @return {AggregationCursor}\n   */\n  limit(value) {\n    this.operation.addToPipeline({ $limit: value });\n    return this;\n  }\n\n  /**\n   * Add a match stage to the aggregation pipeline\n   * @method\n   * @param {object} document The match stage document.\n   * @return {AggregationCursor}\n   */\n  match(document) {\n    this.operation.addToPipeline({ $match: document });\n    return this;\n  }\n\n  /**\n   * Add a maxTimeMS stage to the aggregation pipeline\n   * @method\n   * @param {number} value The state maxTimeMS value.\n   * @return {AggregationCursor}\n   */\n  maxTimeMS(value) {\n    this.operation.options.maxTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Add a out stage to the aggregation pipeline\n   * @method\n   * @param {number} destination The destination name.\n   * @return {AggregationCursor}\n   */\n  out(destination) {\n    this.operation.addToPipeline({ $out: destination });\n    return this;\n  }\n\n  /**\n   * Add a project stage to the aggregation pipeline\n   * @method\n   * @param {object} document The project stage document.\n   * @return {AggregationCursor}\n   */\n  project(document) {\n    this.operation.addToPipeline({ $project: document });\n    return this;\n  }\n\n  /**\n   * Add a lookup stage to the aggregation pipeline\n   * @method\n   * @param {object} document The lookup stage document.\n   * @return {AggregationCursor}\n   */\n  lookup(document) {\n    this.operation.addToPipeline({ $lookup: document });\n    return this;\n  }\n\n  /**\n   * Add a redact stage to the aggregation pipeline\n   * @method\n   * @param {object} document The redact stage document.\n   * @return {AggregationCursor}\n   */\n  redact(document) {\n    this.operation.addToPipeline({ $redact: document });\n    return this;\n  }\n\n  /**\n   * Add a skip stage to the aggregation pipeline\n   * @method\n   * @param {number} value The state skip value.\n   * @return {AggregationCursor}\n   */\n  skip(value) {\n    this.operation.addToPipeline({ $skip: value });\n    return this;\n  }\n\n  /**\n   * Add a sort stage to the aggregation pipeline\n   * @method\n   * @param {object} document The sort stage document.\n   * @return {AggregationCursor}\n   */\n  sort(document) {\n    this.operation.addToPipeline({ $sort: document });\n    return this;\n  }\n\n  /**\n   * Add a unwind stage to the aggregation pipeline\n   * @method\n   * @param {(string|object)} field The unwind field name or stage document.\n   * @return {AggregationCursor}\n   */\n  unwind(field) {\n    this.operation.addToPipeline({ $unwind: field });\n    return this;\n  }\n\n  /**\n   * Return the cursor logger\n   * @method\n   * @return {Logger} return the cursor logger\n   * @ignore\n   */\n  getLogger() {\n    return this.logger;\n  }\n}\n\n// aliases\nAggregationCursor.prototype.get = AggregationCursor.prototype.toArray;\n\n/**\n * AggregationCursor stream data event, fired for each document in the cursor.\n *\n * @event AggregationCursor#data\n * @type {object}\n */\n\n/**\n * AggregationCursor stream end event\n *\n * @event AggregationCursor#end\n * @type {null}\n */\n\n/**\n * AggregationCursor stream close event\n *\n * @event AggregationCursor#close\n * @type {null}\n */\n\n/**\n * AggregationCursor stream readable event\n *\n * @event AggregationCursor#readable\n * @type {null}\n */\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @function AggregationCursor.prototype.next\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Check if there is any document still available in the cursor\n * @function AggregationCursor.prototype.hasNext\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback AggregationCursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previously accessed. In that case,\n * cursor.rewind() can be used to reset the cursor.\n * @method AggregationCursor.prototype.toArray\n * @param {AggregationCursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback AggregationCursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previously accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method AggregationCursor.prototype.each\n * @deprecated\n * @param {AggregationCursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\n\n/**\n * Close the cursor, sending a AggregationCursor command and emitting close.\n * @method AggregationCursor.prototype.close\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Is the cursor closed\n * @method AggregationCursor.prototype.isClosed\n * @return {boolean}\n */\n\n/**\n * Execute the explain for the cursor\n *\n * For backwards compatibility, a verbosity of true is interpreted as \"allPlansExecution\"\n * and false as \"queryPlanner\". Prior to server version 3.6, aggregate()\n * ignores the verbosity parameter and executes in \"queryPlanner\".\n *\n * @method AggregationCursor.prototype.explain\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [verbosity=true] - An optional mode in which to run the explain.\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Clone the cursor\n * @function AggregationCursor.prototype.clone\n * @return {AggregationCursor}\n */\n\n/**\n * Resets the cursor\n * @function AggregationCursor.prototype.rewind\n * @return {AggregationCursor}\n */\n\n/**\n * The callback format for the forEach iterator method\n * @callback AggregationCursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback AggregationCursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/**\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method AggregationCursor.prototype.forEach\n * @param {AggregationCursor~iteratorCallback} iterator The iteration callback.\n * @param {AggregationCursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\n\nmodule.exports = AggregationCursor;\n","'use strict';\nconst EventEmitter = require('events').EventEmitter;\n\nclass Instrumentation extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  instrument(MongoClient, callback) {\n    // store a reference to the original functions\n    this.$MongoClient = MongoClient;\n    const $prototypeConnect = (this.$prototypeConnect = MongoClient.prototype.connect);\n\n    const instrumentation = this;\n    MongoClient.prototype.connect = function(callback) {\n      this.s.options.monitorCommands = true;\n      this.on('commandStarted', event => instrumentation.emit('started', event));\n      this.on('commandSucceeded', event => instrumentation.emit('succeeded', event));\n      this.on('commandFailed', event => instrumentation.emit('failed', event));\n      return $prototypeConnect.call(this, callback);\n    };\n\n    if (typeof callback === 'function') callback(null, this);\n  }\n\n  uninstrument() {\n    this.$MongoClient.prototype.connect = this.$prototypeConnect;\n  }\n}\n\nmodule.exports = Instrumentation;\n","'use strict';\n\n// async function* asyncIterator() {\n//   while (true) {\n//     const value = await this.next();\n//     if (!value) {\n//       await this.close();\n//       return;\n//     }\n\n//     yield value;\n//   }\n// }\n\n// TODO: change this to the async generator function above\nfunction asyncIterator() {\n  const cursor = this;\n\n  return {\n    next: function() {\n      return Promise.resolve()\n        .then(() => cursor.next())\n        .then(value => {\n          if (!value) {\n            return cursor.close().then(() => ({ value, done: true }));\n          }\n          return { value, done: false };\n        });\n    }\n  };\n}\n\nexports.asyncIterator = asyncIterator;\n","'use strict';\n\nconst Long = require('../core').BSON.Long;\nconst MongoError = require('../core').MongoError;\nconst ObjectID = require('../core').BSON.ObjectID;\nconst BSON = require('../core').BSON;\nconst MongoWriteConcernError = require('../core').MongoWriteConcernError;\nconst toError = require('../utils').toError;\nconst handleCallback = require('../utils').handleCallback;\nconst applyRetryableWrites = require('../utils').applyRetryableWrites;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst executeLegacyOperation = require('../utils').executeLegacyOperation;\nconst isPromiseLike = require('../utils').isPromiseLike;\nconst hasAtomicOperators = require('../utils').hasAtomicOperators;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\n// Error codes\nconst WRITE_CONCERN_ERROR = 64;\n\n// Insert types\nconst INSERT = 1;\nconst UPDATE = 2;\nconst REMOVE = 3;\n\nconst bson = new BSON([\n  BSON.Binary,\n  BSON.Code,\n  BSON.DBRef,\n  BSON.Decimal128,\n  BSON.Double,\n  BSON.Int32,\n  BSON.Long,\n  BSON.Map,\n  BSON.MaxKey,\n  BSON.MinKey,\n  BSON.ObjectId,\n  BSON.BSONRegExp,\n  BSON.Symbol,\n  BSON.Timestamp\n]);\n\n/**\n * Keeps the state of a unordered batch so we can rewrite the results\n * correctly after command execution\n * @ignore\n */\nclass Batch {\n  constructor(batchType, originalZeroIndex) {\n    this.originalZeroIndex = originalZeroIndex;\n    this.currentIndex = 0;\n    this.originalIndexes = [];\n    this.batchType = batchType;\n    this.operations = [];\n    this.size = 0;\n    this.sizeBytes = 0;\n  }\n}\n\n/**\n * @classdesc\n * The result of a bulk write.\n */\nclass BulkWriteResult {\n  /**\n   * Create a new BulkWriteResult instance\n   *\n   * **NOTE:** Internal Type, do not instantiate directly\n   */\n  constructor(bulkResult) {\n    this.result = bulkResult;\n  }\n\n  /**\n   * Evaluates to true if the bulk operation correctly executes\n   * @type {boolean}\n   */\n  get ok() {\n    return this.result.ok;\n  }\n\n  /**\n   * The number of inserted documents\n   * @type {number}\n   */\n  get nInserted() {\n    return this.result.nInserted;\n  }\n\n  /**\n   * Number of upserted documents\n   * @type {number}\n   */\n  get nUpserted() {\n    return this.result.nUpserted;\n  }\n\n  /**\n   * Number of matched documents\n   * @type {number}\n   */\n  get nMatched() {\n    return this.result.nMatched;\n  }\n\n  /**\n   * Number of documents updated physically on disk\n   * @type {number}\n   */\n  get nModified() {\n    return this.result.nModified;\n  }\n\n  /**\n   * Number of removed documents\n   * @type {number}\n   */\n  get nRemoved() {\n    return this.result.nRemoved;\n  }\n\n  /**\n   * Returns an array of all inserted ids\n   *\n   * @return {object[]}\n   */\n  getInsertedIds() {\n    return this.result.insertedIds;\n  }\n\n  /**\n   * Returns an array of all upserted ids\n   *\n   * @return {object[]}\n   */\n  getUpsertedIds() {\n    return this.result.upserted;\n  }\n\n  /**\n   * Returns the upserted id at the given index\n   *\n   * @param {number} index the number of the upserted id to return, returns undefined if no result for passed in index\n   * @return {object}\n   */\n  getUpsertedIdAt(index) {\n    return this.result.upserted[index];\n  }\n\n  /**\n   * Returns raw internal result\n   *\n   * @return {object}\n   */\n  getRawResponse() {\n    return this.result;\n  }\n\n  /**\n   * Returns true if the bulk operation contains a write error\n   *\n   * @return {boolean}\n   */\n  hasWriteErrors() {\n    return this.result.writeErrors.length > 0;\n  }\n\n  /**\n   * Returns the number of write errors off the bulk operation\n   *\n   * @return {number}\n   */\n  getWriteErrorCount() {\n    return this.result.writeErrors.length;\n  }\n\n  /**\n   * Returns a specific write error object\n   *\n   * @param {number} index of the write error to return, returns null if there is no result for passed in index\n   * @return {WriteError}\n   */\n  getWriteErrorAt(index) {\n    if (index < this.result.writeErrors.length) {\n      return this.result.writeErrors[index];\n    }\n    return null;\n  }\n\n  /**\n   * Retrieve all write errors\n   *\n   * @return {WriteError[]}\n   */\n  getWriteErrors() {\n    return this.result.writeErrors;\n  }\n\n  /**\n   * Retrieve lastOp if available\n   *\n   * @return {object}\n   */\n  getLastOp() {\n    return this.result.lastOp;\n  }\n\n  /**\n   * Retrieve the write concern error if any\n   *\n   * @return {WriteConcernError}\n   */\n  getWriteConcernError() {\n    if (this.result.writeConcernErrors.length === 0) {\n      return null;\n    } else if (this.result.writeConcernErrors.length === 1) {\n      // Return the error\n      return this.result.writeConcernErrors[0];\n    } else {\n      // Combine the errors\n      let errmsg = '';\n      for (let i = 0; i < this.result.writeConcernErrors.length; i++) {\n        const err = this.result.writeConcernErrors[i];\n        errmsg = errmsg + err.errmsg;\n\n        // TODO: Something better\n        if (i === 0) errmsg = errmsg + ' and ';\n      }\n\n      return new WriteConcernError({ errmsg: errmsg, code: WRITE_CONCERN_ERROR });\n    }\n  }\n\n  /**\n   * @return {object}\n   */\n  toJSON() {\n    return this.result;\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return `BulkWriteResult(${this.toJSON(this.result)})`;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isOk() {\n    return this.result.ok === 1;\n  }\n}\n\n/**\n * @classdesc An error representing a failure by the server to apply the requested write concern to the bulk operation.\n */\nclass WriteConcernError {\n  /**\n   * Create a new WriteConcernError instance\n   *\n   * **NOTE:** Internal Type, do not instantiate directly\n   */\n  constructor(err) {\n    this.err = err;\n  }\n\n  /**\n   * Write concern error code.\n   * @type {number}\n   */\n  get code() {\n    return this.err.code;\n  }\n\n  /**\n   * Write concern error message.\n   * @type {string}\n   */\n  get errmsg() {\n    return this.err.errmsg;\n  }\n\n  /**\n   * @return {object}\n   */\n  toJSON() {\n    return { code: this.err.code, errmsg: this.err.errmsg };\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return `WriteConcernError(${this.err.errmsg})`;\n  }\n}\n\n/**\n * @classdesc An error that occurred during a BulkWrite on the server.\n */\nclass WriteError {\n  /**\n   * Create a new WriteError instance\n   *\n   * **NOTE:** Internal Type, do not instantiate directly\n   */\n  constructor(err) {\n    this.err = err;\n  }\n\n  /**\n   * WriteError code.\n   * @type {number}\n   */\n  get code() {\n    return this.err.code;\n  }\n\n  /**\n   * WriteError original bulk operation index.\n   * @type {number}\n   */\n  get index() {\n    return this.err.index;\n  }\n\n  /**\n   * WriteError message.\n   * @type {string}\n   */\n  get errmsg() {\n    return this.err.errmsg;\n  }\n\n  /**\n   * Returns the underlying operation that caused the error\n   * @return {object}\n   */\n  getOperation() {\n    return this.err.op;\n  }\n\n  /**\n   * @return {object}\n   */\n  toJSON() {\n    return { code: this.err.code, index: this.err.index, errmsg: this.err.errmsg, op: this.err.op };\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return `WriteError(${JSON.stringify(this.toJSON())})`;\n  }\n}\n\n/**\n * Merges results into shared data structure\n * @ignore\n */\nfunction mergeBatchResults(batch, bulkResult, err, result) {\n  // If we have an error set the result to be the err object\n  if (err) {\n    result = err;\n  } else if (result && result.result) {\n    result = result.result;\n  } else if (result == null) {\n    return;\n  }\n\n  // Do we have a top level error stop processing and return\n  if (result.ok === 0 && bulkResult.ok === 1) {\n    bulkResult.ok = 0;\n\n    const writeError = {\n      index: 0,\n      code: result.code || 0,\n      errmsg: result.message,\n      op: batch.operations[0]\n    };\n\n    bulkResult.writeErrors.push(new WriteError(writeError));\n    return;\n  } else if (result.ok === 0 && bulkResult.ok === 0) {\n    return;\n  }\n\n  // Deal with opTime if available\n  if (result.opTime || result.lastOp) {\n    const opTime = result.lastOp || result.opTime;\n    let lastOpTS = null;\n    let lastOpT = null;\n\n    // We have a time stamp\n    if (opTime && opTime._bsontype === 'Timestamp') {\n      if (bulkResult.lastOp == null) {\n        bulkResult.lastOp = opTime;\n      } else if (opTime.greaterThan(bulkResult.lastOp)) {\n        bulkResult.lastOp = opTime;\n      }\n    } else {\n      // Existing TS\n      if (bulkResult.lastOp) {\n        lastOpTS =\n          typeof bulkResult.lastOp.ts === 'number'\n            ? Long.fromNumber(bulkResult.lastOp.ts)\n            : bulkResult.lastOp.ts;\n        lastOpT =\n          typeof bulkResult.lastOp.t === 'number'\n            ? Long.fromNumber(bulkResult.lastOp.t)\n            : bulkResult.lastOp.t;\n      }\n\n      // Current OpTime TS\n      const opTimeTS = typeof opTime.ts === 'number' ? Long.fromNumber(opTime.ts) : opTime.ts;\n      const opTimeT = typeof opTime.t === 'number' ? Long.fromNumber(opTime.t) : opTime.t;\n\n      // Compare the opTime's\n      if (bulkResult.lastOp == null) {\n        bulkResult.lastOp = opTime;\n      } else if (opTimeTS.greaterThan(lastOpTS)) {\n        bulkResult.lastOp = opTime;\n      } else if (opTimeTS.equals(lastOpTS)) {\n        if (opTimeT.greaterThan(lastOpT)) {\n          bulkResult.lastOp = opTime;\n        }\n      }\n    }\n  }\n\n  // If we have an insert Batch type\n  if (batch.batchType === INSERT && result.n) {\n    bulkResult.nInserted = bulkResult.nInserted + result.n;\n  }\n\n  // If we have an insert Batch type\n  if (batch.batchType === REMOVE && result.n) {\n    bulkResult.nRemoved = bulkResult.nRemoved + result.n;\n  }\n\n  let nUpserted = 0;\n\n  // We have an array of upserted values, we need to rewrite the indexes\n  if (Array.isArray(result.upserted)) {\n    nUpserted = result.upserted.length;\n\n    for (let i = 0; i < result.upserted.length; i++) {\n      bulkResult.upserted.push({\n        index: result.upserted[i].index + batch.originalZeroIndex,\n        _id: result.upserted[i]._id\n      });\n    }\n  } else if (result.upserted) {\n    nUpserted = 1;\n\n    bulkResult.upserted.push({\n      index: batch.originalZeroIndex,\n      _id: result.upserted\n    });\n  }\n\n  // If we have an update Batch type\n  if (batch.batchType === UPDATE && result.n) {\n    const nModified = result.nModified;\n    bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;\n    bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);\n\n    if (typeof nModified === 'number') {\n      bulkResult.nModified = bulkResult.nModified + nModified;\n    } else {\n      bulkResult.nModified = null;\n    }\n  }\n\n  if (Array.isArray(result.writeErrors)) {\n    for (let i = 0; i < result.writeErrors.length; i++) {\n      const writeError = {\n        index: batch.originalIndexes[result.writeErrors[i].index],\n        code: result.writeErrors[i].code,\n        errmsg: result.writeErrors[i].errmsg,\n        op: batch.operations[result.writeErrors[i].index]\n      };\n\n      bulkResult.writeErrors.push(new WriteError(writeError));\n    }\n  }\n\n  if (result.writeConcernError) {\n    bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));\n  }\n}\n\nfunction executeCommands(bulkOperation, options, callback) {\n  if (bulkOperation.s.batches.length === 0) {\n    return handleCallback(callback, null, new BulkWriteResult(bulkOperation.s.bulkResult));\n  }\n\n  const batch = bulkOperation.s.batches.shift();\n\n  function resultHandler(err, result) {\n    // Error is a driver related error not a bulk op error, terminate\n    if (((err && err.driver) || (err && err.message)) && !(err instanceof MongoWriteConcernError)) {\n      return handleCallback(callback, err);\n    }\n\n    // If we have and error\n    if (err) err.ok = 0;\n    if (err instanceof MongoWriteConcernError) {\n      return handleMongoWriteConcernError(batch, bulkOperation.s.bulkResult, err, callback);\n    }\n\n    // Merge the results together\n    const writeResult = new BulkWriteResult(bulkOperation.s.bulkResult);\n    const mergeResult = mergeBatchResults(batch, bulkOperation.s.bulkResult, err, result);\n    if (mergeResult != null) {\n      return handleCallback(callback, null, writeResult);\n    }\n\n    if (bulkOperation.handleWriteError(callback, writeResult)) return;\n\n    // Execute the next command in line\n    executeCommands(bulkOperation, options, callback);\n  }\n\n  bulkOperation.finalOptionsHandler({ options, batch, resultHandler }, callback);\n}\n\n/**\n * handles write concern error\n *\n * @ignore\n * @param {object} batch\n * @param {object} bulkResult\n * @param {boolean} ordered\n * @param {WriteConcernError} err\n * @param {function} callback\n */\nfunction handleMongoWriteConcernError(batch, bulkResult, err, callback) {\n  mergeBatchResults(batch, bulkResult, null, err.result);\n\n  const wrappedWriteConcernError = new WriteConcernError({\n    errmsg: err.result.writeConcernError.errmsg,\n    code: err.result.writeConcernError.result\n  });\n  return handleCallback(\n    callback,\n    new BulkWriteError(toError(wrappedWriteConcernError), new BulkWriteResult(bulkResult)),\n    null\n  );\n}\n\n/**\n * @classdesc An error indicating an unsuccessful Bulk Write\n */\nclass BulkWriteError extends MongoError {\n  /**\n   * Creates a new BulkWriteError\n   *\n   * @param {Error|string|object} message The error message\n   * @param {BulkWriteResult} result The result of the bulk write operation\n   * @extends {MongoError}\n   */\n  constructor(error, result) {\n    const message = error.err || error.errmsg || error.errMessage || error;\n    super(message);\n\n    Object.assign(this, error);\n\n    this.name = 'BulkWriteError';\n    this.result = result;\n  }\n}\n\n/**\n * @classdesc A builder object that is returned from {@link BulkOperationBase#find}.\n * Is used to build a write operation that involves a query filter.\n */\nclass FindOperators {\n  /**\n   * Creates a new FindOperators object.\n   *\n   * **NOTE:** Internal Type, do not instantiate directly\n   * @param {OrderedBulkOperation|UnorderedBulkOperation} bulkOperation\n   */\n  constructor(bulkOperation) {\n    this.s = bulkOperation.s;\n  }\n\n  /**\n   * Add a multiple update operation to the bulk operation\n   *\n   * @method\n   * @param {object} updateDocument An update field for an update operation. See {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-u u documentation}\n   * @param {object} [options.hint] An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.\n   * @throws {MongoError} If operation cannot be added to bulk write\n   * @return {OrderedBulkOperation|UnorderedBulkOperation} A reference to the parent BulkOperation\n   */\n  update(updateDocument) {\n    // Perform upsert\n    const upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      u: updateDocument,\n      multi: true,\n      upsert: upsert\n    };\n\n    if (updateDocument.hint) {\n      document.hint = updateDocument.hint;\n    }\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, UPDATE, document);\n  }\n\n  /**\n   * Add a single update operation to the bulk operation\n   *\n   * @method\n   * @param {object} updateDocument An update field for an update operation. See {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-u u documentation}\n   * @param {object} [options.hint] An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.\n   * @throws {MongoError} If operation cannot be added to bulk write\n   * @return {OrderedBulkOperation|UnorderedBulkOperation} A reference to the parent BulkOperation\n   */\n  updateOne(updateDocument) {\n    // Perform upsert\n    const upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      u: updateDocument,\n      multi: false,\n      upsert: upsert\n    };\n\n    if (updateDocument.hint) {\n      document.hint = updateDocument.hint;\n    }\n\n    if (!hasAtomicOperators(updateDocument)) {\n      throw new TypeError('Update document requires atomic operators');\n    }\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, UPDATE, document);\n  }\n\n  /**\n   * Add a replace one operation to the bulk operation\n   *\n   * @method\n   * @param {object} replacement the new document to replace the existing one with\n   * @throws {MongoError} If operation cannot be added to bulk write\n   * @return {OrderedBulkOperation|UnorderedBulkOperation} A reference to the parent BulkOperation\n   */\n  replaceOne(replacement) {\n    // Perform upsert\n    const upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      u: replacement,\n      multi: false,\n      upsert: upsert\n    };\n\n    if (replacement.hint) {\n      document.hint = replacement.hint;\n    }\n\n    if (hasAtomicOperators(replacement)) {\n      throw new TypeError('Replacement document must not use atomic operators');\n    }\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, UPDATE, document);\n  }\n\n  /**\n   * Upsert modifier for update bulk operation, noting that this operation is an upsert.\n   *\n   * @method\n   * @throws {MongoError} If operation cannot be added to bulk write\n   * @return {FindOperators} reference to self\n   */\n  upsert() {\n    this.s.currentOp.upsert = true;\n    return this;\n  }\n\n  /**\n   * Add a delete one operation to the bulk operation\n   *\n   * @method\n   * @throws {MongoError} If operation cannot be added to bulk write\n   * @return {OrderedBulkOperation|UnorderedBulkOperation} A reference to the parent BulkOperation\n   */\n  deleteOne() {\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      limit: 1\n    };\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, REMOVE, document);\n  }\n\n  /**\n   * Add a delete many operation to the bulk operation\n   *\n   * @method\n   * @throws {MongoError} If operation cannot be added to bulk write\n   * @return {OrderedBulkOperation|UnorderedBulkOperation} A reference to the parent BulkOperation\n   */\n  delete() {\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      limit: 0\n    };\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, REMOVE, document);\n  }\n\n  /**\n   * backwards compatability for deleteOne\n   */\n  removeOne() {\n    return this.deleteOne();\n  }\n\n  /**\n   * backwards compatability for delete\n   */\n  remove() {\n    return this.delete();\n  }\n}\n\n/**\n * @classdesc Parent class to OrderedBulkOperation and UnorderedBulkOperation\n *\n * **NOTE:** Internal Type, do not instantiate directly\n */\nclass BulkOperationBase {\n  /**\n   * Create a new OrderedBulkOperation or UnorderedBulkOperation instance\n   * @property {number} length Get the number of operations in the bulk.\n   */\n  constructor(topology, collection, options, isOrdered) {\n    // determine whether bulkOperation is ordered or unordered\n    this.isOrdered = isOrdered;\n\n    options = options == null ? {} : options;\n    // TODO Bring from driver information in isMaster\n    // Get the namespace for the write operations\n    const namespace = collection.s.namespace;\n    // Used to mark operation as executed\n    const executed = false;\n\n    // Current item\n    const currentOp = null;\n\n    // Handle to the bson serializer, used to calculate running sizes\n    const bson = topology.bson;\n    // Set max byte size\n    const isMaster = topology.lastIsMaster();\n\n    // If we have autoEncryption on, batch-splitting must be done on 2mb chunks, but single documents\n    // over 2mb are still allowed\n    const usingAutoEncryption = !!(topology.s.options && topology.s.options.autoEncrypter);\n    const maxBsonObjectSize =\n      isMaster && isMaster.maxBsonObjectSize ? isMaster.maxBsonObjectSize : 1024 * 1024 * 16;\n    const maxBatchSizeBytes = usingAutoEncryption ? 1024 * 1024 * 2 : maxBsonObjectSize;\n    const maxWriteBatchSize =\n      isMaster && isMaster.maxWriteBatchSize ? isMaster.maxWriteBatchSize : 1000;\n\n    // Calculates the largest possible size of an Array key, represented as a BSON string\n    // element. This calculation:\n    //     1 byte for BSON type\n    //     # of bytes = length of (string representation of (maxWriteBatchSize - 1))\n    //   + 1 bytes for null terminator\n    const maxKeySize = (maxWriteBatchSize - 1).toString(10).length + 2;\n\n    // Final options for retryable writes and write concern\n    let finalOptions = Object.assign({}, options);\n    finalOptions = applyRetryableWrites(finalOptions, collection.s.db);\n    finalOptions = applyWriteConcern(finalOptions, { collection: collection }, options);\n    const writeConcern = finalOptions.writeConcern;\n\n    // Get the promiseLibrary\n    const promiseLibrary = options.promiseLibrary || Promise;\n\n    // Final results\n    const bulkResult = {\n      ok: 1,\n      writeErrors: [],\n      writeConcernErrors: [],\n      insertedIds: [],\n      nInserted: 0,\n      nUpserted: 0,\n      nMatched: 0,\n      nModified: 0,\n      nRemoved: 0,\n      upserted: []\n    };\n\n    // Internal state\n    this.s = {\n      // Final result\n      bulkResult: bulkResult,\n      // Current batch state\n      currentBatch: null,\n      currentIndex: 0,\n      // ordered specific\n      currentBatchSize: 0,\n      currentBatchSizeBytes: 0,\n      // unordered specific\n      currentInsertBatch: null,\n      currentUpdateBatch: null,\n      currentRemoveBatch: null,\n      batches: [],\n      // Write concern\n      writeConcern: writeConcern,\n      // Max batch size options\n      maxBsonObjectSize,\n      maxBatchSizeBytes,\n      maxWriteBatchSize,\n      maxKeySize,\n      // Namespace\n      namespace: namespace,\n      // BSON\n      bson: bson,\n      // Topology\n      topology: topology,\n      // Options\n      options: finalOptions,\n      // Current operation\n      currentOp: currentOp,\n      // Executed\n      executed: executed,\n      // Collection\n      collection: collection,\n      // Promise Library\n      promiseLibrary: promiseLibrary,\n      // Fundamental error\n      err: null,\n      // check keys\n      checkKeys: typeof options.checkKeys === 'boolean' ? options.checkKeys : true\n    };\n\n    // bypass Validation\n    if (options.bypassDocumentValidation === true) {\n      this.s.bypassDocumentValidation = true;\n    }\n  }\n\n  /**\n   * Add a single insert document to the bulk operation\n   *\n   * @param {object} document the document to insert\n   * @throws {MongoError}\n   * @return {BulkOperationBase} A reference to self\n   *\n   * @example\n   * const bulkOp = collection.initializeOrderedBulkOp();\n   * // Adds three inserts to the bulkOp.\n   * bulkOp\n   *   .insert({ a: 1 })\n   *   .insert({ b: 2 })\n   *   .insert({ c: 3 });\n   * await bulkOp.execute();\n   */\n  insert(document) {\n    if (this.s.collection.s.db.options.forceServerObjectId !== true && document._id == null)\n      document._id = new ObjectID();\n    return this.s.options.addToOperationsList(this, INSERT, document);\n  }\n\n  /**\n   * Builds a find operation for an update/updateOne/delete/deleteOne/replaceOne.\n   * Returns a builder object used to complete the definition of the operation.\n   *\n   * @method\n   * @param {object} selector The selector for the bulk operation. See {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-q q documentation}\n   * @throws {MongoError} if a selector is not specified\n   * @return {FindOperators} A helper object with which the write operation can be defined.\n   *\n   * @example\n   * const bulkOp = collection.initializeOrderedBulkOp();\n   *\n   * // Add an updateOne to the bulkOp\n   * bulkOp.find({ a: 1 }).updateOne({ $set: { b: 2 } });\n   *\n   * // Add an updateMany to the bulkOp\n   * bulkOp.find({ c: 3 }).update({ $set: { d: 4 } });\n   *\n   * // Add an upsert\n   * bulkOp.find({ e: 5 }).upsert().updateOne({ $set: { f: 6 } });\n   *\n   * // Add a deletion\n   * bulkOp.find({ g: 7 }).deleteOne();\n   *\n   * // Add a multi deletion\n   * bulkOp.find({ h: 8 }).delete();\n   *\n   * // Add a replaceOne\n   * bulkOp.find({ i: 9 }).replaceOne({ j: 10 });\n   *\n   * // Update using a pipeline (requires Mongodb 4.2 or higher)\n   * bulk.find({ k: 11, y: { $exists: true }, z: { $exists: true } }).updateOne([\n   *   { $set: { total: { $sum: [ '$y', '$z' ] } } }\n   * ]);\n   *\n   * // All of the ops will now be executed\n   * await bulkOp.execute();\n   */\n  find(selector) {\n    if (!selector) {\n      throw toError('Bulk find operation must specify a selector');\n    }\n\n    // Save a current selector\n    this.s.currentOp = {\n      selector: selector\n    };\n\n    return new FindOperators(this);\n  }\n\n  /**\n   * Specifies a raw operation to perform in the bulk write.\n   *\n   * @method\n   * @param {object} op The raw operation to perform.\n   * @param {object} [options.hint] An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.\n   * @return {BulkOperationBase} A reference to self\n   */\n  raw(op) {\n    const key = Object.keys(op)[0];\n\n    // Set up the force server object id\n    const forceServerObjectId =\n      typeof this.s.options.forceServerObjectId === 'boolean'\n        ? this.s.options.forceServerObjectId\n        : this.s.collection.s.db.options.forceServerObjectId;\n\n    // Update operations\n    if (\n      (op.updateOne && op.updateOne.q) ||\n      (op.updateMany && op.updateMany.q) ||\n      (op.replaceOne && op.replaceOne.q)\n    ) {\n      op[key].multi = op.updateOne || op.replaceOne ? false : true;\n      return this.s.options.addToOperationsList(this, UPDATE, op[key]);\n    }\n\n    // Crud spec update format\n    if (op.updateOne || op.updateMany || op.replaceOne) {\n      if (op.replaceOne && hasAtomicOperators(op[key].replacement)) {\n        throw new TypeError('Replacement document must not use atomic operators');\n      } else if ((op.updateOne || op.updateMany) && !hasAtomicOperators(op[key].update)) {\n        throw new TypeError('Update document requires atomic operators');\n      }\n\n      const multi = op.updateOne || op.replaceOne ? false : true;\n      const operation = {\n        q: op[key].filter,\n        u: op[key].update || op[key].replacement,\n        multi: multi\n      };\n\n      if (op[key].hint) {\n        operation.hint = op[key].hint;\n      }\n\n      if (this.isOrdered) {\n        operation.upsert = op[key].upsert ? true : false;\n        if (op.collation) operation.collation = op.collation;\n      } else {\n        if (op[key].upsert) operation.upsert = true;\n      }\n      if (op[key].arrayFilters) {\n        // TODO: this check should be done at command construction against a connection, not a topology\n        if (maxWireVersion(this.s.topology) < 6) {\n          throw new TypeError('arrayFilters are only supported on MongoDB 3.6+');\n        }\n\n        operation.arrayFilters = op[key].arrayFilters;\n      }\n\n      return this.s.options.addToOperationsList(this, UPDATE, operation);\n    }\n\n    // Remove operations\n    if (\n      op.removeOne ||\n      op.removeMany ||\n      (op.deleteOne && op.deleteOne.q) ||\n      (op.deleteMany && op.deleteMany.q)\n    ) {\n      op[key].limit = op.removeOne ? 1 : 0;\n      return this.s.options.addToOperationsList(this, REMOVE, op[key]);\n    }\n\n    // Crud spec delete operations, less efficient\n    if (op.deleteOne || op.deleteMany) {\n      const limit = op.deleteOne ? 1 : 0;\n      const operation = { q: op[key].filter, limit: limit };\n      if (op[key].hint) {\n        operation.hint = op[key].hint;\n      }\n      if (this.isOrdered) {\n        if (op.collation) operation.collation = op.collation;\n      }\n      return this.s.options.addToOperationsList(this, REMOVE, operation);\n    }\n\n    // Insert operations\n    if (op.insertOne && op.insertOne.document == null) {\n      if (forceServerObjectId !== true && op.insertOne._id == null)\n        op.insertOne._id = new ObjectID();\n      return this.s.options.addToOperationsList(this, INSERT, op.insertOne);\n    } else if (op.insertOne && op.insertOne.document) {\n      if (forceServerObjectId !== true && op.insertOne.document._id == null)\n        op.insertOne.document._id = new ObjectID();\n      return this.s.options.addToOperationsList(this, INSERT, op.insertOne.document);\n    }\n\n    if (op.insertMany) {\n      for (let i = 0; i < op.insertMany.length; i++) {\n        if (forceServerObjectId !== true && op.insertMany[i]._id == null)\n          op.insertMany[i]._id = new ObjectID();\n        this.s.options.addToOperationsList(this, INSERT, op.insertMany[i]);\n      }\n\n      return;\n    }\n\n    // No valid type of operation\n    throw toError(\n      'bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany'\n    );\n  }\n\n  /**\n   * helper function to assist with promiseOrCallback behavior\n   * @ignore\n   * @param {*} err\n   * @param {*} callback\n   */\n  _handleEarlyError(err, callback) {\n    if (typeof callback === 'function') {\n      callback(err, null);\n      return;\n    }\n\n    return this.s.promiseLibrary.reject(err);\n  }\n\n  /**\n   * An internal helper method. Do not invoke directly. Will be going away in the future\n   *\n   * @ignore\n   * @method\n   * @param {class} bulk either OrderedBulkOperation or UnorderdBulkOperation\n   * @param {object} writeConcern\n   * @param {object} options\n   * @param {function} callback\n   */\n  bulkExecute(_writeConcern, options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    if (typeof _writeConcern === 'function') {\n      callback = _writeConcern;\n    } else if (_writeConcern && typeof _writeConcern === 'object') {\n      this.s.writeConcern = _writeConcern;\n    }\n\n    if (this.s.executed) {\n      const executedError = toError('batch cannot be re-executed');\n      return this._handleEarlyError(executedError, callback);\n    }\n\n    // If we have current batch\n    if (this.isOrdered) {\n      if (this.s.currentBatch) this.s.batches.push(this.s.currentBatch);\n    } else {\n      if (this.s.currentInsertBatch) this.s.batches.push(this.s.currentInsertBatch);\n      if (this.s.currentUpdateBatch) this.s.batches.push(this.s.currentUpdateBatch);\n      if (this.s.currentRemoveBatch) this.s.batches.push(this.s.currentRemoveBatch);\n    }\n    // If we have no operations in the bulk raise an error\n    if (this.s.batches.length === 0) {\n      const emptyBatchError = toError('Invalid Operation, no operations specified');\n      return this._handleEarlyError(emptyBatchError, callback);\n    }\n    return { options, callback };\n  }\n\n  /**\n   * The callback format for results\n   * @callback BulkOperationBase~resultCallback\n   * @param {MongoError} error An error instance representing the error during the execution.\n   * @param {BulkWriteResult} result The bulk write result.\n   */\n\n  /**\n   * Execute the bulk operation\n   *\n   * @method\n   * @param {WriteConcern} [_writeConcern] Optional write concern. Can also be specified through options.\n   * @param {object} [options] Optional settings.\n   * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n   * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n   * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n   * @param {boolean} [options.fsync=false] **Deprecated** Specify a file sync write concern. Use writeConcern instead.\n   * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n   * @param {BulkOperationBase~resultCallback} [callback] A callback that will be invoked when bulkWrite finishes/errors\n   * @throws {MongoError} Throws error if the bulk object has already been executed\n   * @throws {MongoError} Throws error if the bulk object does not have any operations\n   * @return {Promise|void} returns Promise if no callback passed\n   */\n  execute(_writeConcern, options, callback) {\n    const ret = this.bulkExecute(_writeConcern, options, callback);\n    if (!ret || isPromiseLike(ret)) {\n      return ret;\n    }\n\n    options = ret.options;\n    callback = ret.callback;\n\n    return executeLegacyOperation(this.s.topology, executeCommands, [this, options, callback]);\n  }\n\n  /**\n   * Handles final options before executing command\n   *\n   * An internal method. Do not invoke. Will not be accessible in the future\n   *\n   * @ignore\n   * @param {object} config\n   * @param {object} config.options\n   * @param {number} config.batch\n   * @param {function} config.resultHandler\n   * @param {function} callback\n   */\n  finalOptionsHandler(config, callback) {\n    const finalOptions = Object.assign({ ordered: this.isOrdered }, config.options);\n    if (this.s.writeConcern != null) {\n      finalOptions.writeConcern = this.s.writeConcern;\n    }\n\n    if (finalOptions.bypassDocumentValidation !== true) {\n      delete finalOptions.bypassDocumentValidation;\n    }\n\n    // Set an operationIf if provided\n    if (this.operationId) {\n      config.resultHandler.operationId = this.operationId;\n    }\n\n    // Serialize functions\n    if (this.s.options.serializeFunctions) {\n      finalOptions.serializeFunctions = true;\n    }\n\n    // Ignore undefined\n    if (this.s.options.ignoreUndefined) {\n      finalOptions.ignoreUndefined = true;\n    }\n\n    // Is the bypassDocumentValidation options specific\n    if (this.s.bypassDocumentValidation === true) {\n      finalOptions.bypassDocumentValidation = true;\n    }\n\n    // Is the checkKeys option disabled\n    if (this.s.checkKeys === false) {\n      finalOptions.checkKeys = false;\n    }\n\n    if (finalOptions.retryWrites) {\n      if (config.batch.batchType === UPDATE) {\n        finalOptions.retryWrites =\n          finalOptions.retryWrites && !config.batch.operations.some(op => op.multi);\n      }\n\n      if (config.batch.batchType === REMOVE) {\n        finalOptions.retryWrites =\n          finalOptions.retryWrites && !config.batch.operations.some(op => op.limit === 0);\n      }\n    }\n\n    try {\n      if (config.batch.batchType === INSERT) {\n        this.s.topology.insert(\n          this.s.namespace,\n          config.batch.operations,\n          finalOptions,\n          config.resultHandler\n        );\n      } else if (config.batch.batchType === UPDATE) {\n        this.s.topology.update(\n          this.s.namespace,\n          config.batch.operations,\n          finalOptions,\n          config.resultHandler\n        );\n      } else if (config.batch.batchType === REMOVE) {\n        this.s.topology.remove(\n          this.s.namespace,\n          config.batch.operations,\n          finalOptions,\n          config.resultHandler\n        );\n      }\n    } catch (err) {\n      // Force top level error\n      err.ok = 0;\n      // Merge top level error and return\n      handleCallback(callback, null, mergeBatchResults(config.batch, this.s.bulkResult, err, null));\n    }\n  }\n\n  /**\n   * Handles the write error before executing commands\n   *\n   * An internal helper method. Do not invoke directly. Will be going away in the future\n   *\n   * @ignore\n   * @param {function} callback\n   * @param {BulkWriteResult} writeResult\n   * @param {class} self either OrderedBulkOperation or UnorderedBulkOperation\n   */\n  handleWriteError(callback, writeResult) {\n    if (this.s.bulkResult.writeErrors.length > 0) {\n      const msg = this.s.bulkResult.writeErrors[0].errmsg\n        ? this.s.bulkResult.writeErrors[0].errmsg\n        : 'write operation failed';\n\n      handleCallback(\n        callback,\n        new BulkWriteError(\n          toError({\n            message: msg,\n            code: this.s.bulkResult.writeErrors[0].code,\n            writeErrors: this.s.bulkResult.writeErrors\n          }),\n          writeResult\n        ),\n        null\n      );\n      return true;\n    }\n\n    if (writeResult.getWriteConcernError()) {\n      handleCallback(\n        callback,\n        new BulkWriteError(toError(writeResult.getWriteConcernError()), writeResult),\n        null\n      );\n      return true;\n    }\n  }\n}\n\nObject.defineProperty(BulkOperationBase.prototype, 'length', {\n  enumerable: true,\n  get: function() {\n    return this.s.currentIndex;\n  }\n});\n\n// Exports symbols\nmodule.exports = {\n  Batch,\n  BulkOperationBase,\n  bson,\n  INSERT: INSERT,\n  UPDATE: UPDATE,\n  REMOVE: REMOVE,\n  BulkWriteError\n};\n","'use strict';\n\nconst common = require('./common');\nconst BulkOperationBase = common.BulkOperationBase;\nconst Batch = common.Batch;\nconst bson = common.bson;\nconst utils = require('../utils');\nconst toError = utils.toError;\n\n/**\n * Add to internal list of Operations\n *\n * @ignore\n * @param {OrderedBulkOperation} bulkOperation\n * @param {number} docType number indicating the document type\n * @param {object} document\n * @return {OrderedBulkOperation}\n */\nfunction addToOperationsList(bulkOperation, docType, document) {\n  // Get the bsonSize\n  const bsonSize = bson.calculateObjectSize(document, {\n    checkKeys: false,\n\n    // Since we don't know what the user selected for BSON options here,\n    // err on the safe side, and check the size with ignoreUndefined: false.\n    ignoreUndefined: false\n  });\n\n  // Throw error if the doc is bigger than the max BSON size\n  if (bsonSize >= bulkOperation.s.maxBsonObjectSize)\n    throw toError('document is larger than the maximum size ' + bulkOperation.s.maxBsonObjectSize);\n\n  // Create a new batch object if we don't have a current one\n  if (bulkOperation.s.currentBatch == null)\n    bulkOperation.s.currentBatch = new Batch(docType, bulkOperation.s.currentIndex);\n\n  const maxKeySize = bulkOperation.s.maxKeySize;\n\n  // Check if we need to create a new batch\n  if (\n    // New batch if we exceed the max batch op size\n    bulkOperation.s.currentBatchSize + 1 >= bulkOperation.s.maxWriteBatchSize ||\n    // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n    // since we can't sent an empty batch\n    (bulkOperation.s.currentBatchSize > 0 &&\n      bulkOperation.s.currentBatchSizeBytes + maxKeySize + bsonSize >=\n        bulkOperation.s.maxBatchSizeBytes) ||\n    // New batch if the new op does not have the same op type as the current batch\n    bulkOperation.s.currentBatch.batchType !== docType\n  ) {\n    // Save the batch to the execution stack\n    bulkOperation.s.batches.push(bulkOperation.s.currentBatch);\n\n    // Create a new batch\n    bulkOperation.s.currentBatch = new Batch(docType, bulkOperation.s.currentIndex);\n\n    // Reset the current size trackers\n    bulkOperation.s.currentBatchSize = 0;\n    bulkOperation.s.currentBatchSizeBytes = 0;\n  }\n\n  if (docType === common.INSERT) {\n    bulkOperation.s.bulkResult.insertedIds.push({\n      index: bulkOperation.s.currentIndex,\n      _id: document._id\n    });\n  }\n\n  // We have an array of documents\n  if (Array.isArray(document)) {\n    throw toError('operation passed in cannot be an Array');\n  }\n\n  bulkOperation.s.currentBatch.originalIndexes.push(bulkOperation.s.currentIndex);\n  bulkOperation.s.currentBatch.operations.push(document);\n  bulkOperation.s.currentBatchSize += 1;\n  bulkOperation.s.currentBatchSizeBytes += maxKeySize + bsonSize;\n  bulkOperation.s.currentIndex += 1;\n\n  // Return bulkOperation\n  return bulkOperation;\n}\n\n/**\n * Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @extends BulkOperationBase\n * @property {number} length Get the number of operations in the bulk.\n * @return {OrderedBulkOperation} a OrderedBulkOperation instance.\n */\nclass OrderedBulkOperation extends BulkOperationBase {\n  constructor(topology, collection, options) {\n    options = options || {};\n    options = Object.assign(options, { addToOperationsList });\n\n    super(topology, collection, options, true);\n  }\n}\n\n/**\n * Returns an unordered batch object\n * @ignore\n */\nfunction initializeOrderedBulkOp(topology, collection, options) {\n  return new OrderedBulkOperation(topology, collection, options);\n}\n\ninitializeOrderedBulkOp.OrderedBulkOperation = OrderedBulkOperation;\nmodule.exports = initializeOrderedBulkOp;\nmodule.exports.Bulk = OrderedBulkOperation;\n","'use strict';\n\nconst common = require('./common');\nconst BulkOperationBase = common.BulkOperationBase;\nconst Batch = common.Batch;\nconst bson = common.bson;\nconst utils = require('../utils');\nconst toError = utils.toError;\n\n/**\n * Add to internal list of Operations\n *\n * @ignore\n * @param {UnorderedBulkOperation} bulkOperation\n * @param {number} docType number indicating the document type\n * @param {object} document\n * @return {UnorderedBulkOperation}\n */\nfunction addToOperationsList(bulkOperation, docType, document) {\n  // Get the bsonSize\n  const bsonSize = bson.calculateObjectSize(document, {\n    checkKeys: false,\n\n    // Since we don't know what the user selected for BSON options here,\n    // err on the safe side, and check the size with ignoreUndefined: false.\n    ignoreUndefined: false\n  });\n  // Throw error if the doc is bigger than the max BSON size\n  if (bsonSize >= bulkOperation.s.maxBsonObjectSize)\n    throw toError('document is larger than the maximum size ' + bulkOperation.s.maxBsonObjectSize);\n  // Holds the current batch\n  bulkOperation.s.currentBatch = null;\n  // Get the right type of batch\n  if (docType === common.INSERT) {\n    bulkOperation.s.currentBatch = bulkOperation.s.currentInsertBatch;\n  } else if (docType === common.UPDATE) {\n    bulkOperation.s.currentBatch = bulkOperation.s.currentUpdateBatch;\n  } else if (docType === common.REMOVE) {\n    bulkOperation.s.currentBatch = bulkOperation.s.currentRemoveBatch;\n  }\n\n  const maxKeySize = bulkOperation.s.maxKeySize;\n\n  // Create a new batch object if we don't have a current one\n  if (bulkOperation.s.currentBatch == null)\n    bulkOperation.s.currentBatch = new Batch(docType, bulkOperation.s.currentIndex);\n\n  // Check if we need to create a new batch\n  if (\n    // New batch if we exceed the max batch op size\n    bulkOperation.s.currentBatch.size + 1 >= bulkOperation.s.maxWriteBatchSize ||\n    // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n    // since we can't sent an empty batch\n    (bulkOperation.s.currentBatch.size > 0 &&\n      bulkOperation.s.currentBatch.sizeBytes + maxKeySize + bsonSize >=\n        bulkOperation.s.maxBatchSizeBytes) ||\n    // New batch if the new op does not have the same op type as the current batch\n    bulkOperation.s.currentBatch.batchType !== docType\n  ) {\n    // Save the batch to the execution stack\n    bulkOperation.s.batches.push(bulkOperation.s.currentBatch);\n\n    // Create a new batch\n    bulkOperation.s.currentBatch = new Batch(docType, bulkOperation.s.currentIndex);\n  }\n\n  // We have an array of documents\n  if (Array.isArray(document)) {\n    throw toError('operation passed in cannot be an Array');\n  }\n\n  bulkOperation.s.currentBatch.operations.push(document);\n  bulkOperation.s.currentBatch.originalIndexes.push(bulkOperation.s.currentIndex);\n  bulkOperation.s.currentIndex = bulkOperation.s.currentIndex + 1;\n\n  // Save back the current Batch to the right type\n  if (docType === common.INSERT) {\n    bulkOperation.s.currentInsertBatch = bulkOperation.s.currentBatch;\n    bulkOperation.s.bulkResult.insertedIds.push({\n      index: bulkOperation.s.bulkResult.insertedIds.length,\n      _id: document._id\n    });\n  } else if (docType === common.UPDATE) {\n    bulkOperation.s.currentUpdateBatch = bulkOperation.s.currentBatch;\n  } else if (docType === common.REMOVE) {\n    bulkOperation.s.currentRemoveBatch = bulkOperation.s.currentBatch;\n  }\n\n  // Update current batch size\n  bulkOperation.s.currentBatch.size += 1;\n  bulkOperation.s.currentBatch.sizeBytes += maxKeySize + bsonSize;\n\n  // Return bulkOperation\n  return bulkOperation;\n}\n\n/**\n * Create a new UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @extends BulkOperationBase\n * @property {number} length Get the number of operations in the bulk.\n * @return {UnorderedBulkOperation} a UnorderedBulkOperation instance.\n */\nclass UnorderedBulkOperation extends BulkOperationBase {\n  constructor(topology, collection, options) {\n    options = options || {};\n    options = Object.assign(options, { addToOperationsList });\n\n    super(topology, collection, options, false);\n  }\n\n  handleWriteError(callback, writeResult) {\n    if (this.s.batches.length) {\n      return false;\n    }\n\n    return super.handleWriteError(callback, writeResult);\n  }\n}\n\n/**\n * Returns an unordered batch object\n * @ignore\n */\nfunction initializeUnorderedBulkOp(topology, collection, options) {\n  return new UnorderedBulkOperation(topology, collection, options);\n}\n\ninitializeUnorderedBulkOp.UnorderedBulkOperation = UnorderedBulkOperation;\nmodule.exports = initializeUnorderedBulkOp;\nmodule.exports.Bulk = UnorderedBulkOperation;\n","'use strict';\n\nconst Denque = require('denque');\nconst EventEmitter = require('events');\nconst isResumableError = require('./error').isResumableError;\nconst MongoError = require('./core').MongoError;\nconst Cursor = require('./cursor');\nconst relayEvents = require('./core/utils').relayEvents;\nconst maxWireVersion = require('./core/utils').maxWireVersion;\nconst maybePromise = require('./utils').maybePromise;\nconst now = require('./utils').now;\nconst calculateDurationInMs = require('./utils').calculateDurationInMs;\nconst AggregateOperation = require('./operations/aggregate');\n\nconst kResumeQueue = Symbol('resumeQueue');\n\nconst CHANGE_STREAM_OPTIONS = ['resumeAfter', 'startAfter', 'startAtOperationTime', 'fullDocument'];\nconst CURSOR_OPTIONS = ['batchSize', 'maxAwaitTimeMS', 'collation', 'readPreference'].concat(\n  CHANGE_STREAM_OPTIONS\n);\n\nconst CHANGE_DOMAIN_TYPES = {\n  COLLECTION: Symbol('Collection'),\n  DATABASE: Symbol('Database'),\n  CLUSTER: Symbol('Cluster')\n};\n\n/**\n * @typedef ResumeToken\n * @description Represents the logical starting point for a new or resuming {@link ChangeStream} on the server.\n * @see https://docs.mongodb.com/master/changeStreams/#change-stream-resume-token\n */\n\n/**\n * @typedef OperationTime\n * @description Represents a specific point in time on a server. Can be retrieved by using {@link Db#command}\n * @see https://docs.mongodb.com/manual/reference/method/db.runCommand/#response\n */\n\n/**\n * @typedef ChangeStreamOptions\n * @description Options that can be passed to a ChangeStream. Note that startAfter, resumeAfter, and startAtOperationTime are all mutually exclusive, and the server will error if more than one is specified.\n * @property {string} [fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @property {number} [maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query.\n * @property {ResumeToken} [resumeAfter] Allows you to start a changeStream after a specified event. See {@link https://docs.mongodb.com/master/changeStreams/#resumeafter-for-change-streams|ChangeStream documentation}.\n * @property {ResumeToken} [startAfter] Similar to resumeAfter, but will allow you to start after an invalidated event. See {@link https://docs.mongodb.com/master/changeStreams/#startafter-for-change-streams|ChangeStream documentation}.\n * @property {OperationTime} [startAtOperationTime] Will start the changeStream after the specified operationTime.\n * @property {number} [batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @property {object} [collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @property {ReadPreference} [readPreference] The read preference. Defaults to the read preference of the database or collection. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n */\n\n/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch|Collection.watch()}.\n * @class ChangeStream\n * @since 3.0.0\n * @param {(MongoClient|Db|Collection)} parent The parent object that created this change stream\n * @param {Array} pipeline An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents\n * @param {ChangeStreamOptions} [options] Optional settings\n * @fires ChangeStream#close\n * @fires ChangeStream#change\n * @fires ChangeStream#end\n * @fires ChangeStream#error\n * @fires ChangeStream#resumeTokenChanged\n * @return {ChangeStream} a ChangeStream instance.\n */\nclass ChangeStream extends EventEmitter {\n  constructor(parent, pipeline, options) {\n    super();\n    const Collection = require('./collection');\n    const Db = require('./db');\n    const MongoClient = require('./mongo_client');\n\n    this.pipeline = pipeline || [];\n    this.options = options || {};\n\n    this.parent = parent;\n    this.namespace = parent.s.namespace;\n    if (parent instanceof Collection) {\n      this.type = CHANGE_DOMAIN_TYPES.COLLECTION;\n      this.topology = parent.s.db.serverConfig;\n    } else if (parent instanceof Db) {\n      this.type = CHANGE_DOMAIN_TYPES.DATABASE;\n      this.topology = parent.serverConfig;\n    } else if (parent instanceof MongoClient) {\n      this.type = CHANGE_DOMAIN_TYPES.CLUSTER;\n      this.topology = parent.topology;\n    } else {\n      throw new TypeError(\n        'parent provided to ChangeStream constructor is not an instance of Collection, Db, or MongoClient'\n      );\n    }\n\n    this.promiseLibrary = parent.s.promiseLibrary;\n    if (!this.options.readPreference && parent.s.readPreference) {\n      this.options.readPreference = parent.s.readPreference;\n    }\n\n    this[kResumeQueue] = new Denque();\n\n    // Create contained Change Stream cursor\n    this.cursor = createChangeStreamCursor(this, options);\n\n    this.closed = false;\n\n    // Listen for any `change` listeners being added to ChangeStream\n    this.on('newListener', eventName => {\n      if (eventName === 'change' && this.cursor && this.listenerCount('change') === 0) {\n        this.cursor.on('data', change => processNewChange(this, change));\n      }\n    });\n\n    // Listen for all `change` listeners being removed from ChangeStream\n    this.on('removeListener', eventName => {\n      if (eventName === 'change' && this.listenerCount('change') === 0 && this.cursor) {\n        this.cursor.removeAllListeners('data');\n      }\n    });\n  }\n\n  /**\n   * @property {ResumeToken} resumeToken\n   * The cached resume token that will be used to resume\n   * after the most recently returned change.\n   */\n  get resumeToken() {\n    return this.cursor.resumeToken;\n  }\n\n  /**\n   * Check if there is any document still available in the Change Stream\n   * @function ChangeStream.prototype.hasNext\n   * @param {ChangeStream~resultCallback} [callback] The result callback.\n   * @throws {MongoError}\n   * @returns {Promise|void} returns Promise if no callback passed\n   */\n  hasNext(callback) {\n    return maybePromise(this.parent, callback, cb => {\n      getCursor(this, (err, cursor) => {\n        if (err) return cb(err); // failed to resume, raise an error\n        cursor.hasNext(cb);\n      });\n    });\n  }\n\n  /**\n   * Get the next available document from the Change Stream, returns null if no more documents are available.\n   * @function ChangeStream.prototype.next\n   * @param {ChangeStream~resultCallback} [callback] The result callback.\n   * @throws {MongoError}\n   * @returns {Promise|void} returns Promise if no callback passed\n   */\n  next(callback) {\n    return maybePromise(this.parent, callback, cb => {\n      getCursor(this, (err, cursor) => {\n        if (err) return cb(err); // failed to resume, raise an error\n        cursor.next((error, change) => {\n          if (error) {\n            this[kResumeQueue].push(() => this.next(cb));\n            processError(this, error, cb);\n            return;\n          }\n          processNewChange(this, change, cb);\n        });\n      });\n    });\n  }\n\n  /**\n   * Is the change stream closed\n   * @method ChangeStream.prototype.isClosed\n   * @return {boolean}\n   */\n  isClosed() {\n    return this.closed || (this.cursor && this.cursor.isClosed());\n  }\n\n  /**\n   * Close the Change Stream\n   * @method ChangeStream.prototype.close\n   * @param {ChangeStream~resultCallback} [callback] The result callback.\n   * @return {Promise} returns Promise if no callback passed\n   */\n  close(callback) {\n    return maybePromise(this.parent, callback, cb => {\n      if (this.closed) return cb();\n\n      // flag the change stream as explicitly closed\n      this.closed = true;\n\n      if (!this.cursor) return cb();\n\n      // Tidy up the existing cursor\n      const cursor = this.cursor;\n\n      return cursor.close(err => {\n        ['data', 'close', 'end', 'error'].forEach(event => cursor.removeAllListeners(event));\n        this.cursor = undefined;\n\n        return cb(err);\n      });\n    });\n  }\n\n  /**\n   * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n   * @method\n   * @param {Writable} destination The destination for writing data\n   * @param {object} [options] {@link https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options|Pipe options}\n   * @return {null}\n   */\n  pipe(destination, options) {\n    if (!this.pipeDestinations) {\n      this.pipeDestinations = [];\n    }\n    this.pipeDestinations.push(destination);\n    return this.cursor.pipe(destination, options);\n  }\n\n  /**\n   * This method will remove the hooks set up for a previous pipe() call.\n   * @param {Writable} [destination] The destination for writing data\n   * @return {null}\n   */\n  unpipe(destination) {\n    if (this.pipeDestinations && this.pipeDestinations.indexOf(destination) > -1) {\n      this.pipeDestinations.splice(this.pipeDestinations.indexOf(destination), 1);\n    }\n    return this.cursor.unpipe(destination);\n  }\n\n  /**\n   * Return a modified Readable stream including a possible transform method.\n   * @method\n   * @param {object} [options] Optional settings.\n   * @param {function} [options.transform] A transformation method applied to each document emitted by the stream.\n   * @return {Cursor}\n   */\n  stream(options) {\n    this.streamOptions = options;\n    return this.cursor.stream(options);\n  }\n\n  /**\n   * This method will cause a stream in flowing mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n   * @return {null}\n   */\n  pause() {\n    return this.cursor.pause();\n  }\n\n  /**\n   * This method will cause the readable stream to resume emitting data events.\n   * @return {null}\n   */\n  resume() {\n    return this.cursor.resume();\n  }\n}\n\nclass ChangeStreamCursor extends Cursor {\n  constructor(topology, operation, options) {\n    super(topology, operation, options);\n\n    options = options || {};\n    this._resumeToken = null;\n    this.startAtOperationTime = options.startAtOperationTime;\n\n    if (options.startAfter) {\n      this.resumeToken = options.startAfter;\n    } else if (options.resumeAfter) {\n      this.resumeToken = options.resumeAfter;\n    }\n  }\n\n  set resumeToken(token) {\n    this._resumeToken = token;\n    this.emit('resumeTokenChanged', token);\n  }\n\n  get resumeToken() {\n    return this._resumeToken;\n  }\n\n  get resumeOptions() {\n    const result = {};\n    for (const optionName of CURSOR_OPTIONS) {\n      if (this.options[optionName]) result[optionName] = this.options[optionName];\n    }\n\n    if (this.resumeToken || this.startAtOperationTime) {\n      ['resumeAfter', 'startAfter', 'startAtOperationTime'].forEach(key => delete result[key]);\n\n      if (this.resumeToken) {\n        const resumeKey =\n          this.options.startAfter && !this.hasReceived ? 'startAfter' : 'resumeAfter';\n        result[resumeKey] = this.resumeToken;\n      } else if (this.startAtOperationTime && maxWireVersion(this.server) >= 7) {\n        result.startAtOperationTime = this.startAtOperationTime;\n      }\n    }\n\n    return result;\n  }\n\n  cacheResumeToken(resumeToken) {\n    if (this.bufferedCount() === 0 && this.cursorState.postBatchResumeToken) {\n      this.resumeToken = this.cursorState.postBatchResumeToken;\n    } else {\n      this.resumeToken = resumeToken;\n    }\n    this.hasReceived = true;\n  }\n\n  _processBatch(batchName, response) {\n    const cursor = response.cursor;\n    if (cursor.postBatchResumeToken) {\n      this.cursorState.postBatchResumeToken = cursor.postBatchResumeToken;\n\n      if (cursor[batchName].length === 0) {\n        this.resumeToken = cursor.postBatchResumeToken;\n      }\n    }\n  }\n\n  _initializeCursor(callback) {\n    super._initializeCursor((err, result) => {\n      if (err || result == null) {\n        callback(err, result);\n        return;\n      }\n\n      const response = result.documents[0];\n\n      if (\n        this.startAtOperationTime == null &&\n        this.resumeAfter == null &&\n        this.startAfter == null &&\n        maxWireVersion(this.server) >= 7\n      ) {\n        this.startAtOperationTime = response.operationTime;\n      }\n\n      this._processBatch('firstBatch', response);\n\n      this.emit('init', result);\n      this.emit('response');\n      callback(err, result);\n    });\n  }\n\n  _getMore(callback) {\n    super._getMore((err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      this._processBatch('nextBatch', response);\n\n      this.emit('more', response);\n      this.emit('response');\n      callback(err, response);\n    });\n  }\n}\n\n/**\n * @event ChangeStreamCursor#response\n * internal event DO NOT USE\n * @ignore\n */\n\n// Create a new change stream cursor based on self's configuration\nfunction createChangeStreamCursor(self, options) {\n  const changeStreamStageOptions = { fullDocument: options.fullDocument || 'default' };\n  applyKnownOptions(changeStreamStageOptions, options, CHANGE_STREAM_OPTIONS);\n  if (self.type === CHANGE_DOMAIN_TYPES.CLUSTER) {\n    changeStreamStageOptions.allChangesForCluster = true;\n  }\n\n  const pipeline = [{ $changeStream: changeStreamStageOptions }].concat(self.pipeline);\n  const cursorOptions = applyKnownOptions({}, options, CURSOR_OPTIONS);\n\n  const changeStreamCursor = new ChangeStreamCursor(\n    self.topology,\n    new AggregateOperation(self.parent, pipeline, options),\n    cursorOptions\n  );\n\n  relayEvents(changeStreamCursor, self, ['resumeTokenChanged', 'end', 'close']);\n\n  /**\n   * Fired for each new matching change in the specified namespace. Attaching a `change`\n   * event listener to a Change Stream will switch the stream into flowing mode. Data will\n   * then be passed as soon as it is available.\n   *\n   * @event ChangeStream#change\n   * @type {object}\n   */\n  if (self.listenerCount('change') > 0) {\n    changeStreamCursor.on('data', function(change) {\n      processNewChange(self, change);\n    });\n  }\n\n  /**\n   * Change stream close event\n   *\n   * @event ChangeStream#close\n   * @type {null}\n   */\n\n  /**\n   * Change stream end event\n   *\n   * @event ChangeStream#end\n   * @type {null}\n   */\n\n  /**\n   * Emitted each time the change stream stores a new resume token.\n   *\n   * @event ChangeStream#resumeTokenChanged\n   * @type {ResumeToken}\n   */\n\n  /**\n   * Fired when the stream encounters an error.\n   *\n   * @event ChangeStream#error\n   * @type {Error}\n   */\n  changeStreamCursor.on('error', function(error) {\n    processError(self, error);\n  });\n\n  if (self.pipeDestinations) {\n    const cursorStream = changeStreamCursor.stream(self.streamOptions);\n    for (let pipeDestination of self.pipeDestinations) {\n      cursorStream.pipe(pipeDestination);\n    }\n  }\n\n  return changeStreamCursor;\n}\n\nfunction applyKnownOptions(target, source, optionNames) {\n  optionNames.forEach(name => {\n    if (source[name]) {\n      target[name] = source[name];\n    }\n  });\n\n  return target;\n}\n\n// This method performs a basic server selection loop, satisfying the requirements of\n// ChangeStream resumability until the new SDAM layer can be used.\nconst SELECTION_TIMEOUT = 30000;\nfunction waitForTopologyConnected(topology, options, callback) {\n  setTimeout(() => {\n    if (options && options.start == null) {\n      options.start = now();\n    }\n\n    const start = options.start || now();\n    const timeout = options.timeout || SELECTION_TIMEOUT;\n    const readPreference = options.readPreference;\n    if (topology.isConnected({ readPreference })) {\n      return callback();\n    }\n\n    if (calculateDurationInMs(start) > timeout) {\n      return callback(new MongoError('Timed out waiting for connection'));\n    }\n\n    waitForTopologyConnected(topology, options, callback);\n  }, 500); // this is an arbitrary wait time to allow SDAM to transition\n}\n\nfunction processNewChange(changeStream, change, callback) {\n  const cursor = changeStream.cursor;\n\n  // a null change means the cursor has been notified, implicitly closing the change stream\n  if (change == null) {\n    changeStream.closed = true;\n  }\n\n  if (changeStream.closed) {\n    if (callback) callback(new MongoError('ChangeStream is closed'));\n    return;\n  }\n\n  if (change && !change._id) {\n    const noResumeTokenError = new Error(\n      'A change stream document has been received that lacks a resume token (_id).'\n    );\n\n    if (!callback) return changeStream.emit('error', noResumeTokenError);\n    return callback(noResumeTokenError);\n  }\n\n  // cache the resume token\n  cursor.cacheResumeToken(change._id);\n\n  // wipe the startAtOperationTime if there was one so that there won't be a conflict\n  // between resumeToken and startAtOperationTime if we need to reconnect the cursor\n  changeStream.options.startAtOperationTime = undefined;\n\n  // Return the change\n  if (!callback) return changeStream.emit('change', change);\n  return callback(undefined, change);\n}\n\nfunction processError(changeStream, error, callback) {\n  const topology = changeStream.topology;\n  const cursor = changeStream.cursor;\n\n  // If the change stream has been closed explictly, do not process error.\n  if (changeStream.closed) {\n    if (callback) callback(new MongoError('ChangeStream is closed'));\n    return;\n  }\n\n  // if the resume succeeds, continue with the new cursor\n  function resumeWithCursor(newCursor) {\n    changeStream.cursor = newCursor;\n    processResumeQueue(changeStream);\n  }\n\n  // otherwise, raise an error and close the change stream\n  function unresumableError(err) {\n    if (!callback) {\n      changeStream.emit('error', err);\n      changeStream.emit('close');\n    }\n    processResumeQueue(changeStream, err);\n    changeStream.closed = true;\n  }\n\n  if (cursor && isResumableError(error, maxWireVersion(cursor.server))) {\n    changeStream.cursor = undefined;\n\n    // stop listening to all events from old cursor\n    ['data', 'close', 'end', 'error'].forEach(event => cursor.removeAllListeners(event));\n\n    // close internal cursor, ignore errors\n    cursor.close();\n\n    waitForTopologyConnected(topology, { readPreference: cursor.options.readPreference }, err => {\n      // if the topology can't reconnect, close the stream\n      if (err) return unresumableError(err);\n\n      // create a new cursor, preserving the old cursor's options\n      const newCursor = createChangeStreamCursor(changeStream, cursor.resumeOptions);\n\n      // attempt to continue in emitter mode\n      if (!callback) return resumeWithCursor(newCursor);\n\n      // attempt to continue in iterator mode\n      newCursor.hasNext(err => {\n        // if there's an error immediately after resuming, close the stream\n        if (err) return unresumableError(err);\n        resumeWithCursor(newCursor);\n      });\n    });\n    return;\n  }\n\n  if (!callback) return changeStream.emit('error', error);\n  return callback(error);\n}\n\n/**\n * Safely provides a cursor across resume attempts\n *\n * @param {ChangeStream} changeStream the parent ChangeStream\n * @param {function} callback gets the cursor or error\n * @param {ChangeStreamCursor} [oldCursor] when resuming from an error, carry over options from previous cursor\n */\nfunction getCursor(changeStream, callback) {\n  if (changeStream.isClosed()) {\n    callback(new MongoError('ChangeStream is closed.'));\n    return;\n  }\n\n  // if a cursor exists and it is open, return it\n  if (changeStream.cursor) {\n    callback(undefined, changeStream.cursor);\n    return;\n  }\n\n  // no cursor, queue callback until topology reconnects\n  changeStream[kResumeQueue].push(callback);\n}\n\n/**\n * Drain the resume queue when a new has become available\n *\n * @param {ChangeStream} changeStream the parent ChangeStream\n * @param {ChangeStreamCursor?} changeStream.cursor the new cursor\n * @param {Error} [err] error getting a new cursor\n */\nfunction processResumeQueue(changeStream, err) {\n  while (changeStream[kResumeQueue].length) {\n    const request = changeStream[kResumeQueue].pop();\n    if (changeStream.isClosed() && !err) {\n      request(new MongoError('Change Stream is not open.'));\n      return;\n    }\n    request(err, changeStream.cursor);\n  }\n}\n\n/**\n * The callback format for results\n * @callback ChangeStream~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\nmodule.exports = ChangeStream;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst MessageStream = require('./message_stream');\nconst MongoError = require('../core/error').MongoError;\nconst MongoNetworkError = require('../core/error').MongoNetworkError;\nconst MongoNetworkTimeoutError = require('../core/error').MongoNetworkTimeoutError;\nconst MongoWriteConcernError = require('../core/error').MongoWriteConcernError;\nconst CommandResult = require('../core/connection/command_result');\nconst StreamDescription = require('./stream_description').StreamDescription;\nconst wp = require('../core/wireprotocol');\nconst apm = require('../core/connection/apm');\nconst updateSessionFromResponse = require('../core/sessions').updateSessionFromResponse;\nconst uuidV4 = require('../core/utils').uuidV4;\nconst now = require('../utils').now;\nconst calculateDurationInMs = require('../utils').calculateDurationInMs;\n\nconst kStream = Symbol('stream');\nconst kQueue = Symbol('queue');\nconst kMessageStream = Symbol('messageStream');\nconst kGeneration = Symbol('generation');\nconst kLastUseTime = Symbol('lastUseTime');\nconst kClusterTime = Symbol('clusterTime');\nconst kDescription = Symbol('description');\nconst kIsMaster = Symbol('ismaster');\nconst kAutoEncrypter = Symbol('autoEncrypter');\n\nclass Connection extends EventEmitter {\n  constructor(stream, options) {\n    super(options);\n\n    this.id = options.id;\n    this.address = streamIdentifier(stream);\n    this.bson = options.bson;\n    this.socketTimeout = typeof options.socketTimeout === 'number' ? options.socketTimeout : 0;\n    this.host = options.host || 'localhost';\n    this.port = options.port || 27017;\n    this.monitorCommands =\n      typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false;\n    this.closed = false;\n    this.destroyed = false;\n\n    this[kDescription] = new StreamDescription(this.address, options);\n    this[kGeneration] = options.generation;\n    this[kLastUseTime] = now();\n\n    // retain a reference to an `AutoEncrypter` if present\n    if (options.autoEncrypter) {\n      this[kAutoEncrypter] = options.autoEncrypter;\n    }\n\n    // setup parser stream and message handling\n    this[kQueue] = new Map();\n    this[kMessageStream] = new MessageStream(options);\n    this[kMessageStream].on('message', messageHandler(this));\n    this[kStream] = stream;\n    stream.on('error', () => {\n      /* ignore errors, listen to `close` instead */\n    });\n\n    stream.on('close', () => {\n      if (this.closed) {\n        return;\n      }\n\n      this.closed = true;\n      this[kQueue].forEach(op =>\n        op.cb(new MongoNetworkError(`connection ${this.id} to ${this.address} closed`))\n      );\n      this[kQueue].clear();\n\n      this.emit('close');\n    });\n\n    stream.on('timeout', () => {\n      if (this.closed) {\n        return;\n      }\n\n      stream.destroy();\n      this.closed = true;\n      this[kQueue].forEach(op =>\n        op.cb(\n          new MongoNetworkTimeoutError(`connection ${this.id} to ${this.address} timed out`, {\n            beforeHandshake: this[kIsMaster] == null\n          })\n        )\n      );\n\n      this[kQueue].clear();\n      this.emit('close');\n    });\n\n    // hook the message stream up to the passed in stream\n    stream.pipe(this[kMessageStream]);\n    this[kMessageStream].pipe(stream);\n  }\n\n  get description() {\n    return this[kDescription];\n  }\n\n  get ismaster() {\n    return this[kIsMaster];\n  }\n\n  // the `connect` method stores the result of the handshake ismaster on the connection\n  set ismaster(response) {\n    this[kDescription].receiveResponse(response);\n\n    // TODO: remove this, and only use the `StreamDescription` in the future\n    this[kIsMaster] = response;\n  }\n\n  get generation() {\n    return this[kGeneration] || 0;\n  }\n\n  get idleTime() {\n    return calculateDurationInMs(this[kLastUseTime]);\n  }\n\n  get clusterTime() {\n    return this[kClusterTime];\n  }\n\n  get stream() {\n    return this[kStream];\n  }\n\n  markAvailable() {\n    this[kLastUseTime] = now();\n  }\n\n  destroy(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    options = Object.assign({ force: false }, options);\n    if (this[kStream] == null || this.destroyed) {\n      this.destroyed = true;\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    if (options.force) {\n      this[kStream].destroy();\n      this.destroyed = true;\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    this[kStream].end(err => {\n      this.destroyed = true;\n      if (typeof callback === 'function') {\n        callback(err);\n      }\n    });\n  }\n\n  // Wire protocol methods\n  command(ns, cmd, options, callback) {\n    wp.command(makeServerTrampoline(this), ns, cmd, options, callback);\n  }\n\n  query(ns, cmd, cursorState, options, callback) {\n    wp.query(makeServerTrampoline(this), ns, cmd, cursorState, options, callback);\n  }\n\n  getMore(ns, cursorState, batchSize, options, callback) {\n    wp.getMore(makeServerTrampoline(this), ns, cursorState, batchSize, options, callback);\n  }\n\n  killCursors(ns, cursorState, callback) {\n    wp.killCursors(makeServerTrampoline(this), ns, cursorState, callback);\n  }\n\n  insert(ns, ops, options, callback) {\n    wp.insert(makeServerTrampoline(this), ns, ops, options, callback);\n  }\n\n  update(ns, ops, options, callback) {\n    wp.update(makeServerTrampoline(this), ns, ops, options, callback);\n  }\n\n  remove(ns, ops, options, callback) {\n    wp.remove(makeServerTrampoline(this), ns, ops, options, callback);\n  }\n}\n\n/// This lets us emulate a legacy `Server` instance so we can work with the existing wire\n/// protocol methods. Eventually, the operation executor will return a `Connection` to execute\n/// against.\nfunction makeServerTrampoline(connection) {\n  const server = {\n    description: connection.description,\n    clusterTime: connection[kClusterTime],\n    s: {\n      bson: connection.bson,\n      pool: { write: write.bind(connection), isConnected: () => true }\n    }\n  };\n\n  if (connection[kAutoEncrypter]) {\n    server.autoEncrypter = connection[kAutoEncrypter];\n  }\n\n  return server;\n}\n\nfunction messageHandler(conn) {\n  return function messageHandler(message) {\n    // always emit the message, in case we are streaming\n    conn.emit('message', message);\n    if (!conn[kQueue].has(message.responseTo)) {\n      return;\n    }\n\n    const operationDescription = conn[kQueue].get(message.responseTo);\n    const callback = operationDescription.cb;\n\n    // SERVER-45775: For exhaust responses we should be able to use the same requestId to\n    // track response, however the server currently synthetically produces remote requests\n    // making the `responseTo` change on each response\n    conn[kQueue].delete(message.responseTo);\n    if (message.moreToCome) {\n      // requeue the callback for next synthetic request\n      conn[kQueue].set(message.requestId, operationDescription);\n    } else if (operationDescription.socketTimeoutOverride) {\n      conn[kStream].setTimeout(conn.socketTimeout);\n    }\n\n    try {\n      // Pass in the entire description because it has BSON parsing options\n      message.parse(operationDescription);\n    } catch (err) {\n      callback(new MongoError(err));\n      return;\n    }\n\n    if (message.documents[0]) {\n      const document = message.documents[0];\n      const session = operationDescription.session;\n      if (session) {\n        updateSessionFromResponse(session, document);\n      }\n\n      if (document.$clusterTime) {\n        conn[kClusterTime] = document.$clusterTime;\n        conn.emit('clusterTimeReceived', document.$clusterTime);\n      }\n\n      if (operationDescription.command) {\n        if (document.writeConcernError) {\n          callback(new MongoWriteConcernError(document.writeConcernError, document));\n          return;\n        }\n\n        if (document.ok === 0 || document.$err || document.errmsg || document.code) {\n          callback(new MongoError(document));\n          return;\n        }\n      }\n    }\n\n    // NODE-2382: reenable in our glorious non-leaky abstraction future\n    // callback(null, operationDescription.fullResult ? message : message.documents[0]);\n\n    callback(\n      undefined,\n      new CommandResult(\n        operationDescription.fullResult ? message : message.documents[0],\n        conn,\n        message\n      )\n    );\n  };\n}\n\nfunction streamIdentifier(stream) {\n  if (typeof stream.address === 'function') {\n    return `${stream.remoteAddress}:${stream.remotePort}`;\n  }\n\n  return uuidV4().toString('hex');\n}\n\n// Not meant to be called directly, the wire protocol methods call this assuming it is a `Pool` instance\nfunction write(command, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  options = options || {};\n  const operationDescription = {\n    requestId: command.requestId,\n    cb: callback,\n    session: options.session,\n    fullResult: typeof options.fullResult === 'boolean' ? options.fullResult : false,\n    noResponse: typeof options.noResponse === 'boolean' ? options.noResponse : false,\n    documentsReturnedIn: options.documentsReturnedIn,\n    command: !!options.command,\n\n    // for BSON parsing\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    raw: typeof options.raw === 'boolean' ? options.raw : false\n  };\n\n  if (this[kDescription] && this[kDescription].compressor) {\n    operationDescription.agreedCompressor = this[kDescription].compressor;\n\n    if (this[kDescription].zlibCompressionLevel) {\n      operationDescription.zlibCompressionLevel = this[kDescription].zlibCompressionLevel;\n    }\n  }\n\n  if (typeof options.socketTimeout === 'number') {\n    operationDescription.socketTimeoutOverride = true;\n    this[kStream].setTimeout(options.socketTimeout);\n  }\n\n  // if command monitoring is enabled we need to modify the callback here\n  if (this.monitorCommands) {\n    this.emit('commandStarted', new apm.CommandStartedEvent(this, command));\n\n    operationDescription.started = now();\n    operationDescription.cb = (err, reply) => {\n      if (err) {\n        this.emit(\n          'commandFailed',\n          new apm.CommandFailedEvent(this, command, err, operationDescription.started)\n        );\n      } else {\n        if (reply && reply.result && (reply.result.ok === 0 || reply.result.$err)) {\n          this.emit(\n            'commandFailed',\n            new apm.CommandFailedEvent(this, command, reply.result, operationDescription.started)\n          );\n        } else {\n          this.emit(\n            'commandSucceeded',\n            new apm.CommandSucceededEvent(this, command, reply, operationDescription.started)\n          );\n        }\n      }\n\n      if (typeof callback === 'function') {\n        callback(err, reply);\n      }\n    };\n  }\n\n  if (!operationDescription.noResponse) {\n    this[kQueue].set(operationDescription.requestId, operationDescription);\n  }\n\n  try {\n    this[kMessageStream].writeCommand(command, operationDescription);\n  } catch (e) {\n    if (!operationDescription.noResponse) {\n      this[kQueue].delete(operationDescription.requestId);\n      operationDescription.cb(e);\n      return;\n    }\n  }\n\n  if (operationDescription.noResponse) {\n    operationDescription.cb();\n  }\n}\n\nmodule.exports = {\n  Connection\n};\n","'use strict';\n\nconst Denque = require('denque');\nconst EventEmitter = require('events').EventEmitter;\nconst Logger = require('../core/connection/logger');\nconst makeCounter = require('../utils').makeCounter;\nconst MongoError = require('../core/error').MongoError;\nconst Connection = require('./connection').Connection;\nconst eachAsync = require('../core/utils').eachAsync;\nconst connect = require('../core/connection/connect');\nconst relayEvents = require('../core/utils').relayEvents;\n\nconst errors = require('./errors');\nconst PoolClosedError = errors.PoolClosedError;\nconst WaitQueueTimeoutError = errors.WaitQueueTimeoutError;\n\nconst events = require('./events');\nconst ConnectionPoolCreatedEvent = events.ConnectionPoolCreatedEvent;\nconst ConnectionPoolClosedEvent = events.ConnectionPoolClosedEvent;\nconst ConnectionCreatedEvent = events.ConnectionCreatedEvent;\nconst ConnectionReadyEvent = events.ConnectionReadyEvent;\nconst ConnectionClosedEvent = events.ConnectionClosedEvent;\nconst ConnectionCheckOutStartedEvent = events.ConnectionCheckOutStartedEvent;\nconst ConnectionCheckOutFailedEvent = events.ConnectionCheckOutFailedEvent;\nconst ConnectionCheckedOutEvent = events.ConnectionCheckedOutEvent;\nconst ConnectionCheckedInEvent = events.ConnectionCheckedInEvent;\nconst ConnectionPoolClearedEvent = events.ConnectionPoolClearedEvent;\n\nconst kLogger = Symbol('logger');\nconst kConnections = Symbol('connections');\nconst kPermits = Symbol('permits');\nconst kMinPoolSizeTimer = Symbol('minPoolSizeTimer');\nconst kGeneration = Symbol('generation');\nconst kConnectionCounter = Symbol('connectionCounter');\nconst kCancellationToken = Symbol('cancellationToken');\nconst kWaitQueue = Symbol('waitQueue');\nconst kCancelled = Symbol('cancelled');\n\nconst VALID_POOL_OPTIONS = new Set([\n  // `connect` options\n  'ssl',\n  'bson',\n  'connectionType',\n  'monitorCommands',\n  'socketTimeout',\n  'credentials',\n  'compression',\n\n  // node Net options\n  'host',\n  'port',\n  'localAddress',\n  'localPort',\n  'family',\n  'hints',\n  'lookup',\n  'path',\n\n  // node TLS options\n  'ca',\n  'cert',\n  'sigalgs',\n  'ciphers',\n  'clientCertEngine',\n  'crl',\n  'dhparam',\n  'ecdhCurve',\n  'honorCipherOrder',\n  'key',\n  'privateKeyEngine',\n  'privateKeyIdentifier',\n  'maxVersion',\n  'minVersion',\n  'passphrase',\n  'pfx',\n  'secureOptions',\n  'secureProtocol',\n  'sessionIdContext',\n  'allowHalfOpen',\n  'rejectUnauthorized',\n  'pskCallback',\n  'ALPNProtocols',\n  'servername',\n  'checkServerIdentity',\n  'session',\n  'minDHSize',\n  'secureContext',\n\n  // spec options\n  'maxPoolSize',\n  'minPoolSize',\n  'maxIdleTimeMS',\n  'waitQueueTimeoutMS'\n]);\n\nfunction resolveOptions(options, defaults) {\n  const newOptions = Array.from(VALID_POOL_OPTIONS).reduce((obj, key) => {\n    if (Object.prototype.hasOwnProperty.call(options, key)) {\n      obj[key] = options[key];\n    }\n\n    return obj;\n  }, {});\n\n  return Object.freeze(Object.assign({}, defaults, newOptions));\n}\n\n/**\n * Configuration options for drivers wrapping the node driver.\n *\n * @typedef {Object} ConnectionPoolOptions\n * @property\n * @property {string} [host] The host to connect to\n * @property {number} [port] The port to connect to\n * @property {bson} [bson] The BSON instance to use for new connections\n * @property {number} [maxPoolSize=100] The maximum number of connections that may be associated with a pool at a given time. This includes in use and available connections.\n * @property {number} [minPoolSize=0] The minimum number of connections that MUST exist at any moment in a single connection pool.\n * @property {number} [maxIdleTimeMS] The maximum amount of time a connection should remain idle in the connection pool before being marked idle.\n * @property {number} [waitQueueTimeoutMS=0] The maximum amount of time operation execution should wait for a connection to become available. The default is 0 which means there is no limit.\n */\n\n/**\n * A pool of connections which dynamically resizes, and emit events related to pool activity\n *\n * @property {number} generation An integer representing the SDAM generation of the pool\n * @property {number} totalConnectionCount An integer expressing how many total connections (active + in use) the pool currently has\n * @property {number} availableConnectionCount An integer expressing how many connections are currently available in the pool.\n * @property {string} address The address of the endpoint the pool is connected to\n *\n * @emits ConnectionPool#connectionPoolCreated\n * @emits ConnectionPool#connectionPoolClosed\n * @emits ConnectionPool#connectionCreated\n * @emits ConnectionPool#connectionReady\n * @emits ConnectionPool#connectionClosed\n * @emits ConnectionPool#connectionCheckOutStarted\n * @emits ConnectionPool#connectionCheckOutFailed\n * @emits ConnectionPool#connectionCheckedOut\n * @emits ConnectionPool#connectionCheckedIn\n * @emits ConnectionPool#connectionPoolCleared\n */\nclass ConnectionPool extends EventEmitter {\n  /**\n   * Create a new Connection Pool\n   *\n   * @param {ConnectionPoolOptions} options\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    this.closed = false;\n    this.options = resolveOptions(options, {\n      connectionType: Connection,\n      maxPoolSize: typeof options.maxPoolSize === 'number' ? options.maxPoolSize : 100,\n      minPoolSize: typeof options.minPoolSize === 'number' ? options.minPoolSize : 0,\n      maxIdleTimeMS: typeof options.maxIdleTimeMS === 'number' ? options.maxIdleTimeMS : 0,\n      waitQueueTimeoutMS:\n        typeof options.waitQueueTimeoutMS === 'number' ? options.waitQueueTimeoutMS : 0,\n      autoEncrypter: options.autoEncrypter,\n      metadata: options.metadata\n    });\n\n    if (options.minSize > options.maxSize) {\n      throw new TypeError(\n        'Connection pool minimum size must not be greater than maxiumum pool size'\n      );\n    }\n\n    this[kLogger] = Logger('ConnectionPool', options);\n    this[kConnections] = new Denque();\n    this[kPermits] = this.options.maxPoolSize;\n    this[kMinPoolSizeTimer] = undefined;\n    this[kGeneration] = 0;\n    this[kConnectionCounter] = makeCounter(1);\n    this[kCancellationToken] = new EventEmitter();\n    this[kCancellationToken].setMaxListeners(Infinity);\n    this[kWaitQueue] = new Denque();\n\n    process.nextTick(() => {\n      this.emit('connectionPoolCreated', new ConnectionPoolCreatedEvent(this));\n      ensureMinPoolSize(this);\n    });\n  }\n\n  get address() {\n    return `${this.options.host}:${this.options.port}`;\n  }\n\n  get generation() {\n    return this[kGeneration];\n  }\n\n  get totalConnectionCount() {\n    return this[kConnections].length + (this.options.maxPoolSize - this[kPermits]);\n  }\n\n  get availableConnectionCount() {\n    return this[kConnections].length;\n  }\n\n  get waitQueueSize() {\n    return this[kWaitQueue].length;\n  }\n\n  /**\n   * Check a connection out of this pool. The connection will continue to be tracked, but no reference to it\n   * will be held by the pool. This means that if a connection is checked out it MUST be checked back in or\n   * explicitly destroyed by the new owner.\n   *\n   * @param {ConnectionPool~checkOutCallback} callback\n   */\n  checkOut(callback) {\n    this.emit('connectionCheckOutStarted', new ConnectionCheckOutStartedEvent(this));\n\n    if (this.closed) {\n      this.emit('connectionCheckOutFailed', new ConnectionCheckOutFailedEvent(this, 'poolClosed'));\n      callback(new PoolClosedError(this));\n      return;\n    }\n\n    const waitQueueMember = { callback };\n\n    const pool = this;\n    const waitQueueTimeoutMS = this.options.waitQueueTimeoutMS;\n    if (waitQueueTimeoutMS) {\n      waitQueueMember.timer = setTimeout(() => {\n        waitQueueMember[kCancelled] = true;\n        waitQueueMember.timer = undefined;\n\n        pool.emit('connectionCheckOutFailed', new ConnectionCheckOutFailedEvent(pool, 'timeout'));\n        waitQueueMember.callback(new WaitQueueTimeoutError(pool));\n      }, waitQueueTimeoutMS);\n    }\n\n    this[kWaitQueue].push(waitQueueMember);\n    process.nextTick(() => processWaitQueue(this));\n  }\n\n  /**\n   * Check a connection into the pool.\n   *\n   * @param {Connection} connection The connection to check in\n   */\n  checkIn(connection) {\n    const poolClosed = this.closed;\n    const stale = connectionIsStale(this, connection);\n    const willDestroy = !!(poolClosed || stale || connection.closed);\n\n    if (!willDestroy) {\n      connection.markAvailable();\n      this[kConnections].push(connection);\n    }\n\n    this.emit('connectionCheckedIn', new ConnectionCheckedInEvent(this, connection));\n\n    if (willDestroy) {\n      const reason = connection.closed ? 'error' : poolClosed ? 'poolClosed' : 'stale';\n      destroyConnection(this, connection, reason);\n    }\n\n    process.nextTick(() => processWaitQueue(this));\n  }\n\n  /**\n   * Clear the pool\n   *\n   * Pool reset is handled by incrementing the pool's generation count. Any existing connection of a\n   * previous generation will eventually be pruned during subsequent checkouts.\n   */\n  clear() {\n    this[kGeneration] += 1;\n    this.emit('connectionPoolCleared', new ConnectionPoolClearedEvent(this));\n  }\n\n  /**\n   * Close the pool\n   *\n   * @param {object} [options] Optional settings\n   * @param {boolean} [options.force] Force close connections\n   * @param {Function} callback\n   */\n  close(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n    }\n\n    options = Object.assign({ force: false }, options);\n    if (this.closed) {\n      return callback();\n    }\n\n    // immediately cancel any in-flight connections\n    this[kCancellationToken].emit('cancel');\n\n    // drain the wait queue\n    while (this.waitQueueSize) {\n      const waitQueueMember = this[kWaitQueue].pop();\n      clearTimeout(waitQueueMember.timer);\n      if (!waitQueueMember[kCancelled]) {\n        waitQueueMember.callback(new MongoError('connection pool closed'));\n      }\n    }\n\n    // clear the min pool size timer\n    if (this[kMinPoolSizeTimer]) {\n      clearTimeout(this[kMinPoolSizeTimer]);\n    }\n\n    // end the connection counter\n    if (typeof this[kConnectionCounter].return === 'function') {\n      this[kConnectionCounter].return();\n    }\n\n    // mark the pool as closed immediately\n    this.closed = true;\n\n    eachAsync(\n      this[kConnections].toArray(),\n      (conn, cb) => {\n        this.emit('connectionClosed', new ConnectionClosedEvent(this, conn, 'poolClosed'));\n        conn.destroy(options, cb);\n      },\n      err => {\n        this[kConnections].clear();\n        this.emit('connectionPoolClosed', new ConnectionPoolClosedEvent(this));\n        callback(err);\n      }\n    );\n  }\n\n  /**\n   * Runs a lambda with an implicitly checked out connection, checking that connection back in when the lambda\n   * has completed by calling back.\n   *\n   * NOTE: please note the required signature of `fn`\n   *\n   * @param {ConnectionPool~withConnectionCallback} fn A function which operates on a managed connection\n   * @param {Function} callback The original callback\n   * @return {Promise}\n   */\n  withConnection(fn, callback) {\n    this.checkOut((err, conn) => {\n      // don't callback with `err` here, we might want to act upon it inside `fn`\n\n      fn(err, conn, (fnErr, result) => {\n        if (typeof callback === 'function') {\n          if (fnErr) {\n            callback(fnErr);\n          } else {\n            callback(undefined, result);\n          }\n        }\n\n        if (conn) {\n          this.checkIn(conn);\n        }\n      });\n    });\n  }\n}\n\nfunction ensureMinPoolSize(pool) {\n  if (pool.closed || pool.options.minPoolSize === 0) {\n    return;\n  }\n\n  const minPoolSize = pool.options.minPoolSize;\n  for (let i = pool.totalConnectionCount; i < minPoolSize; ++i) {\n    createConnection(pool);\n  }\n\n  pool[kMinPoolSizeTimer] = setTimeout(() => ensureMinPoolSize(pool), 10);\n}\n\nfunction connectionIsStale(pool, connection) {\n  return connection.generation !== pool[kGeneration];\n}\n\nfunction connectionIsIdle(pool, connection) {\n  return !!(pool.options.maxIdleTimeMS && connection.idleTime > pool.options.maxIdleTimeMS);\n}\n\nfunction createConnection(pool, callback) {\n  const connectOptions = Object.assign(\n    {\n      id: pool[kConnectionCounter].next().value,\n      generation: pool[kGeneration]\n    },\n    pool.options\n  );\n\n  pool[kPermits]--;\n  connect(connectOptions, pool[kCancellationToken], (err, connection) => {\n    if (err) {\n      pool[kPermits]++;\n      pool[kLogger].debug(`connection attempt failed with error [${JSON.stringify(err)}]`);\n      if (typeof callback === 'function') {\n        callback(err);\n      }\n\n      return;\n    }\n\n    // The pool might have closed since we started trying to create a connection\n    if (pool.closed) {\n      connection.destroy({ force: true });\n      return;\n    }\n\n    // forward all events from the connection to the pool\n    relayEvents(connection, pool, [\n      'commandStarted',\n      'commandFailed',\n      'commandSucceeded',\n      'clusterTimeReceived'\n    ]);\n\n    pool.emit('connectionCreated', new ConnectionCreatedEvent(pool, connection));\n\n    connection.markAvailable();\n    pool.emit('connectionReady', new ConnectionReadyEvent(pool, connection));\n\n    // if a callback has been provided, check out the connection immediately\n    if (typeof callback === 'function') {\n      callback(undefined, connection);\n      return;\n    }\n\n    // otherwise add it to the pool for later acquisition, and try to process the wait queue\n    pool[kConnections].push(connection);\n    process.nextTick(() => processWaitQueue(pool));\n  });\n}\n\nfunction destroyConnection(pool, connection, reason) {\n  pool.emit('connectionClosed', new ConnectionClosedEvent(pool, connection, reason));\n\n  // allow more connections to be created\n  pool[kPermits]++;\n\n  // destroy the connection\n  process.nextTick(() => connection.destroy());\n}\n\nfunction processWaitQueue(pool) {\n  if (pool.closed) {\n    return;\n  }\n\n  while (pool.waitQueueSize) {\n    const waitQueueMember = pool[kWaitQueue].peekFront();\n    if (waitQueueMember[kCancelled]) {\n      pool[kWaitQueue].shift();\n      continue;\n    }\n\n    if (!pool.availableConnectionCount) {\n      break;\n    }\n\n    const connection = pool[kConnections].shift();\n    const isStale = connectionIsStale(pool, connection);\n    const isIdle = connectionIsIdle(pool, connection);\n    if (!isStale && !isIdle && !connection.closed) {\n      pool.emit('connectionCheckedOut', new ConnectionCheckedOutEvent(pool, connection));\n      clearTimeout(waitQueueMember.timer);\n      pool[kWaitQueue].shift();\n      waitQueueMember.callback(undefined, connection);\n      return;\n    }\n\n    const reason = connection.closed ? 'error' : isStale ? 'stale' : 'idle';\n    destroyConnection(pool, connection, reason);\n  }\n\n  const maxPoolSize = pool.options.maxPoolSize;\n  if (pool.waitQueueSize && (maxPoolSize <= 0 || pool.totalConnectionCount < maxPoolSize)) {\n    createConnection(pool, (err, connection) => {\n      const waitQueueMember = pool[kWaitQueue].shift();\n      if (waitQueueMember == null || waitQueueMember[kCancelled]) {\n        if (err == null) {\n          pool[kConnections].push(connection);\n        }\n\n        return;\n      }\n\n      if (err) {\n        pool.emit('connectionCheckOutFailed', new ConnectionCheckOutFailedEvent(pool, err));\n      } else {\n        pool.emit('connectionCheckedOut', new ConnectionCheckedOutEvent(pool, connection));\n      }\n\n      clearTimeout(waitQueueMember.timer);\n      waitQueueMember.callback(err, connection);\n    });\n\n    return;\n  }\n}\n\n/**\n * A callback provided to `withConnection`\n *\n * @callback ConnectionPool~withConnectionCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Connection} connection The managed connection which was checked out of the pool.\n * @param {Function} callback A function to call back after connection management is complete\n */\n\n/**\n * A callback provided to `checkOut`\n *\n * @callback ConnectionPool~checkOutCallback\n * @param {MongoError} error An error instance representing the error during checkout\n * @param {Connection} connection A connection from the pool\n */\n\n/**\n * Emitted once when the connection pool is created\n *\n * @event ConnectionPool#connectionPoolCreated\n * @type {PoolCreatedEvent}\n */\n\n/**\n * Emitted once when the connection pool is closed\n *\n * @event ConnectionPool#connectionPoolClosed\n * @type {PoolClosedEvent}\n */\n\n/**\n * Emitted each time a connection is created\n *\n * @event ConnectionPool#connectionCreated\n * @type {ConnectionCreatedEvent}\n */\n\n/**\n * Emitted when a connection becomes established, and is ready to use\n *\n * @event ConnectionPool#connectionReady\n * @type {ConnectionReadyEvent}\n */\n\n/**\n * Emitted when a connection is closed\n *\n * @event ConnectionPool#connectionClosed\n * @type {ConnectionClosedEvent}\n */\n\n/**\n * Emitted when an attempt to check out a connection begins\n *\n * @event ConnectionPool#connectionCheckOutStarted\n * @type {ConnectionCheckOutStartedEvent}\n */\n\n/**\n * Emitted when an attempt to check out a connection fails\n *\n * @event ConnectionPool#connectionCheckOutFailed\n * @type {ConnectionCheckOutFailedEvent}\n */\n\n/**\n * Emitted each time a connection is successfully checked out of the connection pool\n *\n * @event ConnectionPool#connectionCheckedOut\n * @type {ConnectionCheckedOutEvent}\n */\n\n/**\n * Emitted each time a connection is successfully checked into the connection pool\n *\n * @event ConnectionPool#connectionCheckedIn\n * @type {ConnectionCheckedInEvent}\n */\n\n/**\n * Emitted each time the connection pool is cleared and it's generation incremented\n *\n * @event ConnectionPool#connectionPoolCleared\n * @type {PoolClearedEvent}\n */\n\nmodule.exports = {\n  ConnectionPool\n};\n","'use strict';\nconst MongoError = require('../core/error').MongoError;\n\n/**\n * An error indicating a connection pool is closed\n *\n * @property {string} address The address of the connection pool\n * @extends MongoError\n */\nclass PoolClosedError extends MongoError {\n  constructor(pool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.name = 'MongoPoolClosedError';\n    this.address = pool.address;\n  }\n}\n\n/**\n * An error thrown when a request to check out a connection times out\n *\n * @property {string} address The address of the connection pool\n * @extends MongoError\n */\nclass WaitQueueTimeoutError extends MongoError {\n  constructor(pool) {\n    super('Timed out while checking out a connection from connection pool');\n    this.name = 'MongoWaitQueueTimeoutError';\n    this.address = pool.address;\n  }\n}\n\nmodule.exports = {\n  PoolClosedError,\n  WaitQueueTimeoutError\n};\n","'use strict';\n\n/**\n * The base class for all monitoring events published from the connection pool\n *\n * @property {number} time A timestamp when the event was created\n * @property {string} address The address (host/port pair) of the pool\n */\nclass ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    this.time = new Date();\n    this.address = pool.address;\n  }\n}\n\n/**\n * An event published when a connection pool is created\n *\n * @property {Object} options The options used to create this connection pool\n */\nclass ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    super(pool);\n    this.options = pool.options;\n  }\n}\n\n/**\n * An event published when a connection pool is closed\n */\nclass ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a connection pool creates a new connection\n *\n * @property {number} connectionId A monotonically increasing, per-pool id for the newly created connection\n */\nclass ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is ready for use\n *\n * @property {number} connectionId The id of the connection\n */\nclass ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is closed\n *\n * @property {number} connectionId The id of the connection\n * @property {string} reason The reason the connection was closed\n */\nclass ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection, reason) {\n    super(pool);\n    this.connectionId = connection.id;\n    this.reason = reason || 'unknown';\n  }\n}\n\n/**\n * An event published when a request to check a connection out begins\n */\nclass ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a request to check a connection out fails\n *\n * @property {string} reason The reason the attempt to check out failed\n */\nclass ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, reason) {\n    super(pool);\n    this.reason = reason;\n  }\n}\n\n/**\n * An event published when a connection is checked out of the connection pool\n *\n * @property {number} connectionId The id of the connection\n */\nclass ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is checked into the connection pool\n *\n * @property {number} connectionId The id of the connection\n */\nclass ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection pool is cleared\n */\nclass ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n  constructor(pool) {\n    super(pool);\n  }\n}\n\nconst CMAP_EVENT_NAMES = [\n  'connectionPoolCreated',\n  'connectionPoolClosed',\n  'connectionCreated',\n  'connectionReady',\n  'connectionClosed',\n  'connectionCheckOutStarted',\n  'connectionCheckOutFailed',\n  'connectionCheckedOut',\n  'connectionCheckedIn',\n  'connectionPoolCleared'\n];\n\nmodule.exports = {\n  CMAP_EVENT_NAMES,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionReadyEvent,\n  ConnectionClosedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckedInEvent,\n  ConnectionPoolClearedEvent\n};\n","'use strict';\n\nconst Duplex = require('stream').Duplex;\nconst BufferList = require('bl');\nconst MongoParseError = require('../core/error').MongoParseError;\nconst decompress = require('../core/wireprotocol/compression').decompress;\nconst Response = require('../core/connection/commands').Response;\nconst BinMsg = require('../core/connection/msg').BinMsg;\nconst MongoError = require('../core/error').MongoError;\nconst OP_COMPRESSED = require('../core/wireprotocol/shared').opcodes.OP_COMPRESSED;\nconst OP_MSG = require('../core/wireprotocol/shared').opcodes.OP_MSG;\nconst MESSAGE_HEADER_SIZE = require('../core/wireprotocol/shared').MESSAGE_HEADER_SIZE;\nconst COMPRESSION_DETAILS_SIZE = require('../core/wireprotocol/shared').COMPRESSION_DETAILS_SIZE;\nconst opcodes = require('../core/wireprotocol/shared').opcodes;\nconst compress = require('../core/wireprotocol/compression').compress;\nconst compressorIDs = require('../core/wireprotocol/compression').compressorIDs;\nconst uncompressibleCommands = require('../core/wireprotocol/compression').uncompressibleCommands;\nconst Msg = require('../core/connection/msg').Msg;\n\nconst kDefaultMaxBsonMessageSize = 1024 * 1024 * 16 * 4;\nconst kBuffer = Symbol('buffer');\n\n/**\n * A duplex stream that is capable of reading and writing raw wire protocol messages, with\n * support for optional compression\n */\nclass MessageStream extends Duplex {\n  constructor(options) {\n    options = options || {};\n    super(options);\n\n    this.bson = options.bson;\n    this.maxBsonMessageSize = options.maxBsonMessageSize || kDefaultMaxBsonMessageSize;\n\n    this[kBuffer] = new BufferList();\n  }\n\n  _write(chunk, _, callback) {\n    const buffer = this[kBuffer];\n    buffer.append(chunk);\n\n    processIncomingData(this, callback);\n  }\n\n  _read(/* size */) {\n    // NOTE: This implementation is empty because we explicitly push data to be read\n    //       when `writeMessage` is called.\n    return;\n  }\n\n  writeCommand(command, operationDescription) {\n    // TODO: agreed compressor should live in `StreamDescription`\n    const shouldCompress = operationDescription && !!operationDescription.agreedCompressor;\n    if (!shouldCompress || !canCompress(command)) {\n      const data = command.toBin();\n      this.push(Array.isArray(data) ? Buffer.concat(data) : data);\n      return;\n    }\n\n    // otherwise, compress the message\n    const concatenatedOriginalCommandBuffer = Buffer.concat(command.toBin());\n    const messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n    // Extract information needed for OP_COMPRESSED from the uncompressed message\n    const originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n    // Compress the message body\n    compress({ options: operationDescription }, messageToBeCompressed, (err, compressedMessage) => {\n      if (err) {\n        operationDescription.cb(err, null);\n        return;\n      }\n\n      // Create the msgHeader of OP_COMPRESSED\n      const msgHeader = Buffer.alloc(MESSAGE_HEADER_SIZE);\n      msgHeader.writeInt32LE(\n        MESSAGE_HEADER_SIZE + COMPRESSION_DETAILS_SIZE + compressedMessage.length,\n        0\n      ); // messageLength\n      msgHeader.writeInt32LE(command.requestId, 4); // requestID\n      msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n      msgHeader.writeInt32LE(opcodes.OP_COMPRESSED, 12); // opCode\n\n      // Create the compression details of OP_COMPRESSED\n      const compressionDetails = Buffer.alloc(COMPRESSION_DETAILS_SIZE);\n      compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n      compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n      compressionDetails.writeUInt8(compressorIDs[operationDescription.agreedCompressor], 8); // compressorID\n\n      this.push(Buffer.concat([msgHeader, compressionDetails, compressedMessage]));\n    });\n  }\n}\n\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nfunction canCompress(command) {\n  const commandDoc = command instanceof Msg ? command.command : command.query;\n  const commandName = Object.keys(commandDoc)[0];\n  return !uncompressibleCommands.has(commandName);\n}\n\nfunction processIncomingData(stream, callback) {\n  const buffer = stream[kBuffer];\n  if (buffer.length < 4) {\n    callback();\n    return;\n  }\n\n  const sizeOfMessage = buffer.readInt32LE(0);\n  if (sizeOfMessage < 0) {\n    callback(new MongoParseError(`Invalid message size: ${sizeOfMessage}`));\n    return;\n  }\n\n  if (sizeOfMessage > stream.maxBsonMessageSize) {\n    callback(\n      new MongoParseError(\n        `Invalid message size: ${sizeOfMessage}, max allowed: ${stream.maxBsonMessageSize}`\n      )\n    );\n    return;\n  }\n\n  if (sizeOfMessage > buffer.length) {\n    callback();\n    return;\n  }\n\n  const message = buffer.slice(0, sizeOfMessage);\n  buffer.consume(sizeOfMessage);\n\n  const messageHeader = {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n\n  let ResponseType = messageHeader.opCode === OP_MSG ? BinMsg : Response;\n  const responseOptions = stream.responseOptions;\n  if (messageHeader.opCode !== OP_COMPRESSED) {\n    const messageBody = message.slice(MESSAGE_HEADER_SIZE);\n    stream.emit(\n      'message',\n      new ResponseType(stream.bson, message, messageHeader, messageBody, responseOptions)\n    );\n\n    if (buffer.length >= 4) {\n      processIncomingData(stream, callback);\n    } else {\n      callback();\n    }\n\n    return;\n  }\n\n  messageHeader.fromCompressed = true;\n  messageHeader.opCode = message.readInt32LE(MESSAGE_HEADER_SIZE);\n  messageHeader.length = message.readInt32LE(MESSAGE_HEADER_SIZE + 4);\n  const compressorID = message[MESSAGE_HEADER_SIZE + 8];\n  const compressedBuffer = message.slice(MESSAGE_HEADER_SIZE + 9);\n\n  // recalculate based on wrapped opcode\n  ResponseType = messageHeader.opCode === OP_MSG ? BinMsg : Response;\n\n  decompress(compressorID, compressedBuffer, (err, messageBody) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (messageBody.length !== messageHeader.length) {\n      callback(\n        new MongoError(\n          'Decompressing a compressed message from the server failed. The message is corrupt.'\n        )\n      );\n\n      return;\n    }\n\n    stream.emit(\n      'message',\n      new ResponseType(stream.bson, message, messageHeader, messageBody, responseOptions)\n    );\n\n    if (buffer.length >= 4) {\n      processIncomingData(stream, callback);\n    } else {\n      callback();\n    }\n  });\n}\n\nmodule.exports = MessageStream;\n","'use strict';\nconst parseServerType = require('../core/sdam/server_description').parseServerType;\n\nconst RESPONSE_FIELDS = [\n  'minWireVersion',\n  'maxWireVersion',\n  'maxBsonObjectSize',\n  'maxMessageSizeBytes',\n  'maxWriteBatchSize',\n  '__nodejs_mock_server__'\n];\n\nclass StreamDescription {\n  constructor(address, options) {\n    this.address = address;\n    this.type = parseServerType(null);\n    this.minWireVersion = undefined;\n    this.maxWireVersion = undefined;\n    this.maxBsonObjectSize = 16777216;\n    this.maxMessageSizeBytes = 48000000;\n    this.maxWriteBatchSize = 100000;\n    this.compressors =\n      options && options.compression && Array.isArray(options.compression.compressors)\n        ? options.compression.compressors\n        : [];\n  }\n\n  receiveResponse(response) {\n    this.type = parseServerType(response);\n\n    RESPONSE_FIELDS.forEach(field => {\n      if (typeof response[field] !== 'undefined') {\n        this[field] = response[field];\n      }\n    });\n\n    if (response.compression) {\n      this.compressor = this.compressors.filter(c => response.compression.indexOf(c) !== -1)[0];\n    }\n  }\n}\n\nmodule.exports = {\n  StreamDescription\n};\n","'use strict';\n\nconst deprecate = require('util').deprecate;\nconst deprecateOptions = require('./utils').deprecateOptions;\nconst checkCollectionName = require('./utils').checkCollectionName;\nconst ObjectID = require('./core').BSON.ObjectID;\nconst MongoError = require('./core').MongoError;\nconst normalizeHintField = require('./utils').normalizeHintField;\nconst decorateCommand = require('./utils').decorateCommand;\nconst decorateWithCollation = require('./utils').decorateWithCollation;\nconst decorateWithReadConcern = require('./utils').decorateWithReadConcern;\nconst formattedOrderClause = require('./utils').formattedOrderClause;\nconst ReadPreference = require('./core').ReadPreference;\nconst unordered = require('./bulk/unordered');\nconst ordered = require('./bulk/ordered');\nconst ChangeStream = require('./change_stream');\nconst executeLegacyOperation = require('./utils').executeLegacyOperation;\nconst WriteConcern = require('./write_concern');\nconst ReadConcern = require('./read_concern');\nconst MongoDBNamespace = require('./utils').MongoDBNamespace;\nconst AggregationCursor = require('./aggregation_cursor');\nconst CommandCursor = require('./command_cursor');\n\n// Operations\nconst ensureIndex = require('./operations/collection_ops').ensureIndex;\nconst group = require('./operations/collection_ops').group;\nconst parallelCollectionScan = require('./operations/collection_ops').parallelCollectionScan;\nconst removeDocuments = require('./operations/common_functions').removeDocuments;\nconst save = require('./operations/collection_ops').save;\nconst updateDocuments = require('./operations/common_functions').updateDocuments;\n\nconst AggregateOperation = require('./operations/aggregate');\nconst BulkWriteOperation = require('./operations/bulk_write');\nconst CountDocumentsOperation = require('./operations/count_documents');\nconst CreateIndexesOperation = require('./operations/create_indexes');\nconst DeleteManyOperation = require('./operations/delete_many');\nconst DeleteOneOperation = require('./operations/delete_one');\nconst DistinctOperation = require('./operations/distinct');\nconst DropCollectionOperation = require('./operations/drop').DropCollectionOperation;\nconst DropIndexOperation = require('./operations/drop_index');\nconst DropIndexesOperation = require('./operations/drop_indexes');\nconst EstimatedDocumentCountOperation = require('./operations/estimated_document_count');\nconst FindOperation = require('./operations/find');\nconst FindOneOperation = require('./operations/find_one');\nconst FindAndModifyOperation = require('./operations/find_and_modify');\nconst FindOneAndDeleteOperation = require('./operations/find_one_and_delete');\nconst FindOneAndReplaceOperation = require('./operations/find_one_and_replace');\nconst FindOneAndUpdateOperation = require('./operations/find_one_and_update');\nconst GeoHaystackSearchOperation = require('./operations/geo_haystack_search');\nconst IndexesOperation = require('./operations/indexes');\nconst IndexExistsOperation = require('./operations/index_exists');\nconst IndexInformationOperation = require('./operations/index_information');\nconst InsertManyOperation = require('./operations/insert_many');\nconst InsertOneOperation = require('./operations/insert_one');\nconst IsCappedOperation = require('./operations/is_capped');\nconst ListIndexesOperation = require('./operations/list_indexes');\nconst MapReduceOperation = require('./operations/map_reduce');\nconst OptionsOperation = require('./operations/options_operation');\nconst RenameOperation = require('./operations/rename');\nconst ReIndexOperation = require('./operations/re_index');\nconst ReplaceOneOperation = require('./operations/replace_one');\nconst StatsOperation = require('./operations/stats');\nconst UpdateManyOperation = require('./operations/update_many');\nconst UpdateOneOperation = require('./operations/update_one');\n\nconst executeOperation = require('./operations/execute_operation');\n\n/**\n * @fileOverview The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/update/remove/find and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Show that duplicate records got dropped\n *   col.find({}).toArray(function(err, items) {\n *     test.equal(null, err);\n *     test.equal(4, items.length);\n *     client.close();\n *   });\n * });\n */\n\nconst mergeKeys = ['ignoreUndefined'];\n\n/**\n * Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n */\nfunction Collection(db, topology, dbName, name, pkFactory, options) {\n  checkCollectionName(name);\n\n  // Unpack variables\n  const internalHint = null;\n  const slaveOk = options == null || options.slaveOk == null ? db.slaveOk : options.slaveOk;\n  const serializeFunctions =\n    options == null || options.serializeFunctions == null\n      ? db.s.options.serializeFunctions\n      : options.serializeFunctions;\n  const raw = options == null || options.raw == null ? db.s.options.raw : options.raw;\n  const promoteLongs =\n    options == null || options.promoteLongs == null\n      ? db.s.options.promoteLongs\n      : options.promoteLongs;\n  const promoteValues =\n    options == null || options.promoteValues == null\n      ? db.s.options.promoteValues\n      : options.promoteValues;\n  const promoteBuffers =\n    options == null || options.promoteBuffers == null\n      ? db.s.options.promoteBuffers\n      : options.promoteBuffers;\n  const collectionHint = null;\n\n  const namespace = new MongoDBNamespace(dbName, name);\n\n  // Get the promiseLibrary\n  const promiseLibrary = options.promiseLibrary || Promise;\n\n  // Set custom primary key factory if provided\n  pkFactory = pkFactory == null ? ObjectID : pkFactory;\n\n  // Internal state\n  this.s = {\n    // Set custom primary key factory if provided\n    pkFactory: pkFactory,\n    // Db\n    db: db,\n    // Topology\n    topology: topology,\n    // Options\n    options: options,\n    // Namespace\n    namespace: namespace,\n    // Read preference\n    readPreference: ReadPreference.fromOptions(options),\n    // SlaveOK\n    slaveOk: slaveOk,\n    // Serialize functions\n    serializeFunctions: serializeFunctions,\n    // Raw\n    raw: raw,\n    // promoteLongs\n    promoteLongs: promoteLongs,\n    // promoteValues\n    promoteValues: promoteValues,\n    // promoteBuffers\n    promoteBuffers: promoteBuffers,\n    // internalHint\n    internalHint: internalHint,\n    // collectionHint\n    collectionHint: collectionHint,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Read Concern\n    readConcern: ReadConcern.fromOptions(options),\n    // Write Concern\n    writeConcern: WriteConcern.fromOptions(options)\n  };\n}\n\n/**\n * The name of the database this collection belongs to\n * @member {string} dbName\n * @memberof Collection#\n * @readonly\n */\nObject.defineProperty(Collection.prototype, 'dbName', {\n  enumerable: true,\n  get: function() {\n    return this.s.namespace.db;\n  }\n});\n\n/**\n * The name of this collection\n * @member {string} collectionName\n * @memberof Collection#\n * @readonly\n */\nObject.defineProperty(Collection.prototype, 'collectionName', {\n  enumerable: true,\n  get: function() {\n    return this.s.namespace.collection;\n  }\n});\n\n/**\n * The namespace of this collection, in the format `${this.dbName}.${this.collectionName}`\n * @member {string} namespace\n * @memberof Collection#\n * @readonly\n */\nObject.defineProperty(Collection.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    return this.s.namespace.toString();\n  }\n});\n\n/**\n * The current readConcern of the collection. If not explicitly defined for\n * this collection, will be inherited from the parent DB\n * @member {ReadConcern} [readConcern]\n * @memberof Collection#\n * @readonly\n */\nObject.defineProperty(Collection.prototype, 'readConcern', {\n  enumerable: true,\n  get: function() {\n    if (this.s.readConcern == null) {\n      return this.s.db.readConcern;\n    }\n    return this.s.readConcern;\n  }\n});\n\n/**\n * The current readPreference of the collection. If not explicitly defined for\n * this collection, will be inherited from the parent DB\n * @member {ReadPreference} [readPreference]\n * @memberof Collection#\n * @readonly\n */\nObject.defineProperty(Collection.prototype, 'readPreference', {\n  enumerable: true,\n  get: function() {\n    if (this.s.readPreference == null) {\n      return this.s.db.readPreference;\n    }\n\n    return this.s.readPreference;\n  }\n});\n\n/**\n * The current writeConcern of the collection. If not explicitly defined for\n * this collection, will be inherited from the parent DB\n * @member {WriteConcern} [writeConcern]\n * @memberof Collection#\n * @readonly\n */\nObject.defineProperty(Collection.prototype, 'writeConcern', {\n  enumerable: true,\n  get: function() {\n    if (this.s.writeConcern == null) {\n      return this.s.db.writeConcern;\n    }\n    return this.s.writeConcern;\n  }\n});\n\n/**\n * The current index hint for the collection\n * @member {object} [hint]\n * @memberof Collection#\n */\nObject.defineProperty(Collection.prototype, 'hint', {\n  enumerable: true,\n  get: function() {\n    return this.s.collectionHint;\n  },\n  set: function(v) {\n    this.s.collectionHint = normalizeHintField(v);\n  }\n});\n\nconst DEPRECATED_FIND_OPTIONS = ['maxScan', 'fields', 'snapshot', 'oplogReplay'];\n\n/**\n * Creates a cursor for a query that can be used to iterate over results from MongoDB\n * @method\n * @param {object} [query={}] The cursor query object.\n * @param {object} [options] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.projection] The fields to return in the query. Object of fields to either include or exclude (one of, not both), {'a':1, 'b': 1} **or** {'a': 0, 'b': 0}\n * @param {object} [options.fields] **Deprecated** Use `options.projection` instead\n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.snapshot=false] DEPRECATED: Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {boolean} [options.awaitData=false] Specify if the cursor is a a tailable-await cursor. Requires `tailable` to be true\n * @param {number} [options.batchSize=1000] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan] DEPRECATED: Limit the number of items to scan.\n * @param {number} [options.min] Set index bounds.\n * @param {number} [options.max] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. Requires `tailable` and `awaitData` to be true\n * @param {boolean} [options.noCursorTimeout] The server normally times out idle cursors after an inactivity period (10 minutes) to prevent excess memory use. Set this option to prevent that.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {boolean} [options.allowDiskUse] Enables writing to temporary files on the server.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @throws {MongoError}\n * @return {Cursor}\n */\nCollection.prototype.find = deprecateOptions(\n  {\n    name: 'collection.find',\n    deprecatedOptions: DEPRECATED_FIND_OPTIONS,\n    optionsIndex: 1\n  },\n  function(query, options, callback) {\n    if (typeof callback === 'object') {\n      // TODO(MAJOR): throw in the future\n      console.warn('Third parameter to `find()` must be a callback or undefined');\n    }\n\n    let selector = query;\n    // figuring out arguments\n    if (typeof callback !== 'function') {\n      if (typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      } else if (options == null) {\n        callback = typeof selector === 'function' ? selector : undefined;\n        selector = typeof selector === 'object' ? selector : undefined;\n      }\n    }\n\n    // Ensure selector is not null\n    selector = selector == null ? {} : selector;\n    // Validate correctness off the selector\n    const object = selector;\n    if (Buffer.isBuffer(object)) {\n      const object_size = object[0] | (object[1] << 8) | (object[2] << 16) | (object[3] << 24);\n      if (object_size !== object.length) {\n        const error = new Error(\n          'query selector raw message size does not match message header size [' +\n            object.length +\n            '] != [' +\n            object_size +\n            ']'\n        );\n        error.name = 'MongoError';\n        throw error;\n      }\n    }\n\n    // Check special case where we are using an objectId\n    if (selector != null && selector._bsontype === 'ObjectID') {\n      selector = { _id: selector };\n    }\n\n    if (!options) options = {};\n\n    let projection = options.projection || options.fields;\n\n    if (projection && !Buffer.isBuffer(projection) && Array.isArray(projection)) {\n      projection = projection.length\n        ? projection.reduce((result, field) => {\n            result[field] = 1;\n            return result;\n          }, {})\n        : { _id: 1 };\n    }\n\n    // Make a shallow copy of options\n    let newOptions = Object.assign({}, options);\n\n    // Make a shallow copy of the collection options\n    for (let key in this.s.options) {\n      if (mergeKeys.indexOf(key) !== -1) {\n        newOptions[key] = this.s.options[key];\n      }\n    }\n\n    // Unpack options\n    newOptions.skip = options.skip ? options.skip : 0;\n    newOptions.limit = options.limit ? options.limit : 0;\n    newOptions.raw = typeof options.raw === 'boolean' ? options.raw : this.s.raw;\n    newOptions.hint =\n      options.hint != null ? normalizeHintField(options.hint) : this.s.collectionHint;\n    newOptions.timeout = typeof options.timeout === 'undefined' ? undefined : options.timeout;\n    // // If we have overridden slaveOk otherwise use the default db setting\n    newOptions.slaveOk = options.slaveOk != null ? options.slaveOk : this.s.db.slaveOk;\n\n    // Add read preference if needed\n    newOptions.readPreference = ReadPreference.resolve(this, newOptions);\n\n    // Set slave ok to true if read preference different from primary\n    if (\n      newOptions.readPreference != null &&\n      (newOptions.readPreference !== 'primary' || newOptions.readPreference.mode !== 'primary')\n    ) {\n      newOptions.slaveOk = true;\n    }\n\n    // Ensure the query is an object\n    if (selector != null && typeof selector !== 'object') {\n      throw MongoError.create({ message: 'query selector must be an object', driver: true });\n    }\n\n    // Build the find command\n    const findCommand = {\n      find: this.s.namespace.toString(),\n      limit: newOptions.limit,\n      skip: newOptions.skip,\n      query: selector\n    };\n\n    if (typeof options.allowDiskUse === 'boolean') {\n      findCommand.allowDiskUse = options.allowDiskUse;\n    }\n\n    // Ensure we use the right await data option\n    if (typeof newOptions.awaitdata === 'boolean') {\n      newOptions.awaitData = newOptions.awaitdata;\n    }\n\n    // Translate to new command option noCursorTimeout\n    if (typeof newOptions.timeout === 'boolean') newOptions.noCursorTimeout = !newOptions.timeout;\n\n    decorateCommand(findCommand, newOptions, ['session', 'collation']);\n\n    if (projection) findCommand.fields = projection;\n\n    // Add db object to the new options\n    newOptions.db = this.s.db;\n\n    // Add the promise library\n    newOptions.promiseLibrary = this.s.promiseLibrary;\n\n    // Set raw if available at collection level\n    if (newOptions.raw == null && typeof this.s.raw === 'boolean') newOptions.raw = this.s.raw;\n    // Set promoteLongs if available at collection level\n    if (newOptions.promoteLongs == null && typeof this.s.promoteLongs === 'boolean')\n      newOptions.promoteLongs = this.s.promoteLongs;\n    if (newOptions.promoteValues == null && typeof this.s.promoteValues === 'boolean')\n      newOptions.promoteValues = this.s.promoteValues;\n    if (newOptions.promoteBuffers == null && typeof this.s.promoteBuffers === 'boolean')\n      newOptions.promoteBuffers = this.s.promoteBuffers;\n\n    // Sort options\n    if (findCommand.sort) {\n      findCommand.sort = formattedOrderClause(findCommand.sort);\n    }\n\n    // Set the readConcern\n    decorateWithReadConcern(findCommand, this, options);\n\n    // Decorate find command with collation options\n    try {\n      decorateWithCollation(findCommand, this, options);\n    } catch (err) {\n      if (typeof callback === 'function') return callback(err, null);\n      throw err;\n    }\n\n    const cursor = this.s.topology.cursor(\n      new FindOperation(this, this.s.namespace, findCommand, newOptions),\n      newOptions\n    );\n\n    // TODO: remove this when NODE-2074 is resolved\n    if (typeof callback === 'function') {\n      callback(null, cursor);\n      return;\n    }\n\n    return cursor;\n  }\n);\n\n/**\n * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object} doc Document to insert.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.checkKeys=true] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertOneWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertOne = function(doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  const insertOneOperation = new InsertOneOperation(this, doc, options);\n\n  return executeOperation(this.s.topology, insertOneOperation, callback);\n};\n\n/**\n * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} docs Documents to insert.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.ordered=true] If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.checkKeys=true] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertMany = function(docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? Object.assign({}, options) : { ordered: true };\n\n  const insertManyOperation = new InsertManyOperation(this, docs, options);\n\n  return executeOperation(this.s.topology, insertManyOperation, callback);\n};\n\n/**\n * @typedef {Object} Collection~BulkWriteOpResult\n * @property {number} insertedCount Number of documents inserted.\n * @property {number} matchedCount Number of documents matched for update.\n * @property {number} modifiedCount Number of documents modified.\n * @property {number} deletedCount Number of documents deleted.\n * @property {number} upsertedCount Number of documents upserted.\n * @property {object} insertedIds Inserted document generated Id's, hash key is the index of the originating operation\n * @property {object} upsertedIds Upserted document generated Id's, hash key is the index of the originating operation\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~bulkWriteOpCallback\n * @param {BulkWriteError} error An error instance representing the error during the execution.\n * @param {Collection~BulkWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Perform a bulkWrite operation without a fluent API\n *\n * Legal operation types are\n *\n *  { insertOne: { document: { a: 1 } } }\n *\n *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {}, update: {$set: {\"a.$[i].x\": 5}}, arrayFilters: [{ \"i.x\": 5 }]} }\n *\n *  { deleteOne: { filter: {c:1} } }\n *\n *  { deleteMany: { filter: {c:1} } }\n *\n *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true}}\n *\n * If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} operations Bulk operations to perform.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.ordered=true] Execute write operation in ordered or unordered fashion.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object[]} [options.arrayFilters] Determines which array elements to modify for update operation in MongoDB 3.6 or higher.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~bulkWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.bulkWrite = function(operations, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || { ordered: true };\n\n  if (!Array.isArray(operations)) {\n    throw MongoError.create({ message: 'operations must be an array of documents', driver: true });\n  }\n\n  const bulkWriteOperation = new BulkWriteOperation(this, operations, options);\n\n  return executeOperation(this.s.topology, bulkWriteOperation, callback);\n};\n\n/**\n * @typedef {Object} Collection~WriteOpResult\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~writeOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~WriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * @typedef {Object} Collection~insertWriteOpResult\n * @property {number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {Object.<Number, ObjectId>} insertedIds Map of the index of the inserted document to the id of the inserted document.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {number} result.ok Is 1 if the command executed correctly.\n * @property {number} result.n The total count of documents inserted.\n */\n\n/**\n * @typedef {Object} Collection~insertOneWriteOpResult\n * @property {number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {ObjectId} insertedId The driver generated ObjectId for the insert operation.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {number} result.ok Is 1 if the command executed correctly.\n * @property {number} result.n The total count of documents inserted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertOneWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertOneWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {(object|object[])} docs Documents to insert.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use insertOne, insertMany or bulkWrite\n */\nCollection.prototype.insert = deprecate(function(docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || { ordered: false };\n  docs = !Array.isArray(docs) ? [docs] : docs;\n\n  if (options.keepGoing === true) {\n    options.ordered = false;\n  }\n\n  return this.insertMany(docs, options, callback);\n}, 'collection.insert is deprecated. Use insertOne, insertMany or bulkWrite instead.');\n\n/**\n * @typedef {Object} Collection~updateWriteOpResult\n * @property {Object} result The raw result returned from MongoDB. Will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents scanned.\n * @property {Number} result.nModified The total count of documents modified.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} matchedCount The number of documents that matched the filter.\n * @property {Number} modifiedCount The number of documents that were modified.\n * @property {Number} upsertedCount The number of documents upserted.\n * @property {Object} upsertedId The upserted id.\n * @property {ObjectId} upsertedId._id The upserted _id returned from the server.\n * @property {Object} message The raw msg response wrapped in an internal class\n * @property {object[]} [ops] In a response to {@link Collection#replaceOne replaceOne}, contains the new value of the document on the server. This is the same document that was originally passed in, and is only here for legacy purposes.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~updateWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~updateWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Update a single document in a collection\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options] Optional settings.\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {object} [options.hint] An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.\n * @param {boolean} [options.upsert=false] When true, creates a new document if no document matches the query..\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.updateOne = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(\n    this.s.topology,\n    new UpdateOneOperation(this, filter, update, options),\n    callback\n  );\n};\n\n/**\n * Replace a document in a collection with another document\n * @method\n * @param {object} filter The Filter used to select the document to replace\n * @param {object} doc The Document that replaces the matching document\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {object} [options.hint] An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.\n * @param {boolean} [options.upsert=false] When true, creates a new document if no document matches the query.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise<Collection~updateWriteOpResult>} returns Promise if no callback passed\n */\nCollection.prototype.replaceOne = function(filter, doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(\n    this.s.topology,\n    new ReplaceOneOperation(this, filter, doc, options),\n    callback\n  );\n};\n\n/**\n * Update multiple documents in a collection\n * @method\n * @param {object} filter The Filter used to select the documents to update\n * @param {object} update The update operations to be applied to the documents\n * @param {object} [options] Optional settings.\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {object} [options.hint] An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.\n * @param {boolean} [options.upsert=false] When true, creates a new document if no document matches the query..\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise<Collection~updateWriteOpResult>} returns Promise if no callback passed\n */\nCollection.prototype.updateMany = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(\n    this.s.topology,\n    new UpdateManyOperation(this, filter, update, options),\n    callback\n  );\n};\n\n/**\n * Updates documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} update The update operations to be applied to the documents\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {boolean} [options.multi=false] Update one/all documents with operation.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {object} [options.hint] An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use updateOne, updateMany or bulkWrite\n */\nCollection.prototype.update = deprecate(function(selector, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeLegacyOperation(this.s.topology, updateDocuments, [\n    this,\n    selector,\n    update,\n    options,\n    callback\n  ]);\n}, 'collection.update is deprecated. Use updateOne, updateMany, or bulkWrite instead.');\n\n/**\n * @typedef {Object} Collection~deleteWriteOpResult\n * @property {Object} result The raw result returned from MongoDB. Will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents deleted.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} deletedCount The number of documents deleted.\n */\n\n/**\n * The callback format for deletes\n * @callback Collection~deleteWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~deleteWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Delete a document from a collection\n * @method\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options] Optional settings.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {string|object} [options.hint] optional index hint for optimizing the filter query\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteOne = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  const deleteOneOperation = new DeleteOneOperation(this, filter, options);\n\n  return executeOperation(this.s.topology, deleteOneOperation, callback);\n};\n\nCollection.prototype.removeOne = Collection.prototype.deleteOne;\n\n/**\n * Delete multiple documents from a collection\n * @method\n * @param {object} filter The Filter used to select the documents to remove\n * @param {object} [options] Optional settings.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {string|object} [options.hint] optional index hint for optimizing the filter query\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteMany = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  const deleteManyOperation = new DeleteManyOperation(this, filter, options);\n\n  return executeOperation(this.s.topology, deleteManyOperation, callback);\n};\n\nCollection.prototype.removeMany = Collection.prototype.deleteMany;\n\n/**\n * Remove documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} [options] Optional settings.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.single=false] Removes the first document found.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use deleteOne, deleteMany or bulkWrite\n */\nCollection.prototype.remove = deprecate(function(selector, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeLegacyOperation(this.s.topology, removeDocuments, [\n    this,\n    selector,\n    options,\n    callback\n  ]);\n}, 'collection.remove is deprecated. Use deleteOne, deleteMany, or bulkWrite instead.');\n\n/**\n * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic\n * operators and update instead for more efficient operations.\n * @method\n * @param {object} doc Document to save\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use insertOne, insertMany, updateOne or updateMany\n */\nCollection.prototype.save = deprecate(function(doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeLegacyOperation(this.s.topology, save, [this, doc, options, callback]);\n}, 'collection.save is deprecated. Use insertOne, insertMany, updateOne, or updateMany instead.');\n\n/**\n * The callback format for results\n * @callback Collection~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * The callback format for an aggregation call\n * @callback Collection~aggregationCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {AggregationCursor} cursor The cursor if the aggregation command was executed successfully.\n */\n\n/**\n * Fetches the first document that matches the query\n * @method\n * @param {object} query Query for find Operation\n * @param {object} [options] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.projection] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n * @param {object} [options.fields] **Deprecated** Use `options.projection` instead\n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.snapshot=false] DEPRECATED: Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {number} [options.batchSize=1] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan] DEPRECATED: Limit the number of items to scan.\n * @param {number} [options.min] Set index bounds.\n * @param {number} [options.max] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOne = deprecateOptions(\n  {\n    name: 'collection.find',\n    deprecatedOptions: DEPRECATED_FIND_OPTIONS,\n    optionsIndex: 1\n  },\n  function(query, options, callback) {\n    if (typeof callback === 'object') {\n      // TODO(MAJOR): throw in the future\n      console.warn('Third parameter to `findOne()` must be a callback or undefined');\n    }\n\n    if (typeof query === 'function') (callback = query), (query = {}), (options = {});\n    if (typeof options === 'function') (callback = options), (options = {});\n    query = query || {};\n    options = options || {};\n\n    const findOneOperation = new FindOneOperation(this, query, options);\n\n    return executeOperation(this.s.topology, findOneOperation, callback);\n  }\n);\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Collection~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * Rename the collection.\n *\n * @method\n * @param {string} newName New name of of the collection.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.rename = function(newName, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options, { readPreference: ReadPreference.PRIMARY });\n\n  const renameOperation = new RenameOperation(this, newName, options);\n\n  return executeOperation(this.s.topology, renameOperation, callback);\n};\n\n/**\n * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.drop = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const dropCollectionOperation = new DropCollectionOperation(\n    this.s.db,\n    this.collectionName,\n    options\n  );\n\n  return executeOperation(this.s.topology, dropCollectionOperation, callback);\n};\n\n/**\n * Returns the options of the collection.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.options = function(opts, callback) {\n  if (typeof opts === 'function') (callback = opts), (opts = {});\n  opts = opts || {};\n\n  const optionsOperation = new OptionsOperation(this, opts);\n\n  return executeOperation(this.s.topology, optionsOperation, callback);\n};\n\n/**\n * Returns if the collection is a capped collection\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.isCapped = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const isCappedOperation = new IsCappedOperation(this, options);\n\n  return executeOperation(this.s.topology, isCappedOperation, callback);\n};\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {(string|array|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {string} [options.name] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {(number|string)} [options.commitQuorum] (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @example\n * const collection = client.db('foo').collection('bar');\n *\n * await collection.createIndex({ a: 1, b: -1 });\n *\n * // Alternate syntax for { c: 1, d: -1 } that ensures order of indexes\n * await collection.createIndex([ [c, 1], [d, -1] ]);\n *\n * // Equivalent to { e: 1 }\n * await collection.createIndex('e');\n *\n * // Equivalent to { f: 1, g: 1 }\n * await collection.createIndex(['f', 'g'])\n *\n * // Equivalent to { h: 1, i: -1 }\n * await collection.createIndex([ { h: 1 }, { i: -1 } ]);\n *\n * // Equivalent to { j: 1, k: -1, l: 2d }\n * await collection.createIndex(['j', ['k', -1], { l: '2d' }])\n */\nCollection.prototype.createIndex = function(fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const createIndexesOperation = new CreateIndexesOperation(\n    this,\n    this.collectionName,\n    fieldOrSpec,\n    options\n  );\n\n  return executeOperation(this.s.topology, createIndexesOperation, callback);\n};\n\n/**\n * @typedef {object} Collection~IndexDefinition\n * @description A definition for an index. Used by the createIndex command.\n * @see https://docs.mongodb.com/manual/reference/command/createIndexes/\n */\n\n/**\n * Creates multiple indexes in the collection, this method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error.\n *\n * **Note**: Unlike {@link Collection#createIndex createIndex}, this function takes in raw index specifications.\n * Index specifications are defined {@link http://docs.mongodb.org/manual/reference/command/createIndexes/ here}.\n *\n * @method\n * @param {Collection~IndexDefinition[]} indexSpecs An array of index specifications to be created\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {(number|string)} [options.commitQuorum] (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @example\n * const collection = client.db('foo').collection('bar');\n * await collection.createIndexes([\n *   // Simple index on field fizz\n *   {\n *     key: { fizz: 1 },\n *   }\n *   // wildcard index\n *   {\n *     key: { '$**': 1 }\n *   },\n *   // named index on darmok and jalad\n *   {\n *     key: { darmok: 1, jalad: -1 }\n *     name: 'tanagra'\n *   }\n * ]);\n */\nCollection.prototype.createIndexes = function(indexSpecs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n\n  options = options ? Object.assign({}, options) : {};\n\n  if (typeof options.maxTimeMS !== 'number') delete options.maxTimeMS;\n\n  const createIndexesOperation = new CreateIndexesOperation(\n    this,\n    this.collectionName,\n    indexSpecs,\n    options\n  );\n\n  return executeOperation(this.s.topology, createIndexesOperation, callback);\n};\n\n/**\n * Drops an index from this collection.\n * @method\n * @param {string} indexName Name of the index to drop.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndex = function(indexName, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  options = args.length ? args.shift() || {} : {};\n  // Run only against primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  const dropIndexOperation = new DropIndexOperation(this, indexName, options);\n\n  return executeOperation(this.s.topology, dropIndexOperation, callback);\n};\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndexes = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? Object.assign({}, options) : {};\n\n  if (typeof options.maxTimeMS !== 'number') delete options.maxTimeMS;\n\n  const dropIndexesOperation = new DropIndexesOperation(this, options);\n\n  return executeOperation(this.s.topology, dropIndexesOperation, callback);\n};\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @deprecated use dropIndexes\n * @param {Collection~resultCallback} callback The command result callback\n * @return {Promise} returns Promise if no [callback] passed\n */\nCollection.prototype.dropAllIndexes = deprecate(\n  Collection.prototype.dropIndexes,\n  'collection.dropAllIndexes is deprecated. Use dropIndexes instead.'\n);\n\n/**\n * Reindex all indexes on the collection\n * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n * @method\n * @deprecated use db.command instead\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.reIndex = deprecate(function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const reIndexOperation = new ReIndexOperation(this, options);\n\n  return executeOperation(this.s.topology, reIndexOperation, callback);\n}, 'collection.reIndex is deprecated. Use db.command instead.');\n\n/**\n * Get the list of all indexes information for the collection.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {number} [options.batchSize=1000] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {CommandCursor}\n */\nCollection.prototype.listIndexes = function(options) {\n  const cursor = new CommandCursor(\n    this.s.topology,\n    new ListIndexesOperation(this, options),\n    options\n  );\n\n  return cursor;\n};\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated use createIndexes instead\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.ensureIndex = deprecate(function(fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.s.topology, ensureIndex, [\n    this,\n    fieldOrSpec,\n    options,\n    callback\n  ]);\n}, 'collection.ensureIndex is deprecated. Use createIndexes instead.');\n\n/**\n * Checks if one or more indexes exist on the collection, fails on first non-existing index\n * @method\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexExists = function(indexes, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const indexExistsOperation = new IndexExistsOperation(this, indexes, options);\n\n  return executeOperation(this.s.topology, indexExistsOperation, callback);\n};\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexInformation = function(options, callback) {\n  const args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  const indexInformationOperation = new IndexInformationOperation(\n    this.s.db,\n    this.collectionName,\n    options\n  );\n\n  return executeOperation(this.s.topology, indexInformationOperation, callback);\n};\n\n/**\n * The callback format for results\n * @callback Collection~countCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} result The count of documents that matched the query.\n */\n\n/**\n * An estimated count of matching documents in the db to a query.\n *\n * **NOTE:** This method has been deprecated, since it does not provide an accurate count of the documents\n * in a collection. To obtain an accurate count of documents in the collection, use {@link Collection#countDocuments countDocuments}.\n * To obtain an estimated count of all documents in the collection, use {@link Collection#estimatedDocumentCount estimatedDocumentCount}.\n *\n * @method\n * @param {object} [query={}] The query for the count.\n * @param {object} [options] Optional settings.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {boolean} [options.limit] The limit of documents to count.\n * @param {boolean} [options.skip] The number of documents to skip for the count.\n * @param {string} [options.hint] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~countCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use {@link Collection#countDocuments countDocuments} or {@link Collection#estimatedDocumentCount estimatedDocumentCount} instead\n */\nCollection.prototype.count = deprecate(function(query, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  query = args.length ? args.shift() || {} : {};\n  options = args.length ? args.shift() || {} : {};\n\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(\n    this.s.topology,\n    new EstimatedDocumentCountOperation(this, query, options),\n    callback\n  );\n}, 'collection.count is deprecated, and will be removed in a future version.' +\n  ' Use Collection.countDocuments or Collection.estimatedDocumentCount instead');\n\n/**\n * Gets an estimate of the count of documents in a collection using collection metadata.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the operation to run.\n * @param {Collection~countCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed.\n */\nCollection.prototype.estimatedDocumentCount = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const estimatedDocumentCountOperation = new EstimatedDocumentCountOperation(this, options);\n\n  return executeOperation(this.s.topology, estimatedDocumentCountOperation, callback);\n};\n\n/**\n * Gets the number of documents matching the filter.\n * For a fast count of the total documents in a collection see {@link Collection#estimatedDocumentCount estimatedDocumentCount}.\n * **Note**: When migrating from {@link Collection#count count} to {@link Collection#countDocuments countDocuments}\n * the following query operators must be replaced:\n *\n * | Operator | Replacement |\n * | -------- | ----------- |\n * | `$where`   | [`$expr`][1] |\n * | `$near`    | [`$geoWithin`][2] with [`$center`][3] |\n * | `$nearSphere` | [`$geoWithin`][2] with [`$centerSphere`][4] |\n *\n * [1]: https://docs.mongodb.com/manual/reference/operator/query/expr/\n * [2]: https://docs.mongodb.com/manual/reference/operator/query/geoWithin/\n * [3]: https://docs.mongodb.com/manual/reference/operator/query/center/#op._S_center\n * [4]: https://docs.mongodb.com/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n *\n * @param {object} [query] the query for the count\n * @param {object} [options] Optional settings.\n * @param {object} [options.collation] Specifies a collation.\n * @param {string|object} [options.hint] The index to use.\n * @param {number} [options.limit] The maximum number of document to count.\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the operation to run.\n * @param {number} [options.skip] The number of documents to skip before counting.\n * @param {Collection~countCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed.\n * @see https://docs.mongodb.com/manual/reference/operator/query/expr/\n * @see https://docs.mongodb.com/manual/reference/operator/query/geoWithin/\n * @see https://docs.mongodb.com/manual/reference/operator/query/center/#op._S_center\n * @see https://docs.mongodb.com/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n */\n\nCollection.prototype.countDocuments = function(query, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  query = args.length ? args.shift() || {} : {};\n  options = args.length ? args.shift() || {} : {};\n\n  const countDocumentsOperation = new CountDocumentsOperation(this, query, options);\n\n  return executeOperation(this.s.topology, countDocumentsOperation, callback);\n};\n\n/**\n * The distinct command returns a list of distinct values for the given key across a collection.\n * @method\n * @param {string} key Field of the document to find distinct values for.\n * @param {object} [query] The query for filtering the set of documents to which we apply the distinct filter.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.distinct = function(key, query, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  const queryOption = args.length ? args.shift() || {} : {};\n  const optionsOption = args.length ? args.shift() || {} : {};\n\n  const distinctOperation = new DistinctOperation(this, key, queryOption, optionsOption);\n\n  return executeOperation(this.s.topology, distinctOperation, callback);\n};\n\n/**\n * Retrieve all the indexes on the collection.\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexes = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const indexesOperation = new IndexesOperation(this, options);\n\n  return executeOperation(this.s.topology, indexesOperation, callback);\n};\n\n/**\n * Get all the collection statistics.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {number} [options.scale] Divide the returned sizes by scale value.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.stats = function(options, callback) {\n  const args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  const statsOperation = new StatsOperation(this, options);\n\n  return executeOperation(this.s.topology, statsOperation, callback);\n};\n\n/**\n * @typedef {Object} Collection~findAndModifyWriteOpResult\n * @property {object} value Document returned from the `findAndModify` command. If no documents were found, `value` will be `null` by default (`returnOriginal: true`), even if a document was upserted; if `returnOriginal` was false, the upserted document will be returned in that case.\n * @property {object} lastErrorObject The raw lastErrorObject returned from the command. See {@link https://docs.mongodb.com/manual/reference/command/findAndModify/index.html#lasterrorobject|findAndModify command documentation}.\n * @property {Number} ok Is 1 if the command executed correctly.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~findAndModifyCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~findAndModifyWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Find a document and delete it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options] Optional settings.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {object} [options.projection] Limits the fields to return for all matching documents.\n * @param {object} [options.sort] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise<Collection~findAndModifyWriteOpResultObject>} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndDelete = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(\n    this.s.topology,\n    new FindOneAndDeleteOperation(this, filter, options),\n    callback\n  );\n};\n\n/**\n * Find a document and replace it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter The Filter used to select the document to replace\n * @param {object} replacement The Document that replaces the matching document\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {string|object} [options.hint] An optional index to use for this operation\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the query to run.\n * @param {object} [options.projection] Limits the fields to return for all matching documents.\n * @param {object} [options.sort] Determines which document the operation modifies if the query selects multiple documents.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise<Collection~findAndModifyWriteOpResultObject>} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndReplace = function(filter, replacement, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(\n    this.s.topology,\n    new FindOneAndReplaceOperation(this, filter, replacement, options),\n    callback\n  );\n};\n\n/**\n * Find a document and update it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update Update operations to be performed on the document\n * @param {object} [options] Optional settings.\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {string|object} [options.hint] An optional index to use for this operation\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the query to run.\n * @param {object} [options.projection] Limits the fields to return for all matching documents.\n * @param {object} [options.sort] Determines which document the operation modifies if the query selects multiple documents.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {boolean} [options.checkKeys=false] If true, will throw if bson documents start with `$` or include a `.` in any key value\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] An ptional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise<Collection~findAndModifyWriteOpResultObject>} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndUpdate = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndefined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(\n    this.s.topology,\n    new FindOneAndUpdateOperation(this, filter, update, options),\n    callback\n  );\n};\n\n/**\n * Find and update a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.remove=false] Set to true to remove the object before returning.\n * @param {boolean} [options.upsert=false] Perform an upsert operation.\n * @param {boolean} [options.new=false] Set to true if you want to return the modified object rather than the original. Ignored for remove.\n * @param {object} [options.projection] Object containing the field projection for the result returned from the operation.\n * @param {object} [options.fields] **Deprecated** Use `options.projection` instead\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {Collection~findAndModifyCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead\n */\nCollection.prototype.findAndModify = deprecate(\n  _findAndModify,\n  'collection.findAndModify is deprecated. Use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead.'\n);\n\n/**\n * @ignore\n */\n\nCollection.prototype._findAndModify = _findAndModify;\n\nfunction _findAndModify(query, sort, doc, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  sort = args.length ? args.shift() || [] : [];\n  doc = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Clone options\n  options = Object.assign({}, options);\n  // Force read preference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  return executeOperation(\n    this.s.topology,\n    new FindAndModifyOperation(this, query, sort, doc, options),\n    callback\n  );\n}\n\n/**\n * Find and remove a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndDelete instead\n */\nCollection.prototype.findAndRemove = deprecate(function(query, sort, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  sort = args.length ? args.shift() || [] : [];\n  options = args.length ? args.shift() || {} : {};\n\n  // Add the remove option\n  options.remove = true;\n\n  return executeOperation(\n    this.s.topology,\n    new FindAndModifyOperation(this, query, sort, null, options),\n    callback\n  );\n}, 'collection.findAndRemove is deprecated. Use findOneAndDelete instead.');\n\n/**\n * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\n * @method\n * @param {object} [pipeline=[]] Array containing all the aggregation framework commands for the execution.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.cursor] Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n * @param {number} [options.cursor.batchSize=1000] Deprecated. Use `options.batchSize`\n * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).\n * @param {number} [options.maxTimeMS] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {string} [options.comment] Add a comment to an aggregation command\n * @param {string|object} [options.hint] Add an index selection hint to an aggregation command\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~aggregationCallback} callback The command result callback\n * @return {(null|AggregationCursor)}\n */\nCollection.prototype.aggregate = function(pipeline, options, callback) {\n  if (Array.isArray(pipeline)) {\n    // Set up callback if one is provided\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    // If we have no options or callback we are doing\n    // a cursor based aggregation\n    if (options == null && callback == null) {\n      options = {};\n    }\n  } else {\n    // Aggregation pipeline passed as arguments on the method\n    const args = Array.prototype.slice.call(arguments, 0);\n    // Get the callback\n    callback = args.pop();\n    // Get the possible options object\n    const opts = args[args.length - 1];\n    // If it contains any of the admissible options pop it of the args\n    options =\n      opts &&\n      (opts.readPreference ||\n        opts.explain ||\n        opts.cursor ||\n        opts.out ||\n        opts.maxTimeMS ||\n        opts.hint ||\n        opts.allowDiskUse)\n        ? args.pop()\n        : {};\n    // Left over arguments is the pipeline\n    pipeline = args;\n  }\n\n  const cursor = new AggregationCursor(\n    this.s.topology,\n    new AggregateOperation(this, pipeline, options),\n    options\n  );\n\n  // TODO: remove this when NODE-2074 is resolved\n  if (typeof callback === 'function') {\n    callback(null, cursor);\n    return;\n  }\n\n  return cursor;\n};\n\n/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this collection.\n * @method\n * @since 3.0.0\n * @param {Array} [pipeline] An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n * @param {object} [options] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {object} [options.resumeAfter] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {number} [options.batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference] The read preference. Defaults to the read preference of the database or collection. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @param {Timestamp} [options.startAtOperationTime] receive change events that occur after the specified timestamp\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {ChangeStream} a ChangeStream instance.\n */\nCollection.prototype.watch = function(pipeline, options) {\n  pipeline = pipeline || [];\n  options = options || {};\n\n  // Allow optionally not specifying a pipeline\n  if (!Array.isArray(pipeline)) {\n    options = pipeline;\n    pipeline = [];\n  }\n\n  return new ChangeStream(this, pipeline, options);\n};\n\n/**\n * The callback format for results\n * @callback Collection~parallelCollectionScanCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Cursor[]} cursors A list of cursors returned allowing for parallel reading of collection.\n */\n\n/**\n * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\n * no ordering guarantees for returned results.\n * @method\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.batchSize=1000] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {number} [options.numCursors=1] The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)\n * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents.\n * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.parallelCollectionScan = deprecate(function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = { numCursors: 1 });\n  // Set number of cursors to 1\n  options.numCursors = options.numCursors || 1;\n  options.batchSize = options.batchSize || 1000;\n\n  options = Object.assign({}, options);\n  // Ensure we have the right read preference inheritance\n  options.readPreference = ReadPreference.resolve(this, options);\n\n  // Add a promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  if (options.session) {\n    options.session = undefined;\n  }\n\n  return executeLegacyOperation(\n    this.s.topology,\n    parallelCollectionScan,\n    [this, options, callback],\n    { skipSessions: true }\n  );\n}, 'parallelCollectionScan is deprecated in MongoDB v4.1');\n\n/**\n * Execute a geo search using a geo haystack index on a collection.\n *\n * @method\n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxDistance] Include results up to maxDistance from the point.\n * @param {object} [options.search] Filter the results by a query.\n * @param {number} [options.limit=false] Max number of results to return.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated See {@link https://docs.mongodb.com/manual/geospatial-queries/|geospatial queries docs} for current geospatial support\n */\nCollection.prototype.geoHaystackSearch = deprecate(function(x, y, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  const geoHaystackSearchOperation = new GeoHaystackSearchOperation(this, x, y, options);\n\n  return executeOperation(this.s.topology, geoHaystackSearchOperation, callback);\n}, 'geoHaystackSearch is deprecated, and will be removed in a future version.');\n\n/**\n * Run a group command across a collection\n *\n * @method\n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated MongoDB 3.6 or higher no longer supports the group command. We recommend rewriting using the aggregation framework.\n */\nCollection.prototype.group = deprecate(function(\n  keys,\n  condition,\n  initial,\n  reduce,\n  finalize,\n  command,\n  options,\n  callback\n) {\n  const args = Array.prototype.slice.call(arguments, 3);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  reduce = args.length ? args.shift() : null;\n  finalize = args.length ? args.shift() : null;\n  command = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Make sure we are backward compatible\n  if (!(typeof finalize === 'function')) {\n    command = finalize;\n    finalize = null;\n  }\n\n  if (\n    !Array.isArray(keys) &&\n    keys instanceof Object &&\n    typeof keys !== 'function' &&\n    !(keys._bsontype === 'Code')\n  ) {\n    keys = Object.keys(keys);\n  }\n\n  if (typeof reduce === 'function') {\n    reduce = reduce.toString();\n  }\n\n  if (typeof finalize === 'function') {\n    finalize = finalize.toString();\n  }\n\n  // Set up the command as default\n  command = command == null ? true : command;\n\n  return executeLegacyOperation(this.s.topology, group, [\n    this,\n    keys,\n    condition,\n    initial,\n    reduce,\n    finalize,\n    command,\n    options,\n    callback\n  ]);\n},\n'MongoDB 3.6 or higher no longer supports the group command. We recommend rewriting using the aggregation framework.');\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @method\n * @param {(function|string)} map The mapping function.\n * @param {(function|string)} reduce The reduce function.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.out] Sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*\n * @param {object} [options.query] Query filter object.\n * @param {object} [options.sort] Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n * @param {number} [options.limit] Number of objects to return from collection.\n * @param {boolean} [options.keeptemp=false] Keep temporary data.\n * @param {(function|string)} [options.finalize] Finalize function.\n * @param {object} [options.scope] Can pass in variables that can be access from map/reduce/finalize.\n * @param {boolean} [options.jsMode=false] It is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\n * @param {boolean} [options.verbose=false] Provide statistics on job execution time.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.mapReduce = function(map, reduce, options, callback) {\n  if ('function' === typeof options) (callback = options), (options = {});\n  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)\n  if (null == options.out) {\n    throw new Error(\n      'the out option parameter must be defined, see mongodb docs for possible values'\n    );\n  }\n\n  if ('function' === typeof map) {\n    map = map.toString();\n  }\n\n  if ('function' === typeof reduce) {\n    reduce = reduce.toString();\n  }\n\n  if ('function' === typeof options.finalize) {\n    options.finalize = options.finalize.toString();\n  }\n  const mapReduceOperation = new MapReduceOperation(this, map, reduce, options);\n\n  return executeOperation(this.s.topology, mapReduceOperation, callback);\n};\n\n/**\n * Initiate an Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {UnorderedBulkOperation}\n */\nCollection.prototype.initializeUnorderedBulkOp = function(options) {\n  options = options || {};\n  // Give function's options precedence over session options.\n  if (options.ignoreUndefined == null) {\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  options.promiseLibrary = this.s.promiseLibrary;\n  return unordered(this.s.topology, this, options);\n};\n\n/**\n * Initiate an In order bulk write operation. Operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {OrderedBulkOperation} callback The command result callback\n * @return {null}\n */\nCollection.prototype.initializeOrderedBulkOp = function(options) {\n  options = options || {};\n  // Give function's options precedence over session's options.\n  if (options.ignoreUndefined == null) {\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n  options.promiseLibrary = this.s.promiseLibrary;\n  return ordered(this.s.topology, this, options);\n};\n\n/**\n * Return the db logger\n * @method\n * @return {Logger} return the db logger\n * @ignore\n */\nCollection.prototype.getLogger = function() {\n  return this.s.db.s.logger;\n};\n\nmodule.exports = Collection;\n","'use strict';\n\nconst ReadPreference = require('./core').ReadPreference;\nconst MongoError = require('./core').MongoError;\nconst Cursor = require('./cursor');\nconst CursorState = require('./core/cursor').CursorState;\n\n/**\n * @fileOverview The **CommandCursor** class is an internal class that embodies a\n * generalized cursor based on a MongoDB command allowing for iteration over the\n * results returned. It supports one by one document iteration, conversion to an\n * array or can be iterated as a Node 0.10.X or higher stream\n *\n * **CommandCursor Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('listCollectionsExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // List the database collections available\n *     db.listCollections().toArray(function(err, items) {\n *       test.equal(null, err);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the browser.\n * @external Readable\n */\n\n/**\n * Creates a new Command Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class CommandCursor\n * @extends external:Readable\n * @fires CommandCursor#data\n * @fires CommandCursor#end\n * @fires CommandCursor#close\n * @fires CommandCursor#readable\n * @return {CommandCursor} an CommandCursor instance.\n */\nclass CommandCursor extends Cursor {\n  constructor(topology, ns, cmd, options) {\n    super(topology, ns, cmd, options);\n  }\n\n  /**\n   * Set the ReadPreference for the cursor.\n   * @method\n   * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  setReadPreference(readPreference) {\n    if (this.s.state === CursorState.CLOSED || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (this.s.state !== CursorState.INIT) {\n      throw MongoError.create({\n        message: 'cannot change cursor readPreference after cursor has been accessed',\n        driver: true\n      });\n    }\n\n    if (readPreference instanceof ReadPreference) {\n      this.options.readPreference = readPreference;\n    } else if (typeof readPreference === 'string') {\n      this.options.readPreference = new ReadPreference(readPreference);\n    } else {\n      throw new TypeError('Invalid read preference: ' + readPreference);\n    }\n\n    return this;\n  }\n\n  /**\n   * Set the batch size for the cursor.\n   * @method\n   * @param {number} value The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/find/|find command documentation}.\n   * @throws {MongoError}\n   * @return {CommandCursor}\n   */\n  batchSize(value) {\n    if (this.s.state === CursorState.CLOSED || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (typeof value !== 'number') {\n      throw MongoError.create({ message: 'batchSize requires an integer', driver: true });\n    }\n\n    if (this.cmd.cursor) {\n      this.cmd.cursor.batchSize = value;\n    }\n\n    this.setCursorBatchSize(value);\n    return this;\n  }\n\n  /**\n   * Add a maxTimeMS stage to the aggregation pipeline\n   * @method\n   * @param {number} value The state maxTimeMS value.\n   * @return {CommandCursor}\n   */\n  maxTimeMS(value) {\n    if (this.topology.lastIsMaster().minWireVersion > 2) {\n      this.cmd.maxTimeMS = value;\n    }\n\n    return this;\n  }\n\n  /**\n   * Return the cursor logger\n   * @method\n   * @return {Logger} return the cursor logger\n   * @ignore\n   */\n  getLogger() {\n    return this.logger;\n  }\n}\n\n// aliases\nCommandCursor.prototype.get = CommandCursor.prototype.toArray;\n\n/**\n * CommandCursor stream data event, fired for each document in the cursor.\n *\n * @event CommandCursor#data\n * @type {object}\n */\n\n/**\n * CommandCursor stream end event\n *\n * @event CommandCursor#end\n * @type {null}\n */\n\n/**\n * CommandCursor stream close event\n *\n * @event CommandCursor#close\n * @type {null}\n */\n\n/**\n * CommandCursor stream readable event\n *\n * @event CommandCursor#readable\n * @type {null}\n */\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @function CommandCursor.prototype.next\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Check if there is any document still available in the cursor\n * @function CommandCursor.prototype.hasNext\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback CommandCursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previously accessed.\n * @method CommandCursor.prototype.toArray\n * @param {CommandCursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback CommandCursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previously accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method CommandCursor.prototype.each\n * @param {CommandCursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method CommandCursor.prototype.close\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Is the cursor closed\n * @method CommandCursor.prototype.isClosed\n * @return {boolean}\n */\n\n/**\n * Clone the cursor\n * @function CommandCursor.prototype.clone\n * @return {CommandCursor}\n */\n\n/**\n * Resets the cursor\n * @function CommandCursor.prototype.rewind\n * @return {CommandCursor}\n */\n\n/**\n * The callback format for the forEach iterator method\n * @callback CommandCursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback CommandCursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/*\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method CommandCursor.prototype.forEach\n * @param {CommandCursor~iteratorCallback} iterator The iteration callback.\n * @param {CommandCursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\n\nmodule.exports = CommandCursor;\n","'use strict';\n\nmodule.exports = {\n  SYSTEM_NAMESPACE_COLLECTION: 'system.namespaces',\n  SYSTEM_INDEX_COLLECTION: 'system.indexes',\n  SYSTEM_PROFILE_COLLECTION: 'system.profile',\n  SYSTEM_USER_COLLECTION: 'system.users',\n  SYSTEM_COMMAND_COLLECTION: '$cmd',\n  SYSTEM_JS_COLLECTION: 'system.js'\n};\n","'use strict';\n\n/**\n * Context used during authentication\n *\n * @property {Connection} connection The connection to authenticate\n * @property {MongoCredentials} credentials The credentials to use for authentication\n * @property {object} options The options passed to the `connect` method\n * @property {object?} response The response of the initial handshake\n * @property {Buffer?} nonce A random nonce generated for use in an authentication conversation\n */\nclass AuthContext {\n  constructor(connection, credentials, options) {\n    this.connection = connection;\n    this.credentials = credentials;\n    this.options = options;\n  }\n}\n\nclass AuthProvider {\n  constructor(bson) {\n    this.bson = bson;\n  }\n\n  /**\n   * Prepare the handshake document before the initial handshake.\n   *\n   * @param {object} handshakeDoc The document used for the initial handshake on a connection\n   * @param {AuthContext} authContext Context for authentication flow\n   * @param {function} callback\n   */\n  prepare(handshakeDoc, context, callback) {\n    callback(undefined, handshakeDoc);\n  }\n\n  /**\n   * Authenticate\n   *\n   * @param {AuthContext} context A shared context for authentication flow\n   * @param {authResultCallback} callback The callback to return the result from the authentication\n   */\n  auth(context, callback) {\n    callback(new TypeError('`auth` method must be overridden by subclass'));\n  }\n}\n\n/**\n * This is a result from an authentication provider\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = { AuthContext, AuthProvider };\n","'use strict';\n\nconst MongoCR = require('./mongocr');\nconst X509 = require('./x509');\nconst Plain = require('./plain');\nconst GSSAPI = require('./gssapi');\nconst ScramSHA1 = require('./scram').ScramSHA1;\nconst ScramSHA256 = require('./scram').ScramSHA256;\nconst MongoDBAWS = require('./mongodb_aws');\n\n/**\n * Returns the default authentication providers.\n *\n * @param {BSON} bson Bson definition\n * @returns {Object} a mapping of auth names to auth types\n */\nfunction defaultAuthProviders(bson) {\n  return {\n    'mongodb-aws': new MongoDBAWS(bson),\n    mongocr: new MongoCR(bson),\n    x509: new X509(bson),\n    plain: new Plain(bson),\n    gssapi: new GSSAPI(bson),\n    'scram-sha-1': new ScramSHA1(bson),\n    'scram-sha-256': new ScramSHA256(bson)\n  };\n}\n\nmodule.exports = { defaultAuthProviders };\n","'use strict';\nconst dns = require('dns');\n\nconst AuthProvider = require('./auth_provider').AuthProvider;\nconst retrieveKerberos = require('../utils').retrieveKerberos;\nconst MongoError = require('../error').MongoError;\n\nlet kerberos;\n\nclass GSSAPI extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    if (credentials == null) return callback(new MongoError('credentials required'));\n    const username = credentials.username;\n    function externalCommand(command, cb) {\n      return connection.command('$external.$cmd', command, cb);\n    }\n    makeKerberosClient(authContext, (err, client) => {\n      if (err) return callback(err);\n      if (client == null) return callback(new MongoError('gssapi client missing'));\n      client.step('', (err, payload) => {\n        if (err) return callback(err);\n        externalCommand(saslStart(payload), (err, response) => {\n          if (err) return callback(err);\n          const result = response.result;\n          negotiate(client, 10, result.payload, (err, payload) => {\n            if (err) return callback(err);\n            externalCommand(saslContinue(payload, result.conversationId), (err, response) => {\n              if (err) return callback(err);\n              const result = response.result;\n              finalize(client, username, result.payload, (err, payload) => {\n                if (err) return callback(err);\n                externalCommand(\n                  {\n                    saslContinue: 1,\n                    conversationId: result.conversationId,\n                    payload\n                  },\n                  (err, result) => {\n                    if (err) return callback(err);\n                    callback(undefined, result);\n                  }\n                );\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n}\nmodule.exports = GSSAPI;\n\nfunction makeKerberosClient(authContext, callback) {\n  const host = authContext.options.host;\n  const port = authContext.options.port;\n  const credentials = authContext.credentials;\n  if (!host || !port || !credentials) {\n    return callback(\n      new MongoError(\n        `Connection must specify: ${host ? 'host' : ''}, ${port ? 'port' : ''}, ${\n          credentials ? 'host' : 'credentials'\n        }.`\n      )\n    );\n  }\n  if (kerberos == null) {\n    try {\n      kerberos = retrieveKerberos();\n    } catch (e) {\n      return callback(e);\n    }\n  }\n  const username = credentials.username;\n  const password = credentials.password;\n  const mechanismProperties = credentials.mechanismProperties;\n  const serviceName =\n    mechanismProperties['gssapiservicename'] ||\n    mechanismProperties['gssapiServiceName'] ||\n    'mongodb';\n  performGssapiCanonicalizeHostName(host, mechanismProperties, (err, host) => {\n    if (err) return callback(err);\n    const initOptions = {};\n    if (password != null) {\n      Object.assign(initOptions, { user: username, password: password });\n    }\n    kerberos.initializeClient(\n      `${serviceName}${process.platform === 'win32' ? '/' : '@'}${host}`,\n      initOptions,\n      (err, client) => {\n        if (err) return callback(new MongoError(err));\n        callback(null, client);\n      }\n    );\n  });\n}\n\nfunction saslStart(payload) {\n  return {\n    saslStart: 1,\n    mechanism: 'GSSAPI',\n    payload,\n    autoAuthorize: 1\n  };\n}\nfunction saslContinue(payload, conversationId) {\n  return {\n    saslContinue: 1,\n    conversationId,\n    payload\n  };\n}\nfunction negotiate(client, retries, payload, callback) {\n  client.step(payload, (err, response) => {\n    // Retries exhausted, raise error\n    if (err && retries === 0) return callback(err);\n    // Adjust number of retries and call step again\n    if (err) return negotiate(client, retries - 1, payload, callback);\n    // Return the payload\n    callback(undefined, response || '');\n  });\n}\nfunction finalize(client, user, payload, callback) {\n  // GSS Client Unwrap\n  client.unwrap(payload, (err, response) => {\n    if (err) return callback(err);\n    // Wrap the response\n    client.wrap(response || '', { user }, (err, wrapped) => {\n      if (err) return callback(err);\n      // Return the payload\n      callback(undefined, wrapped);\n    });\n  });\n}\nfunction performGssapiCanonicalizeHostName(host, mechanismProperties, callback) {\n  const canonicalizeHostName =\n    typeof mechanismProperties.gssapiCanonicalizeHostName === 'boolean'\n      ? mechanismProperties.gssapiCanonicalizeHostName\n      : false;\n  if (!canonicalizeHostName) return callback(undefined, host);\n  // Attempt to resolve the host name\n  dns.resolveCname(host, (err, r) => {\n    if (err) return callback(err);\n    // Get the first resolve host id\n    if (Array.isArray(r) && r.length > 0) {\n      return callback(undefined, r[0]);\n    }\n    callback(undefined, host);\n  });\n}\n","'use strict';\n\n// Resolves the default auth mechanism according to\n// https://github.com/mongodb/specifications/blob/master/source/auth/auth.rst\nfunction getDefaultAuthMechanism(ismaster) {\n  if (ismaster) {\n    // If ismaster contains saslSupportedMechs, use scram-sha-256\n    // if it is available, else scram-sha-1\n    if (Array.isArray(ismaster.saslSupportedMechs)) {\n      return ismaster.saslSupportedMechs.indexOf('SCRAM-SHA-256') >= 0\n        ? 'scram-sha-256'\n        : 'scram-sha-1';\n    }\n\n    // Fallback to legacy selection method. If wire version >= 3, use scram-sha-1\n    if (ismaster.maxWireVersion >= 3) {\n      return 'scram-sha-1';\n    }\n  }\n\n  // Default for wireprotocol < 3\n  return 'mongocr';\n}\n\n/**\n * A representation of the credentials used by MongoDB\n * @class\n * @property {string} mechanism The method used to authenticate\n * @property {string} [username] The username used for authentication\n * @property {string} [password] The password used for authentication\n * @property {string} [source] The database that the user should authenticate against\n * @property {object} [mechanismProperties] Special properties used by some types of auth mechanisms\n */\nclass MongoCredentials {\n  /**\n   * Creates a new MongoCredentials object\n   * @param {object} [options]\n   * @param {string} [options.username] The username used for authentication\n   * @param {string} [options.password] The password used for authentication\n   * @param {string} [options.source] The database that the user should authenticate against\n   * @param {string} [options.mechanism] The method used to authenticate\n   * @param {object} [options.mechanismProperties] Special properties used by some types of auth mechanisms\n   */\n  constructor(options) {\n    options = options || {};\n    this.username = options.username;\n    this.password = options.password;\n    this.source = options.source || options.db;\n    this.mechanism = options.mechanism || 'default';\n    this.mechanismProperties = options.mechanismProperties || {};\n\n    if (this.mechanism.match(/MONGODB-AWS/i)) {\n      if (this.username == null && process.env.AWS_ACCESS_KEY_ID) {\n        this.username = process.env.AWS_ACCESS_KEY_ID;\n      }\n\n      if (this.password == null && process.env.AWS_SECRET_ACCESS_KEY) {\n        this.password = process.env.AWS_SECRET_ACCESS_KEY;\n      }\n\n      if (this.mechanismProperties.AWS_SESSION_TOKEN == null && process.env.AWS_SESSION_TOKEN) {\n        this.mechanismProperties.AWS_SESSION_TOKEN = process.env.AWS_SESSION_TOKEN;\n      }\n    }\n\n    Object.freeze(this.mechanismProperties);\n    Object.freeze(this);\n  }\n\n  /**\n   * Determines if two MongoCredentials objects are equivalent\n   * @param {MongoCredentials} other another MongoCredentials object\n   * @returns {boolean} true if the two objects are equal.\n   */\n  equals(other) {\n    return (\n      this.mechanism === other.mechanism &&\n      this.username === other.username &&\n      this.password === other.password &&\n      this.source === other.source\n    );\n  }\n\n  /**\n   * If the authentication mechanism is set to \"default\", resolves the authMechanism\n   * based on the server version and server supported sasl mechanisms.\n   *\n   * @param {Object} [ismaster] An ismaster response from the server\n   * @returns {MongoCredentials}\n   */\n  resolveAuthMechanism(ismaster) {\n    // If the mechanism is not \"default\", then it does not need to be resolved\n    if (this.mechanism.match(/DEFAULT/i)) {\n      return new MongoCredentials({\n        username: this.username,\n        password: this.password,\n        source: this.source,\n        mechanism: getDefaultAuthMechanism(ismaster),\n        mechanismProperties: this.mechanismProperties\n      });\n    }\n\n    return this;\n  }\n}\n\nmodule.exports = { MongoCredentials };\n","'use strict';\n\nconst crypto = require('crypto');\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\nclass MongoCR extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const username = credentials.username;\n    const password = credentials.password;\n    const source = credentials.source;\n\n    connection.command(`${source}.$cmd`, { getnonce: 1 }, (err, result) => {\n      let nonce = null;\n      let key = null;\n\n      // Get nonce\n      if (err == null) {\n        const r = result.result;\n        nonce = r.nonce;\n        // Use node md5 generator\n        let md5 = crypto.createHash('md5');\n        // Generate keys used for authentication\n        md5.update(username + ':mongo:' + password, 'utf8');\n        const hash_password = md5.digest('hex');\n        // Final key\n        md5 = crypto.createHash('md5');\n        md5.update(nonce + username + hash_password, 'utf8');\n        key = md5.digest('hex');\n      }\n\n      const authenticateCommand = {\n        authenticate: 1,\n        user: username,\n        nonce,\n        key\n      };\n\n      connection.command(`${source}.$cmd`, authenticateCommand, callback);\n    });\n  }\n}\n\nmodule.exports = MongoCR;\n","'use strict';\nconst AuthProvider = require('./auth_provider').AuthProvider;\nconst MongoCredentials = require('./mongo_credentials').MongoCredentials;\nconst MongoError = require('../error').MongoError;\nconst crypto = require('crypto');\nconst http = require('http');\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst url = require('url');\n\nlet aws4;\ntry {\n  aws4 = require('aws4');\n} catch (e) {\n  // don't do anything;\n}\n\nconst ASCII_N = 110;\nconst AWS_RELATIVE_URI = 'http://169.254.170.2';\nconst AWS_EC2_URI = 'http://169.254.169.254';\nconst AWS_EC2_PATH = '/latest/meta-data/iam/security-credentials';\n\nclass MongoDBAWS extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n\n    if (maxWireVersion(connection) < 9) {\n      callback(new MongoError('MONGODB-AWS authentication requires MongoDB version 4.4 or later'));\n      return;\n    }\n\n    if (aws4 == null) {\n      callback(\n        new MongoError(\n          'MONGODB-AWS authentication requires the `aws4` module, please install it as a dependency of your project'\n        )\n      );\n\n      return;\n    }\n\n    if (credentials.username == null) {\n      makeTempCredentials(credentials, (err, tempCredentials) => {\n        if (err) return callback(err);\n\n        authContext.credentials = tempCredentials;\n        this.auth(authContext, callback);\n      });\n\n      return;\n    }\n\n    const username = credentials.username;\n    const password = credentials.password;\n    const db = credentials.source;\n    const token = credentials.mechanismProperties.AWS_SESSION_TOKEN;\n    const bson = this.bson;\n\n    crypto.randomBytes(32, (err, nonce) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const saslStart = {\n        saslStart: 1,\n        mechanism: 'MONGODB-AWS',\n        payload: bson.serialize({ r: nonce, p: ASCII_N })\n      };\n\n      connection.command(`${db}.$cmd`, saslStart, (err, result) => {\n        if (err) return callback(err);\n\n        const res = result.result;\n        const serverResponse = bson.deserialize(res.payload.buffer);\n        const host = serverResponse.h;\n        const serverNonce = serverResponse.s.buffer;\n        if (serverNonce.length !== 64) {\n          callback(\n            new MongoError(`Invalid server nonce length ${serverNonce.length}, expected 64`)\n          );\n          return;\n        }\n\n        if (serverNonce.compare(nonce, 0, nonce.length, 0, nonce.length) !== 0) {\n          callback(new MongoError('Server nonce does not begin with client nonce'));\n          return;\n        }\n\n        if (host.length < 1 || host.length > 255 || host.indexOf('..') !== -1) {\n          callback(new MongoError(`Server returned an invalid host: \"${host}\"`));\n          return;\n        }\n\n        const body = 'Action=GetCallerIdentity&Version=2011-06-15';\n        const options = aws4.sign(\n          {\n            method: 'POST',\n            host,\n            region: deriveRegion(serverResponse.h),\n            service: 'sts',\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              'Content-Length': body.length,\n              'X-MongoDB-Server-Nonce': serverNonce.toString('base64'),\n              'X-MongoDB-GS2-CB-Flag': 'n'\n            },\n            path: '/',\n            body\n          },\n          {\n            accessKeyId: username,\n            secretAccessKey: password,\n            token\n          }\n        );\n\n        const authorization = options.headers.Authorization;\n        const date = options.headers['X-Amz-Date'];\n        const payload = { a: authorization, d: date };\n        if (token) {\n          payload.t = token;\n        }\n\n        const saslContinue = {\n          saslContinue: 1,\n          conversationId: 1,\n          payload: bson.serialize(payload)\n        };\n\n        connection.command(`${db}.$cmd`, saslContinue, err => {\n          if (err) return callback(err);\n          callback();\n        });\n      });\n    });\n  }\n}\n\nfunction makeTempCredentials(credentials, callback) {\n  function done(creds) {\n    if (creds.AccessKeyId == null || creds.SecretAccessKey == null || creds.Token == null) {\n      callback(new MongoError('Could not obtain temporary MONGODB-AWS credentials'));\n      return;\n    }\n\n    callback(\n      undefined,\n      new MongoCredentials({\n        username: creds.AccessKeyId,\n        password: creds.SecretAccessKey,\n        source: credentials.source,\n        mechanism: 'MONGODB-AWS',\n        mechanismProperties: {\n          AWS_SESSION_TOKEN: creds.Token\n        }\n      })\n    );\n  }\n\n  // If the environment variable AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\n  // is set then drivers MUST assume that it was set by an AWS ECS agent\n  if (process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI) {\n    request(\n      `${AWS_RELATIVE_URI}${process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}`,\n      (err, res) => {\n        if (err) return callback(err);\n        done(res);\n      }\n    );\n\n    return;\n  }\n\n  // Otherwise assume we are on an EC2 instance\n\n  // get a token\n\n  request(\n    `${AWS_EC2_URI}/latest/api/token`,\n    { method: 'PUT', json: false, headers: { 'X-aws-ec2-metadata-token-ttl-seconds': 30 } },\n    (err, token) => {\n      if (err) return callback(err);\n\n      // get role name\n      request(\n        `${AWS_EC2_URI}/${AWS_EC2_PATH}`,\n        { json: false, headers: { 'X-aws-ec2-metadata-token': token } },\n        (err, roleName) => {\n          if (err) return callback(err);\n\n          // get temp credentials\n          request(\n            `${AWS_EC2_URI}/${AWS_EC2_PATH}/${roleName}`,\n            { headers: { 'X-aws-ec2-metadata-token': token } },\n            (err, creds) => {\n              if (err) return callback(err);\n              done(creds);\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction deriveRegion(host) {\n  const parts = host.split('.');\n  if (parts.length === 1 || parts[1] === 'amazonaws') {\n    return 'us-east-1';\n  }\n\n  return parts[1];\n}\n\nfunction request(uri, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = Object.assign(\n    {\n      method: 'GET',\n      timeout: 10000,\n      json: true\n    },\n    url.parse(uri),\n    options\n  );\n\n  const req = http.request(options, res => {\n    res.setEncoding('utf8');\n\n    let data = '';\n    res.on('data', d => (data += d));\n    res.on('end', () => {\n      if (options.json === false) {\n        callback(undefined, data);\n        return;\n      }\n\n      try {\n        const parsed = JSON.parse(data);\n        callback(undefined, parsed);\n      } catch (err) {\n        callback(new MongoError(`Invalid JSON response: \"${data}\"`));\n      }\n    });\n  });\n\n  req.on('error', err => callback(err));\n  req.end();\n}\n\nmodule.exports = MongoDBAWS;\n","'use strict';\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\n// TODO: can we get the Binary type from this.bson instead?\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n\nclass Plain extends AuthProvider {\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const username = credentials.username;\n    const password = credentials.password;\n\n    const payload = new Binary(`\\x00${username}\\x00${password}`);\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    connection.command('$external.$cmd', command, callback);\n  }\n}\n\nmodule.exports = Plain;\n","'use strict';\nconst crypto = require('crypto');\nconst Buffer = require('safe-buffer').Buffer;\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\n\nlet saslprep;\ntry {\n  saslprep = require('saslprep');\n} catch (e) {\n  // don't do anything;\n}\n\nclass ScramSHA extends AuthProvider {\n  constructor(bson, cryptoMethod) {\n    super(bson);\n    this.cryptoMethod = cryptoMethod || 'sha1';\n  }\n\n  prepare(handshakeDoc, authContext, callback) {\n    const cryptoMethod = this.cryptoMethod;\n    if (cryptoMethod === 'sha256' && saslprep == null) {\n      console.warn('Warning: no saslprep library specified. Passwords will not be sanitized');\n    }\n\n    crypto.randomBytes(24, (err, nonce) => {\n      if (err) {\n        return callback(err);\n      }\n\n      // store the nonce for later use\n      Object.assign(authContext, { nonce });\n\n      const credentials = authContext.credentials;\n      const request = Object.assign({}, handshakeDoc, {\n        speculativeAuthenticate: Object.assign(makeFirstMessage(cryptoMethod, credentials, nonce), {\n          db: credentials.source\n        })\n      });\n\n      callback(undefined, request);\n    });\n  }\n\n  auth(authContext, callback) {\n    const response = authContext.response;\n    if (response && response.speculativeAuthenticate) {\n      continueScramConversation(\n        this.cryptoMethod,\n        response.speculativeAuthenticate,\n        authContext,\n        callback\n      );\n\n      return;\n    }\n\n    executeScram(this.cryptoMethod, authContext, callback);\n  }\n}\n\nfunction cleanUsername(username) {\n  return username.replace('=', '=3D').replace(',', '=2C');\n}\n\nfunction clientFirstMessageBare(username, nonce) {\n  // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n  // Since the username is not sasl-prep-d, we need to do this here.\n  return Buffer.concat([\n    Buffer.from('n=', 'utf8'),\n    Buffer.from(username, 'utf8'),\n    Buffer.from(',r=', 'utf8'),\n    Buffer.from(nonce.toString('base64'), 'utf8')\n  ]);\n}\n\nfunction makeFirstMessage(cryptoMethod, credentials, nonce) {\n  const username = cleanUsername(credentials.username);\n  const mechanism = cryptoMethod === 'sha1' ? 'SCRAM-SHA-1' : 'SCRAM-SHA-256';\n\n  // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n  // Since the username is not sasl-prep-d, we need to do this here.\n  return {\n    saslStart: 1,\n    mechanism,\n    payload: new Binary(\n      Buffer.concat([Buffer.from('n,,', 'utf8'), clientFirstMessageBare(username, nonce)])\n    ),\n    autoAuthorize: 1,\n    options: { skipEmptyExchange: true }\n  };\n}\n\nfunction executeScram(cryptoMethod, authContext, callback) {\n  const connection = authContext.connection;\n  const credentials = authContext.credentials;\n  const nonce = authContext.nonce;\n  const db = credentials.source;\n\n  const saslStartCmd = makeFirstMessage(cryptoMethod, credentials, nonce);\n  connection.command(`${db}.$cmd`, saslStartCmd, (_err, result) => {\n    const err = resolveError(_err, result);\n    if (err) {\n      return callback(err);\n    }\n\n    continueScramConversation(cryptoMethod, result.result, authContext, callback);\n  });\n}\n\nfunction continueScramConversation(cryptoMethod, response, authContext, callback) {\n  const connection = authContext.connection;\n  const credentials = authContext.credentials;\n  const nonce = authContext.nonce;\n\n  const db = credentials.source;\n  const username = cleanUsername(credentials.username);\n  const password = credentials.password;\n\n  let processedPassword;\n  if (cryptoMethod === 'sha256') {\n    processedPassword = saslprep ? saslprep(password) : password;\n  } else {\n    try {\n      processedPassword = passwordDigest(username, password);\n    } catch (e) {\n      return callback(e);\n    }\n  }\n\n  const payload = Buffer.isBuffer(response.payload)\n    ? new Binary(response.payload)\n    : response.payload;\n  const dict = parsePayload(payload.value());\n\n  const iterations = parseInt(dict.i, 10);\n  if (iterations && iterations < 4096) {\n    callback(new MongoError(`Server returned an invalid iteration count ${iterations}`), false);\n    return;\n  }\n\n  const salt = dict.s;\n  const rnonce = dict.r;\n  if (rnonce.startsWith('nonce')) {\n    callback(new MongoError(`Server returned an invalid nonce: ${rnonce}`), false);\n    return;\n  }\n\n  // Set up start of proof\n  const withoutProof = `c=biws,r=${rnonce}`;\n  const saltedPassword = HI(\n    processedPassword,\n    Buffer.from(salt, 'base64'),\n    iterations,\n    cryptoMethod\n  );\n\n  const clientKey = HMAC(cryptoMethod, saltedPassword, 'Client Key');\n  const serverKey = HMAC(cryptoMethod, saltedPassword, 'Server Key');\n  const storedKey = H(cryptoMethod, clientKey);\n  const authMessage = [\n    clientFirstMessageBare(username, nonce),\n    payload.value().toString('base64'),\n    withoutProof\n  ].join(',');\n\n  const clientSignature = HMAC(cryptoMethod, storedKey, authMessage);\n  const clientProof = `p=${xor(clientKey, clientSignature)}`;\n  const clientFinal = [withoutProof, clientProof].join(',');\n\n  const serverSignature = HMAC(cryptoMethod, serverKey, authMessage);\n  const saslContinueCmd = {\n    saslContinue: 1,\n    conversationId: response.conversationId,\n    payload: new Binary(Buffer.from(clientFinal))\n  };\n\n  connection.command(`${db}.$cmd`, saslContinueCmd, (_err, result) => {\n    const err = resolveError(_err, result);\n    if (err) {\n      return callback(err);\n    }\n\n    const r = result.result;\n    const parsedResponse = parsePayload(r.payload.value());\n    if (!compareDigest(Buffer.from(parsedResponse.v, 'base64'), serverSignature)) {\n      callback(new MongoError('Server returned an invalid signature'));\n      return;\n    }\n\n    if (!r || r.done !== false) {\n      return callback(err, r);\n    }\n\n    const retrySaslContinueCmd = {\n      saslContinue: 1,\n      conversationId: r.conversationId,\n      payload: Buffer.alloc(0)\n    };\n\n    connection.command(`${db}.$cmd`, retrySaslContinueCmd, callback);\n  });\n}\n\nfunction parsePayload(payload) {\n  const dict = {};\n  const parts = payload.split(',');\n  for (let i = 0; i < parts.length; i++) {\n    const valueParts = parts[i].split('=');\n    dict[valueParts[0]] = valueParts[1];\n  }\n\n  return dict;\n}\n\nfunction passwordDigest(username, password) {\n  if (typeof username !== 'string') {\n    throw new MongoError('username must be a string');\n  }\n\n  if (typeof password !== 'string') {\n    throw new MongoError('password must be a string');\n  }\n\n  if (password.length === 0) {\n    throw new MongoError('password cannot be empty');\n  }\n\n  const md5 = crypto.createHash('md5');\n  md5.update(`${username}:mongo:${password}`, 'utf8');\n  return md5.digest('hex');\n}\n\n// XOR two buffers\nfunction xor(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    a = Buffer.from(a);\n  }\n\n  if (!Buffer.isBuffer(b)) {\n    b = Buffer.from(b);\n  }\n\n  const length = Math.max(a.length, b.length);\n  const res = [];\n\n  for (let i = 0; i < length; i += 1) {\n    res.push(a[i] ^ b[i]);\n  }\n\n  return Buffer.from(res).toString('base64');\n}\n\nfunction H(method, text) {\n  return crypto\n    .createHash(method)\n    .update(text)\n    .digest();\n}\n\nfunction HMAC(method, key, text) {\n  return crypto\n    .createHmac(method, key)\n    .update(text)\n    .digest();\n}\n\nlet _hiCache = {};\nlet _hiCacheCount = 0;\nfunction _hiCachePurge() {\n  _hiCache = {};\n  _hiCacheCount = 0;\n}\n\nconst hiLengthMap = {\n  sha256: 32,\n  sha1: 20\n};\n\nfunction HI(data, salt, iterations, cryptoMethod) {\n  // omit the work if already generated\n  const key = [data, salt.toString('base64'), iterations].join('_');\n  if (_hiCache[key] !== undefined) {\n    return _hiCache[key];\n  }\n\n  // generate the salt\n  const saltedData = crypto.pbkdf2Sync(\n    data,\n    salt,\n    iterations,\n    hiLengthMap[cryptoMethod],\n    cryptoMethod\n  );\n\n  // cache a copy to speed up the next lookup, but prevent unbounded cache growth\n  if (_hiCacheCount >= 200) {\n    _hiCachePurge();\n  }\n\n  _hiCache[key] = saltedData;\n  _hiCacheCount += 1;\n  return saltedData;\n}\n\nfunction compareDigest(lhs, rhs) {\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  if (typeof crypto.timingSafeEqual === 'function') {\n    return crypto.timingSafeEqual(lhs, rhs);\n  }\n\n  let result = 0;\n  for (let i = 0; i < lhs.length; i++) {\n    result |= lhs[i] ^ rhs[i];\n  }\n\n  return result === 0;\n}\n\nfunction resolveError(err, result) {\n  if (err) return err;\n\n  const r = result.result;\n  if (r.$err || r.errmsg) return new MongoError(r);\n}\n\nclass ScramSHA1 extends ScramSHA {\n  constructor(bson) {\n    super(bson, 'sha1');\n  }\n}\n\nclass ScramSHA256 extends ScramSHA {\n  constructor(bson) {\n    super(bson, 'sha256');\n  }\n}\n\nmodule.exports = { ScramSHA1, ScramSHA256 };\n","'use strict';\nconst AuthProvider = require('./auth_provider').AuthProvider;\n\nclass X509 extends AuthProvider {\n  prepare(handshakeDoc, authContext, callback) {\n    const credentials = authContext.credentials;\n    Object.assign(handshakeDoc, {\n      speculativeAuthenticate: x509AuthenticateCommand(credentials)\n    });\n\n    callback(undefined, handshakeDoc);\n  }\n\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    const response = authContext.response;\n    if (response.speculativeAuthenticate) {\n      return callback();\n    }\n\n    connection.command('$external.$cmd', x509AuthenticateCommand(credentials), callback);\n  }\n}\n\nfunction x509AuthenticateCommand(credentials) {\n  const command = { authenticate: 1, mechanism: 'MONGODB-X509' };\n  if (credentials.username) {\n    Object.assign(command, { user: credentials.username });\n  }\n\n  return command;\n}\n\nmodule.exports = X509;\n","'use strict';\nconst Msg = require('../connection/msg').Msg;\nconst KillCursor = require('../connection/commands').KillCursor;\nconst GetMore = require('../connection/commands').GetMore;\nconst calculateDurationInMs = require('../../utils').calculateDurationInMs;\n\n/** Commands that we want to redact because of the sensitive nature of their contents */\nconst SENSITIVE_COMMANDS = new Set([\n  'authenticate',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'createUser',\n  'updateUser',\n  'copydbgetnonce',\n  'copydbsaslstart',\n  'copydb'\n]);\n\n// helper methods\nconst extractCommandName = commandDoc => Object.keys(commandDoc)[0];\nconst namespace = command => command.ns;\nconst databaseName = command => command.ns.split('.')[0];\nconst collectionName = command => command.ns.split('.')[1];\nconst generateConnectionId = pool =>\n  pool.options ? `${pool.options.host}:${pool.options.port}` : pool.address;\nconst maybeRedact = (commandName, result) => (SENSITIVE_COMMANDS.has(commandName) ? {} : result);\nconst isLegacyPool = pool => pool.s && pool.queue;\n\nconst LEGACY_FIND_QUERY_MAP = {\n  $query: 'filter',\n  $orderby: 'sort',\n  $hint: 'hint',\n  $comment: 'comment',\n  $maxScan: 'maxScan',\n  $max: 'max',\n  $min: 'min',\n  $returnKey: 'returnKey',\n  $showDiskLoc: 'showRecordId',\n  $maxTimeMS: 'maxTimeMS',\n  $snapshot: 'snapshot'\n};\n\nconst LEGACY_FIND_OPTIONS_MAP = {\n  numberToSkip: 'skip',\n  numberToReturn: 'batchSize',\n  returnFieldsSelector: 'projection'\n};\n\nconst OP_QUERY_KEYS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'partial',\n  'exhaust'\n];\n\n/**\n * Extract the actual command from the query, possibly upconverting if it's a legacy\n * format\n *\n * @param {Object} command the command\n */\nconst extractCommand = command => {\n  if (command instanceof GetMore) {\n    return {\n      getMore: command.cursorId,\n      collection: collectionName(command),\n      batchSize: command.numberToReturn\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      killCursors: collectionName(command),\n      cursors: command.cursorIds\n    };\n  }\n\n  if (command instanceof Msg) {\n    return command.command;\n  }\n\n  if (command.query && command.query.$query) {\n    let result;\n    if (command.ns === 'admin.$cmd') {\n      // upconvert legacy command\n      result = Object.assign({}, command.query.$query);\n    } else {\n      // upconvert legacy find command\n      result = { find: collectionName(command) };\n      Object.keys(LEGACY_FIND_QUERY_MAP).forEach(key => {\n        if (typeof command.query[key] !== 'undefined')\n          result[LEGACY_FIND_QUERY_MAP[key]] = command.query[key];\n      });\n    }\n\n    Object.keys(LEGACY_FIND_OPTIONS_MAP).forEach(key => {\n      if (typeof command[key] !== 'undefined') result[LEGACY_FIND_OPTIONS_MAP[key]] = command[key];\n    });\n\n    OP_QUERY_KEYS.forEach(key => {\n      if (command[key]) result[key] = command[key];\n    });\n\n    if (typeof command.pre32Limit !== 'undefined') {\n      result.limit = command.pre32Limit;\n    }\n\n    if (command.query.$explain) {\n      return { explain: result };\n    }\n\n    return result;\n  }\n\n  return command.query ? command.query : command;\n};\n\nconst extractReply = (command, reply) => {\n  if (command instanceof GetMore) {\n    return {\n      ok: 1,\n      cursor: {\n        id: reply.message.cursorId,\n        ns: namespace(command),\n        nextBatch: reply.message.documents\n      }\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      ok: 1,\n      cursorsUnknown: command.cursorIds\n    };\n  }\n\n  // is this a legacy find command?\n  if (command.query && typeof command.query.$query !== 'undefined') {\n    return {\n      ok: 1,\n      cursor: {\n        id: reply.message.cursorId,\n        ns: namespace(command),\n        firstBatch: reply.message.documents\n      }\n    };\n  }\n\n  return reply && reply.result ? reply.result : reply;\n};\n\nconst extractConnectionDetails = pool => {\n  if (isLegacyPool(pool)) {\n    return {\n      connectionId: generateConnectionId(pool)\n    };\n  }\n\n  // APM in the modern pool is done at the `Connection` level, so we rename it here for\n  // readability.\n  const connection = pool;\n  return {\n    address: connection.address,\n    connectionId: connection.id\n  };\n};\n\n/** An event indicating the start of a given command */\nclass CommandStartedEvent {\n  /**\n   * Create a started event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   */\n  constructor(pool, command) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const connectionDetails = extractConnectionDetails(pool);\n\n    // NOTE: remove in major revision, this is not spec behavior\n    if (SENSITIVE_COMMANDS.has(commandName)) {\n      this.commandObj = {};\n      this.commandObj[commandName] = true;\n    }\n\n    Object.assign(this, connectionDetails, {\n      requestId: command.requestId,\n      databaseName: databaseName(command),\n      commandName,\n      command: cmd\n    });\n  }\n}\n\n/** An event indicating the success of a given command */\nclass CommandSucceededEvent {\n  /**\n   * Create a succeeded event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   * @param {Object} reply the reply for this command from the server\n   * @param {Array} started a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(pool, command, reply, started) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const connectionDetails = extractConnectionDetails(pool);\n\n    Object.assign(this, connectionDetails, {\n      requestId: command.requestId,\n      commandName,\n      duration: calculateDurationInMs(started),\n      reply: maybeRedact(commandName, extractReply(command, reply))\n    });\n  }\n}\n\n/** An event indicating the failure of a given command */\nclass CommandFailedEvent {\n  /**\n   * Create a failure event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   * @param {MongoError|Object} error the generated error or a server error response\n   * @param {Array} started a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(pool, command, error, started) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const connectionDetails = extractConnectionDetails(pool);\n\n    Object.assign(this, connectionDetails, {\n      requestId: command.requestId,\n      commandName,\n      duration: calculateDurationInMs(started),\n      failure: maybeRedact(commandName, error)\n    });\n  }\n}\n\nmodule.exports = {\n  CommandStartedEvent,\n  CommandSucceededEvent,\n  CommandFailedEvent\n};\n","'use strict';\n\n/**\n * Creates a new CommandResult instance\n * @class\n * @param {object} result CommandResult object\n * @param {Connection} connection A connection instance associated with this result\n * @return {CommandResult} A cursor instance\n */\nvar CommandResult = function(result, connection, message) {\n  this.result = result;\n  this.connection = connection;\n  this.message = message;\n};\n\n/**\n * Convert CommandResult to JSON\n * @method\n * @return {object}\n */\nCommandResult.prototype.toJSON = function() {\n  let result = Object.assign({}, this, this.result);\n  delete result.message;\n  return result;\n};\n\n/**\n * Convert CommandResult to String representation\n * @method\n * @return {string}\n */\nCommandResult.prototype.toString = function() {\n  return JSON.stringify(this.toJSON());\n};\n\nmodule.exports = CommandResult;\n","'use strict';\n\nvar retrieveBSON = require('./utils').retrieveBSON;\nvar BSON = retrieveBSON();\nvar Long = BSON.Long;\nconst Buffer = require('safe-buffer').Buffer;\n\n// Incrementing request id\nvar _requestId = 0;\n\n// Wire command operation ids\nvar opcodes = require('../wireprotocol/shared').opcodes;\n\n// Query flags\nvar OPTS_TAILABLE_CURSOR = 2;\nvar OPTS_SLAVE = 4;\nvar OPTS_OPLOG_REPLAY = 8;\nvar OPTS_NO_CURSOR_TIMEOUT = 16;\nvar OPTS_AWAIT_DATA = 32;\nvar OPTS_EXHAUST = 64;\nvar OPTS_PARTIAL = 128;\n\n// Response flags\nvar CURSOR_NOT_FOUND = 1;\nvar QUERY_FAILURE = 2;\nvar SHARD_CONFIG_STALE = 4;\nvar AWAIT_CAPABLE = 8;\n\n/**************************************************************\n * QUERY\n **************************************************************/\nvar Query = function(bson, ns, query, options) {\n  var self = this;\n  // Basic options needed to be passed in\n  if (ns == null) throw new Error('ns must be specified for query');\n  if (query == null) throw new Error('query must be specified for query');\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (ns.indexOf('\\x00') !== -1) {\n    throw new Error('namespace cannot contain a null character');\n  }\n\n  // Basic options\n  this.bson = bson;\n  this.ns = ns;\n  this.query = query;\n\n  // Additional options\n  this.numberToSkip = options.numberToSkip || 0;\n  this.numberToReturn = options.numberToReturn || 0;\n  this.returnFieldSelector = options.returnFieldSelector || null;\n  this.requestId = Query.getRequestId();\n\n  // special case for pre-3.2 find commands, delete ASAP\n  this.pre32Limit = options.pre32Limit;\n\n  // Serialization option\n  this.serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  this.ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n  this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : true;\n  this.batchSize = self.numberToReturn;\n\n  // Flags\n  this.tailable = false;\n  this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n  this.oplogReplay = false;\n  this.noCursorTimeout = false;\n  this.awaitData = false;\n  this.exhaust = false;\n  this.partial = false;\n};\n\n//\n// Assign a new request Id\nQuery.prototype.incRequestId = function() {\n  this.requestId = _requestId++;\n};\n\n//\n// Assign a new request Id\nQuery.nextRequestId = function() {\n  return _requestId + 1;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nQuery.prototype.toBin = function() {\n  var self = this;\n  var buffers = [];\n  var projection = null;\n\n  // Set up the flags\n  var flags = 0;\n  if (this.tailable) {\n    flags |= OPTS_TAILABLE_CURSOR;\n  }\n\n  if (this.slaveOk) {\n    flags |= OPTS_SLAVE;\n  }\n\n  if (this.oplogReplay) {\n    flags |= OPTS_OPLOG_REPLAY;\n  }\n\n  if (this.noCursorTimeout) {\n    flags |= OPTS_NO_CURSOR_TIMEOUT;\n  }\n\n  if (this.awaitData) {\n    flags |= OPTS_AWAIT_DATA;\n  }\n\n  if (this.exhaust) {\n    flags |= OPTS_EXHAUST;\n  }\n\n  if (this.partial) {\n    flags |= OPTS_PARTIAL;\n  }\n\n  // If batchSize is different to self.numberToReturn\n  if (self.batchSize !== self.numberToReturn) self.numberToReturn = self.batchSize;\n\n  // Allocate write protocol header buffer\n  var header = Buffer.alloc(\n    4 * 4 + // Header\n    4 + // Flags\n    Buffer.byteLength(self.ns) +\n    1 + // namespace\n    4 + // numberToSkip\n      4 // numberToReturn\n  );\n\n  // Add header to buffers\n  buffers.push(header);\n\n  // Serialize the query\n  var query = self.bson.serialize(this.query, {\n    checkKeys: this.checkKeys,\n    serializeFunctions: this.serializeFunctions,\n    ignoreUndefined: this.ignoreUndefined\n  });\n\n  // Add query document\n  buffers.push(query);\n\n  if (self.returnFieldSelector && Object.keys(self.returnFieldSelector).length > 0) {\n    // Serialize the projection document\n    projection = self.bson.serialize(this.returnFieldSelector, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n    // Add projection document\n    buffers.push(projection);\n  }\n\n  // Total message size\n  var totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n  // Set up the index\n  var index = 4;\n\n  // Write total document length\n  header[3] = (totalLength >> 24) & 0xff;\n  header[2] = (totalLength >> 16) & 0xff;\n  header[1] = (totalLength >> 8) & 0xff;\n  header[0] = totalLength & 0xff;\n\n  // Write header information requestId\n  header[index + 3] = (this.requestId >> 24) & 0xff;\n  header[index + 2] = (this.requestId >> 16) & 0xff;\n  header[index + 1] = (this.requestId >> 8) & 0xff;\n  header[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // Write header information responseTo\n  header[index + 3] = (0 >> 24) & 0xff;\n  header[index + 2] = (0 >> 16) & 0xff;\n  header[index + 1] = (0 >> 8) & 0xff;\n  header[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write header information OP_QUERY\n  header[index + 3] = (opcodes.OP_QUERY >> 24) & 0xff;\n  header[index + 2] = (opcodes.OP_QUERY >> 16) & 0xff;\n  header[index + 1] = (opcodes.OP_QUERY >> 8) & 0xff;\n  header[index] = opcodes.OP_QUERY & 0xff;\n  index = index + 4;\n\n  // Write header information flags\n  header[index + 3] = (flags >> 24) & 0xff;\n  header[index + 2] = (flags >> 16) & 0xff;\n  header[index + 1] = (flags >> 8) & 0xff;\n  header[index] = flags & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + header.write(this.ns, index, 'utf8') + 1;\n  header[index - 1] = 0;\n\n  // Write header information flags numberToSkip\n  header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n  header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n  header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n  header[index] = this.numberToSkip & 0xff;\n  index = index + 4;\n\n  // Write header information flags numberToReturn\n  header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  header[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Return the buffers\n  return buffers;\n};\n\nQuery.getRequestId = function() {\n  return ++_requestId;\n};\n\n/**************************************************************\n * GETMORE\n **************************************************************/\nvar GetMore = function(bson, ns, cursorId, opts) {\n  opts = opts || {};\n  this.numberToReturn = opts.numberToReturn || 0;\n  this.requestId = _requestId++;\n  this.bson = bson;\n  this.ns = ns;\n  this.cursorId = cursorId;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nGetMore.prototype.toBin = function() {\n  var length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n  // Create command buffer\n  var index = 0;\n  // Allocate buffer\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_GETMORE);\n  _buffer[index + 3] = (opcodes.OP_GETMORE >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_GETMORE >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_GETMORE >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_GETMORE & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n  _buffer[index - 1] = 0;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, numberToReturn);\n  _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  _buffer[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Write cursor id\n  // index = write32bit(index, _buffer, cursorId.getLowBits());\n  _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getLowBits() & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, cursorId.getHighBits());\n  _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getHighBits() & 0xff;\n  index = index + 4;\n\n  // Return buffer\n  return _buffer;\n};\n\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\nvar KillCursor = function(bson, ns, cursorIds) {\n  this.ns = ns;\n  this.requestId = _requestId++;\n  this.cursorIds = cursorIds;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nKillCursor.prototype.toBin = function() {\n  var length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n\n  // Create command buffer\n  var index = 0;\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n  _buffer[index + 3] = (opcodes.OP_KILL_CURSORS >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_KILL_CURSORS >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_KILL_CURSORS >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_KILL_CURSORS & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, this.cursorIds.length);\n  _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\n  _buffer[index] = this.cursorIds.length & 0xff;\n  index = index + 4;\n\n  // Write all the cursor ids into the array\n  for (var i = 0; i < this.cursorIds.length; i++) {\n    // Write cursor id\n    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n    _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n    _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n    index = index + 4;\n  }\n\n  // Return buffer\n  return _buffer;\n};\n\nvar Response = function(bson, message, msgHeader, msgBody, opts) {\n  opts = opts || { promoteLongs: true, promoteValues: true, promoteBuffers: false };\n  this.parsed = false;\n  this.raw = message;\n  this.data = msgBody;\n  this.bson = bson;\n  this.opts = opts;\n\n  // Read the message header\n  this.length = msgHeader.length;\n  this.requestId = msgHeader.requestId;\n  this.responseTo = msgHeader.responseTo;\n  this.opCode = msgHeader.opCode;\n  this.fromCompressed = msgHeader.fromCompressed;\n\n  // Read the message body\n  this.responseFlags = msgBody.readInt32LE(0);\n  this.cursorId = new Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n  this.startingFrom = msgBody.readInt32LE(12);\n  this.numberReturned = msgBody.readInt32LE(16);\n\n  // Preallocate document array\n  this.documents = new Array(this.numberReturned);\n\n  // Flag values\n  this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n  this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n  this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n  this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n  this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n  this.promoteValues = typeof opts.promoteValues === 'boolean' ? opts.promoteValues : true;\n  this.promoteBuffers = typeof opts.promoteBuffers === 'boolean' ? opts.promoteBuffers : false;\n};\n\nResponse.prototype.isParsed = function() {\n  return this.parsed;\n};\n\nResponse.prototype.parse = function(options) {\n  // Don't parse again if not needed\n  if (this.parsed) return;\n  options = options || {};\n\n  // Allow the return of raw documents instead of parsing\n  var raw = options.raw || false;\n  var documentsReturnedIn = options.documentsReturnedIn || null;\n  var promoteLongs =\n    typeof options.promoteLongs === 'boolean' ? options.promoteLongs : this.opts.promoteLongs;\n  var promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : this.opts.promoteValues;\n  var promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : this.opts.promoteBuffers;\n  var bsonSize, _options;\n\n  // Set up the options\n  _options = {\n    promoteLongs: promoteLongs,\n    promoteValues: promoteValues,\n    promoteBuffers: promoteBuffers\n  };\n\n  // Position within OP_REPLY at which documents start\n  // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n  this.index = 20;\n\n  //\n  // Parse Body\n  //\n  for (var i = 0; i < this.numberReturned; i++) {\n    bsonSize =\n      this.data[this.index] |\n      (this.data[this.index + 1] << 8) |\n      (this.data[this.index + 2] << 16) |\n      (this.data[this.index + 3] << 24);\n\n    // If we have raw results specified slice the return document\n    if (raw) {\n      this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n    } else {\n      this.documents[i] = this.bson.deserialize(\n        this.data.slice(this.index, this.index + bsonSize),\n        _options\n      );\n    }\n\n    // Adjust the index\n    this.index = this.index + bsonSize;\n  }\n\n  if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n    const fieldsAsRaw = {};\n    fieldsAsRaw[documentsReturnedIn] = true;\n    _options.fieldsAsRaw = fieldsAsRaw;\n\n    const doc = this.bson.deserialize(this.documents[0], _options);\n    this.documents = [doc];\n  }\n\n  // Set parsed\n  this.parsed = true;\n};\n\nmodule.exports = {\n  Query: Query,\n  GetMore: GetMore,\n  Response: Response,\n  KillCursor: KillCursor\n};\n","'use strict';\nconst net = require('net');\nconst tls = require('tls');\nconst Connection = require('./connection');\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MongoNetworkTimeoutError = require('../error').MongoNetworkTimeoutError;\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\nconst AuthContext = require('../auth/auth_provider').AuthContext;\nconst WIRE_CONSTANTS = require('../wireprotocol/constants');\nconst makeClientMetadata = require('../utils').makeClientMetadata;\nconst MAX_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_WIRE_VERSION;\nconst MAX_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_SERVER_VERSION;\nconst MIN_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_WIRE_VERSION;\nconst MIN_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_SERVER_VERSION;\nlet AUTH_PROVIDERS;\n\nfunction connect(options, cancellationToken, callback) {\n  if (typeof cancellationToken === 'function') {\n    callback = cancellationToken;\n    cancellationToken = undefined;\n  }\n\n  const ConnectionType = options && options.connectionType ? options.connectionType : Connection;\n  if (AUTH_PROVIDERS == null) {\n    AUTH_PROVIDERS = defaultAuthProviders(options.bson);\n  }\n\n  const family = options.family !== void 0 ? options.family : 0;\n  makeConnection(family, options, cancellationToken, (err, socket) => {\n    if (err) {\n      callback(err, socket); // in the error case, `socket` is the originating error event name\n      return;\n    }\n\n    performInitialHandshake(new ConnectionType(socket, options), options, callback);\n  });\n}\n\nfunction isModernConnectionType(conn) {\n  return !(conn instanceof Connection);\n}\n\nfunction checkSupportedServer(ismaster, options) {\n  const serverVersionHighEnough =\n    ismaster &&\n    typeof ismaster.maxWireVersion === 'number' &&\n    ismaster.maxWireVersion >= MIN_SUPPORTED_WIRE_VERSION;\n  const serverVersionLowEnough =\n    ismaster &&\n    typeof ismaster.minWireVersion === 'number' &&\n    ismaster.minWireVersion <= MAX_SUPPORTED_WIRE_VERSION;\n\n  if (serverVersionHighEnough) {\n    if (serverVersionLowEnough) {\n      return null;\n    }\n\n    const message = `Server at ${options.host}:${options.port} reports minimum wire version ${ismaster.minWireVersion}, but this version of the Node.js Driver requires at most ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n    return new MongoError(message);\n  }\n\n  const message = `Server at ${options.host}:${\n    options.port\n  } reports maximum wire version ${ismaster.maxWireVersion ||\n    0}, but this version of the Node.js Driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION})`;\n  return new MongoError(message);\n}\n\nfunction performInitialHandshake(conn, options, _callback) {\n  const callback = function(err, ret) {\n    if (err && conn) {\n      conn.destroy();\n    }\n    _callback(err, ret);\n  };\n\n  const credentials = options.credentials;\n  if (credentials) {\n    if (!credentials.mechanism.match(/DEFAULT/i) && !AUTH_PROVIDERS[credentials.mechanism]) {\n      callback(new MongoError(`authMechanism '${credentials.mechanism}' not supported`));\n      return;\n    }\n  }\n\n  const authContext = new AuthContext(conn, credentials, options);\n  prepareHandshakeDocument(authContext, (err, handshakeDoc) => {\n    if (err) {\n      return callback(err);\n    }\n\n    const handshakeOptions = Object.assign({}, options);\n    if (options.connectTimeoutMS || options.connectionTimeout) {\n      // The handshake technically is a monitoring check, so its socket timeout should be connectTimeoutMS\n      handshakeOptions.socketTimeout = options.connectTimeoutMS || options.connectionTimeout;\n    }\n\n    const start = new Date().getTime();\n    conn.command('admin.$cmd', handshakeDoc, handshakeOptions, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const response = result.result;\n      if (response.ok === 0) {\n        callback(new MongoError(response));\n        return;\n      }\n\n      const supportedServerErr = checkSupportedServer(response, options);\n      if (supportedServerErr) {\n        callback(supportedServerErr);\n        return;\n      }\n\n      if (!isModernConnectionType(conn)) {\n        // resolve compression\n        if (response.compression) {\n          const agreedCompressors = handshakeDoc.compression.filter(\n            compressor => response.compression.indexOf(compressor) !== -1\n          );\n\n          if (agreedCompressors.length) {\n            conn.agreedCompressor = agreedCompressors[0];\n          }\n\n          if (options.compression && options.compression.zlibCompressionLevel) {\n            conn.zlibCompressionLevel = options.compression.zlibCompressionLevel;\n          }\n        }\n      }\n\n      // NOTE: This is metadata attached to the connection while porting away from\n      //       handshake being done in the `Server` class. Likely, it should be\n      //       relocated, or at very least restructured.\n      conn.ismaster = response;\n      conn.lastIsMasterMS = new Date().getTime() - start;\n\n      if (!response.arbiterOnly && credentials) {\n        // store the response on auth context\n        Object.assign(authContext, { response });\n\n        const resolvedCredentials = credentials.resolveAuthMechanism(response);\n        const authProvider = AUTH_PROVIDERS[resolvedCredentials.mechanism];\n        authProvider.auth(authContext, err => {\n          if (err) return callback(err);\n          callback(undefined, conn);\n        });\n\n        return;\n      }\n\n      callback(undefined, conn);\n    });\n  });\n}\n\nfunction prepareHandshakeDocument(authContext, callback) {\n  const options = authContext.options;\n  const compressors =\n    options.compression && options.compression.compressors ? options.compression.compressors : [];\n\n  const handshakeDoc = {\n    ismaster: true,\n    client: options.metadata || makeClientMetadata(options),\n    compression: compressors\n  };\n\n  const credentials = authContext.credentials;\n  if (credentials) {\n    if (credentials.mechanism.match(/DEFAULT/i) && credentials.username) {\n      Object.assign(handshakeDoc, {\n        saslSupportedMechs: `${credentials.source}.${credentials.username}`\n      });\n\n      AUTH_PROVIDERS['scram-sha-256'].prepare(handshakeDoc, authContext, callback);\n      return;\n    }\n\n    const authProvider = AUTH_PROVIDERS[credentials.mechanism];\n    authProvider.prepare(handshakeDoc, authContext, callback);\n    return;\n  }\n\n  callback(undefined, handshakeDoc);\n}\n\nconst LEGAL_SSL_SOCKET_OPTIONS = [\n  'pfx',\n  'key',\n  'passphrase',\n  'cert',\n  'ca',\n  'ciphers',\n  'NPNProtocols',\n  'ALPNProtocols',\n  'servername',\n  'ecdhCurve',\n  'secureProtocol',\n  'secureContext',\n  'session',\n  'minDHSize',\n  'crl',\n  'rejectUnauthorized'\n];\n\nfunction parseConnectOptions(family, options) {\n  const host = typeof options.host === 'string' ? options.host : 'localhost';\n  if (host.indexOf('/') !== -1) {\n    return { path: host };\n  }\n\n  const result = {\n    family,\n    host,\n    port: typeof options.port === 'number' ? options.port : 27017,\n    rejectUnauthorized: false\n  };\n\n  return result;\n}\n\nfunction parseSslOptions(family, options) {\n  const result = parseConnectOptions(family, options);\n\n  // Merge in valid SSL options\n  for (const name in options) {\n    if (options[name] != null && LEGAL_SSL_SOCKET_OPTIONS.indexOf(name) !== -1) {\n      result[name] = options[name];\n    }\n  }\n\n  // Override checkServerIdentity behavior\n  if (options.checkServerIdentity === false) {\n    // Skip the identiy check by retuning undefined as per node documents\n    // https://nodejs.org/api/tls.html#tls_tls_connect_options_callback\n    result.checkServerIdentity = function() {\n      return undefined;\n    };\n  } else if (typeof options.checkServerIdentity === 'function') {\n    result.checkServerIdentity = options.checkServerIdentity;\n  }\n\n  // Set default sni servername to be the same as host\n  if (result.servername == null) {\n    result.servername = result.host;\n  }\n\n  return result;\n}\n\nconst SOCKET_ERROR_EVENTS = new Set(['error', 'close', 'timeout', 'parseError']);\nfunction makeConnection(family, options, cancellationToken, _callback) {\n  const useSsl = typeof options.ssl === 'boolean' ? options.ssl : false;\n  const keepAlive = typeof options.keepAlive === 'boolean' ? options.keepAlive : true;\n  let keepAliveInitialDelay =\n    typeof options.keepAliveInitialDelay === 'number' ? options.keepAliveInitialDelay : 120000;\n  const noDelay = typeof options.noDelay === 'boolean' ? options.noDelay : true;\n  const connectionTimeout =\n    typeof options.connectionTimeout === 'number'\n      ? options.connectionTimeout\n      : typeof options.connectTimeoutMS === 'number'\n      ? options.connectTimeoutMS\n      : 30000;\n  const socketTimeout = typeof options.socketTimeout === 'number' ? options.socketTimeout : 0;\n  const rejectUnauthorized =\n    typeof options.rejectUnauthorized === 'boolean' ? options.rejectUnauthorized : true;\n\n  if (keepAliveInitialDelay > socketTimeout) {\n    keepAliveInitialDelay = Math.round(socketTimeout / 2);\n  }\n\n  let socket;\n  const callback = function(err, ret) {\n    if (err && socket) {\n      socket.destroy();\n    }\n\n    _callback(err, ret);\n  };\n\n  try {\n    if (useSsl) {\n      socket = tls.connect(parseSslOptions(family, options));\n      if (typeof socket.disableRenegotiation === 'function') {\n        socket.disableRenegotiation();\n      }\n    } else {\n      socket = net.createConnection(parseConnectOptions(family, options));\n    }\n  } catch (err) {\n    return callback(err);\n  }\n\n  socket.setKeepAlive(keepAlive, keepAliveInitialDelay);\n  socket.setTimeout(connectionTimeout);\n  socket.setNoDelay(noDelay);\n\n  const connectEvent = useSsl ? 'secureConnect' : 'connect';\n  let cancellationHandler;\n  function errorHandler(eventName) {\n    return err => {\n      SOCKET_ERROR_EVENTS.forEach(event => socket.removeAllListeners(event));\n      if (cancellationHandler) {\n        cancellationToken.removeListener('cancel', cancellationHandler);\n      }\n\n      socket.removeListener(connectEvent, connectHandler);\n      callback(connectionFailureError(eventName, err));\n    };\n  }\n\n  function connectHandler() {\n    SOCKET_ERROR_EVENTS.forEach(event => socket.removeAllListeners(event));\n    if (cancellationHandler) {\n      cancellationToken.removeListener('cancel', cancellationHandler);\n    }\n\n    if (socket.authorizationError && rejectUnauthorized) {\n      return callback(socket.authorizationError);\n    }\n\n    socket.setTimeout(socketTimeout);\n    callback(null, socket);\n  }\n\n  SOCKET_ERROR_EVENTS.forEach(event => socket.once(event, errorHandler(event)));\n  if (cancellationToken) {\n    cancellationHandler = errorHandler('cancel');\n    cancellationToken.once('cancel', cancellationHandler);\n  }\n\n  socket.once(connectEvent, connectHandler);\n}\n\nfunction connectionFailureError(type, err) {\n  switch (type) {\n    case 'error':\n      return new MongoNetworkError(err);\n    case 'timeout':\n      return new MongoNetworkTimeoutError(`connection timed out`);\n    case 'close':\n      return new MongoNetworkError(`connection closed`);\n    case 'cancel':\n      return new MongoNetworkError(`connection establishment was cancelled`);\n    default:\n      return new MongoNetworkError(`unknown network error`);\n  }\n}\n\nmodule.exports = connect;\n","'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst crypto = require('crypto');\nconst debugOptions = require('./utils').debugOptions;\nconst parseHeader = require('../wireprotocol/shared').parseHeader;\nconst decompress = require('../wireprotocol/compression').decompress;\nconst Response = require('./commands').Response;\nconst BinMsg = require('./msg').BinMsg;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MongoNetworkTimeoutError = require('../error').MongoNetworkTimeoutError;\nconst MongoError = require('../error').MongoError;\nconst Logger = require('./logger');\nconst OP_COMPRESSED = require('../wireprotocol/shared').opcodes.OP_COMPRESSED;\nconst OP_MSG = require('../wireprotocol/shared').opcodes.OP_MSG;\nconst MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE;\nconst Buffer = require('safe-buffer').Buffer;\nconst Query = require('./commands').Query;\nconst CommandResult = require('./command_result');\n\nlet _id = 0;\n\nconst DEFAULT_MAX_BSON_MESSAGE_SIZE = 1024 * 1024 * 16 * 4;\nconst DEBUG_FIELDS = [\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'socketTimeout',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'checkServerIdentity'\n];\n\nlet connectionAccountingSpy = undefined;\nlet connectionAccounting = false;\nlet connections = {};\n\n/**\n * A class representing a single connection to a MongoDB server\n *\n * @fires Connection#connect\n * @fires Connection#close\n * @fires Connection#error\n * @fires Connection#timeout\n * @fires Connection#parseError\n * @fires Connection#message\n */\nclass Connection extends EventEmitter {\n  /**\n   * Creates a new Connection instance\n   *\n   * **NOTE**: Internal class, do not instantiate directly\n   *\n   * @param {Socket} socket The socket this connection wraps\n   * @param {Object} options Various settings\n   * @param {object} options.bson An implementation of bson serialize and deserialize\n   * @param {string} [options.host='localhost'] The host the socket is connected to\n   * @param {number} [options.port=27017] The port used for the socket connection\n   * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n   * @param {number} [options.keepAliveInitialDelay=120000] Initial delay before TCP keep alive enabled\n   * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n   * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n   * @param {boolean} [options.promoteLongs] Convert Long values from the db into Numbers if they fit into 53 bits\n   * @param {boolean} [options.promoteValues] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n   * @param {boolean} [options.promoteBuffers] Promotes Binary BSON values to native Node Buffers.\n   * @param {number} [options.maxBsonMessageSize=0x4000000] Largest possible size of a BSON message (for legacy purposes)\n   */\n  constructor(socket, options) {\n    super();\n\n    options = options || {};\n    if (!options.bson) {\n      throw new TypeError('must pass in valid bson parser');\n    }\n\n    this.id = _id++;\n    this.options = options;\n    this.logger = Logger('Connection', options);\n    this.bson = options.bson;\n    this.tag = options.tag;\n    this.maxBsonMessageSize = options.maxBsonMessageSize || DEFAULT_MAX_BSON_MESSAGE_SIZE;\n\n    this.port = options.port || 27017;\n    this.host = options.host || 'localhost';\n    this.socketTimeout = typeof options.socketTimeout === 'number' ? options.socketTimeout : 0;\n\n    // These values are inspected directly in tests, but maybe not necessary to keep around\n    this.keepAlive = typeof options.keepAlive === 'boolean' ? options.keepAlive : true;\n    this.keepAliveInitialDelay =\n      typeof options.keepAliveInitialDelay === 'number' ? options.keepAliveInitialDelay : 120000;\n    this.connectionTimeout =\n      typeof options.connectionTimeout === 'number' ? options.connectionTimeout : 30000;\n    if (this.keepAliveInitialDelay > this.socketTimeout) {\n      this.keepAliveInitialDelay = Math.round(this.socketTimeout / 2);\n    }\n\n    // Debug information\n    if (this.logger.isDebug()) {\n      this.logger.debug(\n        `creating connection ${this.id} with options [${JSON.stringify(\n          debugOptions(DEBUG_FIELDS, options)\n        )}]`\n      );\n    }\n\n    // Response options\n    this.responseOptions = {\n      promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n      promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n      promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false\n    };\n\n    // Flushing\n    this.flushing = false;\n    this.queue = [];\n\n    // Internal state\n    this.writeStream = null;\n    this.destroyed = false;\n    this.timedOut = false;\n\n    // Create hash method\n    const hash = crypto.createHash('sha1');\n    hash.update(this.address);\n    this.hashedName = hash.digest('hex');\n\n    // All operations in flight on the connection\n    this.workItems = [];\n\n    // setup socket\n    this.socket = socket;\n    this.socket.once('error', errorHandler(this));\n    this.socket.once('timeout', timeoutHandler(this));\n    this.socket.once('close', closeHandler(this));\n    this.socket.on('data', dataHandler(this));\n\n    if (connectionAccounting) {\n      addConnection(this.id, this);\n    }\n  }\n\n  setSocketTimeout(value) {\n    if (this.socket) {\n      this.socket.setTimeout(value);\n    }\n  }\n\n  resetSocketTimeout() {\n    if (this.socket) {\n      this.socket.setTimeout(this.socketTimeout);\n    }\n  }\n\n  static enableConnectionAccounting(spy) {\n    if (spy) {\n      connectionAccountingSpy = spy;\n    }\n\n    connectionAccounting = true;\n    connections = {};\n  }\n\n  static disableConnectionAccounting() {\n    connectionAccounting = false;\n    connectionAccountingSpy = undefined;\n  }\n\n  static connections() {\n    return connections;\n  }\n\n  get address() {\n    return `${this.host}:${this.port}`;\n  }\n\n  /**\n   * Unref this connection\n   * @method\n   * @return {boolean}\n   */\n  unref() {\n    if (this.socket == null) {\n      this.once('connect', () => this.socket.unref());\n      return;\n    }\n\n    this.socket.unref();\n  }\n\n  /**\n   * Flush all work Items on this connection\n   *\n   * @param {*} err The error to propagate to the flushed work items\n   */\n  flush(err) {\n    while (this.workItems.length > 0) {\n      const workItem = this.workItems.shift();\n      if (workItem.cb) {\n        workItem.cb(err);\n      }\n    }\n  }\n\n  /**\n   * Destroy connection\n   * @method\n   */\n  destroy(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    options = Object.assign({ force: false }, options);\n\n    if (connectionAccounting) {\n      deleteConnection(this.id);\n    }\n\n    if (this.socket == null) {\n      this.destroyed = true;\n      return;\n    }\n\n    if (options.force || this.timedOut) {\n      this.socket.destroy();\n      this.destroyed = true;\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    this.socket.end(err => {\n      this.destroyed = true;\n      if (typeof callback === 'function') callback(err, null);\n    });\n  }\n\n  /**\n   * Write to connection\n   * @method\n   * @param {Command} command Command to write out need to implement toBin and toBinUnified\n   */\n  write(buffer) {\n    // Debug Log\n    if (this.logger.isDebug()) {\n      if (!Array.isArray(buffer)) {\n        this.logger.debug(`writing buffer [${buffer.toString('hex')}] to ${this.address}`);\n      } else {\n        for (let i = 0; i < buffer.length; i++)\n          this.logger.debug(`writing buffer [${buffer[i].toString('hex')}] to ${this.address}`);\n      }\n    }\n\n    // Double check that the connection is not destroyed\n    if (this.socket.destroyed === false) {\n      // Write out the command\n      if (!Array.isArray(buffer)) {\n        this.socket.write(buffer, 'binary');\n        return true;\n      }\n\n      // Iterate over all buffers and write them in order to the socket\n      for (let i = 0; i < buffer.length; i++) {\n        this.socket.write(buffer[i], 'binary');\n      }\n\n      return true;\n    }\n\n    // Connection is destroyed return write failed\n    return false;\n  }\n\n  /**\n   * Return id of connection as a string\n   * @method\n   * @return {string}\n   */\n  toString() {\n    return '' + this.id;\n  }\n\n  /**\n   * Return json object of connection\n   * @method\n   * @return {object}\n   */\n  toJSON() {\n    return { id: this.id, host: this.host, port: this.port };\n  }\n\n  /**\n   * Is the connection connected\n   * @method\n   * @return {boolean}\n   */\n  isConnected() {\n    if (this.destroyed) return false;\n    return !this.socket.destroyed && this.socket.writable;\n  }\n\n  /**\n   * @ignore\n   */\n  command(ns, command, options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    const conn = this;\n    const socketTimeout = typeof options.socketTimeout === 'number' ? options.socketTimeout : 0;\n    const bson = conn.options.bson;\n    const query = new Query(bson, ns, command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    });\n\n    const noop = () => {};\n    function _callback(err, result) {\n      callback(err, result);\n      callback = noop;\n    }\n\n    function errorHandler(err) {\n      conn.resetSocketTimeout();\n      CONNECTION_ERROR_EVENTS.forEach(eventName => conn.removeListener(eventName, errorHandler));\n      conn.removeListener('message', messageHandler);\n\n      if (err == null) {\n        err = new MongoError(`runCommand failed for connection to '${conn.address}'`);\n      }\n\n      // ignore all future errors\n      conn.on('error', noop);\n      _callback(err);\n    }\n\n    function messageHandler(msg) {\n      if (msg.responseTo !== query.requestId) {\n        return;\n      }\n\n      conn.resetSocketTimeout();\n      CONNECTION_ERROR_EVENTS.forEach(eventName => conn.removeListener(eventName, errorHandler));\n      conn.removeListener('message', messageHandler);\n\n      msg.parse({ promoteValues: true });\n\n      const response = msg.documents[0];\n      if (response.ok === 0 || response.$err || response.errmsg || response.code) {\n        _callback(new MongoError(response));\n        return;\n      }\n\n      _callback(undefined, new CommandResult(response, this, msg));\n    }\n\n    conn.setSocketTimeout(socketTimeout);\n    CONNECTION_ERROR_EVENTS.forEach(eventName => conn.once(eventName, errorHandler));\n    conn.on('message', messageHandler);\n    conn.write(query.toBin());\n  }\n}\n\nconst CONNECTION_ERROR_EVENTS = ['error', 'close', 'timeout', 'parseError'];\n\nfunction deleteConnection(id) {\n  // console.log(\"=== deleted connection \" + id + \" :: \" + (connections[id] ? connections[id].port : ''))\n  delete connections[id];\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.deleteConnection(id);\n  }\n}\n\nfunction addConnection(id, connection) {\n  // console.log(\"=== added connection \" + id + \" :: \" + connection.port)\n  connections[id] = connection;\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.addConnection(id, connection);\n  }\n}\n\n//\n// Connection handlers\nfunction errorHandler(conn) {\n  return function(err) {\n    if (connectionAccounting) deleteConnection(conn.id);\n    // Debug information\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(\n        `connection ${conn.id} for [${conn.address}] errored out with [${JSON.stringify(err)}]`\n      );\n    }\n\n    conn.emit('error', new MongoNetworkError(err), conn);\n  };\n}\n\nfunction timeoutHandler(conn) {\n  return function() {\n    if (connectionAccounting) deleteConnection(conn.id);\n\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(`connection ${conn.id} for [${conn.address}] timed out`);\n    }\n\n    conn.timedOut = true;\n    conn.emit(\n      'timeout',\n      new MongoNetworkTimeoutError(`connection ${conn.id} to ${conn.address} timed out`, {\n        beforeHandshake: conn.ismaster == null\n      }),\n      conn\n    );\n  };\n}\n\nfunction closeHandler(conn) {\n  return function(hadError) {\n    if (connectionAccounting) deleteConnection(conn.id);\n\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(`connection ${conn.id} with for [${conn.address}] closed`);\n    }\n\n    if (!hadError) {\n      conn.emit(\n        'close',\n        new MongoNetworkError(`connection ${conn.id} to ${conn.address} closed`),\n        conn\n      );\n    }\n  };\n}\n\n// Handle a message once it is received\nfunction processMessage(conn, message) {\n  const msgHeader = parseHeader(message);\n  if (msgHeader.opCode !== OP_COMPRESSED) {\n    const ResponseConstructor = msgHeader.opCode === OP_MSG ? BinMsg : Response;\n    conn.emit(\n      'message',\n      new ResponseConstructor(\n        conn.bson,\n        message,\n        msgHeader,\n        message.slice(MESSAGE_HEADER_SIZE),\n        conn.responseOptions\n      ),\n      conn\n    );\n\n    return;\n  }\n\n  msgHeader.fromCompressed = true;\n  let index = MESSAGE_HEADER_SIZE;\n  msgHeader.opCode = message.readInt32LE(index);\n  index += 4;\n  msgHeader.length = message.readInt32LE(index);\n  index += 4;\n  const compressorID = message[index];\n  index++;\n\n  decompress(compressorID, message.slice(index), (err, decompressedMsgBody) => {\n    if (err) {\n      conn.emit('error', err);\n      return;\n    }\n\n    if (decompressedMsgBody.length !== msgHeader.length) {\n      conn.emit(\n        'error',\n        new MongoError(\n          'Decompressing a compressed message from the server failed. The message is corrupt.'\n        )\n      );\n\n      return;\n    }\n\n    const ResponseConstructor = msgHeader.opCode === OP_MSG ? BinMsg : Response;\n    conn.emit(\n      'message',\n      new ResponseConstructor(\n        conn.bson,\n        message,\n        msgHeader,\n        decompressedMsgBody,\n        conn.responseOptions\n      ),\n      conn\n    );\n  });\n}\n\nfunction dataHandler(conn) {\n  return function(data) {\n    // Parse until we are done with the data\n    while (data.length > 0) {\n      // If we still have bytes to read on the current message\n      if (conn.bytesRead > 0 && conn.sizeOfMessage > 0) {\n        // Calculate the amount of remaining bytes\n        const remainingBytesToRead = conn.sizeOfMessage - conn.bytesRead;\n        // Check if the current chunk contains the rest of the message\n        if (remainingBytesToRead > data.length) {\n          // Copy the new data into the exiting buffer (should have been allocated when we know the message size)\n          data.copy(conn.buffer, conn.bytesRead);\n          // Adjust the number of bytes read so it point to the correct index in the buffer\n          conn.bytesRead = conn.bytesRead + data.length;\n\n          // Reset state of buffer\n          data = Buffer.alloc(0);\n        } else {\n          // Copy the missing part of the data into our current buffer\n          data.copy(conn.buffer, conn.bytesRead, 0, remainingBytesToRead);\n          // Slice the overflow into a new buffer that we will then re-parse\n          data = data.slice(remainingBytesToRead);\n\n          // Emit current complete message\n          const emitBuffer = conn.buffer;\n          // Reset state of buffer\n          conn.buffer = null;\n          conn.sizeOfMessage = 0;\n          conn.bytesRead = 0;\n          conn.stubBuffer = null;\n\n          processMessage(conn, emitBuffer);\n        }\n      } else {\n        // Stub buffer is kept in case we don't get enough bytes to determine the\n        // size of the message (< 4 bytes)\n        if (conn.stubBuffer != null && conn.stubBuffer.length > 0) {\n          // If we have enough bytes to determine the message size let's do it\n          if (conn.stubBuffer.length + data.length > 4) {\n            // Prepad the data\n            const newData = Buffer.alloc(conn.stubBuffer.length + data.length);\n            conn.stubBuffer.copy(newData, 0);\n            data.copy(newData, conn.stubBuffer.length);\n            // Reassign for parsing\n            data = newData;\n\n            // Reset state of buffer\n            conn.buffer = null;\n            conn.sizeOfMessage = 0;\n            conn.bytesRead = 0;\n            conn.stubBuffer = null;\n          } else {\n            // Add the the bytes to the stub buffer\n            const newStubBuffer = Buffer.alloc(conn.stubBuffer.length + data.length);\n            // Copy existing stub buffer\n            conn.stubBuffer.copy(newStubBuffer, 0);\n            // Copy missing part of the data\n            data.copy(newStubBuffer, conn.stubBuffer.length);\n            // Exit parsing loop\n            data = Buffer.alloc(0);\n          }\n        } else {\n          if (data.length > 4) {\n            // Retrieve the message size\n            const sizeOfMessage = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\n            // If we have a negative sizeOfMessage emit error and return\n            if (sizeOfMessage < 0 || sizeOfMessage > conn.maxBsonMessageSize) {\n              const errorObject = {\n                err: 'socketHandler',\n                trace: '',\n                bin: conn.buffer,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: conn.bytesRead,\n                  stubBuffer: conn.stubBuffer\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              conn.emit('parseError', errorObject, conn);\n              return;\n            }\n\n            // Ensure that the size of message is larger than 0 and less than the max allowed\n            if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < conn.maxBsonMessageSize &&\n              sizeOfMessage > data.length\n            ) {\n              conn.buffer = Buffer.alloc(sizeOfMessage);\n              // Copy all the data into the buffer\n              data.copy(conn.buffer, 0);\n              // Update bytes read\n              conn.bytesRead = data.length;\n              // Update sizeOfMessage\n              conn.sizeOfMessage = sizeOfMessage;\n              // Ensure stub buffer is null\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n            } else if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < conn.maxBsonMessageSize &&\n              sizeOfMessage === data.length\n            ) {\n              const emitBuffer = data;\n              // Reset state of buffer\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n              // Emit the message\n              processMessage(conn, emitBuffer);\n            } else if (sizeOfMessage <= 4 || sizeOfMessage > conn.maxBsonMessageSize) {\n              const errorObject = {\n                err: 'socketHandler',\n                trace: null,\n                bin: data,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: 0,\n                  buffer: null,\n                  stubBuffer: null\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              conn.emit('parseError', errorObject, conn);\n\n              // Clear out the state of the parser\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n            } else {\n              const emitBuffer = data.slice(0, sizeOfMessage);\n              // Reset state of buffer\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Copy rest of message\n              data = data.slice(sizeOfMessage);\n              // Emit the message\n              processMessage(conn, emitBuffer);\n            }\n          } else {\n            // Create a buffer that contains the space for the non-complete message\n            conn.stubBuffer = Buffer.alloc(data.length);\n            // Copy the data to the stub buffer\n            data.copy(conn.stubBuffer, 0);\n            // Exit parsing loop\n            data = Buffer.alloc(0);\n          }\n        }\n      }\n    }\n  };\n}\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Connection#connect\n * @type {Connection}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Connection#close\n * @type {Connection}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Connection#error\n * @type {Connection}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Connection#timeout\n * @type {Connection}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Connection#parseError\n * @type {Connection}\n */\n\n/**\n * An event emitted each time the connection receives a parsed message from the wire\n *\n * @event Connection#message\n * @type {Connection}\n */\n\nmodule.exports = Connection;\n","'use strict';\n\nvar f = require('util').format,\n  MongoError = require('../error').MongoError;\n\n// Filters for classes\nvar classFilters = {};\nvar filteredClasses = {};\nvar level = null;\n// Save the process id\nvar pid = process.pid;\n// current logger\nvar currentLogger = null;\n\n/**\n * @callback Logger~loggerCallback\n * @param {string} msg message being logged\n * @param {object} state an object containing more metadata about the logging message\n */\n\n/**\n * Creates a new Logger instance\n * @class\n * @param {string} className The Class name associated with the logging instance\n * @param {object} [options=null] Optional settings.\n * @param {Logger~loggerCallback} [options.logger=null] Custom logger function;\n * @param {string} [options.loggerLevel=error] Override default global log level.\n */\nvar Logger = function(className, options) {\n  if (!(this instanceof Logger)) return new Logger(className, options);\n  options = options || {};\n\n  // Current reference\n  this.className = className;\n\n  // Current logger\n  if (options.logger) {\n    currentLogger = options.logger;\n  } else if (currentLogger == null) {\n    currentLogger = console.log;\n  }\n\n  // Set level of logging, default is error\n  if (options.loggerLevel) {\n    level = options.loggerLevel || 'error';\n  }\n\n  // Add all class names\n  if (filteredClasses[this.className] == null) classFilters[this.className] = true;\n};\n\n/**\n * Log a message at the debug level\n * @method\n * @param {string} message The message to log\n * @param {object} object additional meta data to log\n * @return {null}\n */\nLogger.prototype.debug = function(message, object) {\n  if (\n    this.isDebug() &&\n    ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n      (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n  ) {\n    var dateTime = new Date().getTime();\n    var msg = f('[%s-%s:%s] %s %s', 'DEBUG', this.className, pid, dateTime, message);\n    var state = {\n      type: 'debug',\n      message: message,\n      className: this.className,\n      pid: pid,\n      date: dateTime\n    };\n    if (object) state.meta = object;\n    currentLogger(msg, state);\n  }\n};\n\n/**\n * Log a message at the warn level\n * @method\n * @param {string} message The message to log\n * @param {object} object additional meta data to log\n * @return {null}\n */\n(Logger.prototype.warn = function(message, object) {\n  if (\n    this.isWarn() &&\n    ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n      (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n  ) {\n    var dateTime = new Date().getTime();\n    var msg = f('[%s-%s:%s] %s %s', 'WARN', this.className, pid, dateTime, message);\n    var state = {\n      type: 'warn',\n      message: message,\n      className: this.className,\n      pid: pid,\n      date: dateTime\n    };\n    if (object) state.meta = object;\n    currentLogger(msg, state);\n  }\n}),\n  /**\n   * Log a message at the info level\n   * @method\n   * @param {string} message The message to log\n   * @param {object} object additional meta data to log\n   * @return {null}\n   */\n  (Logger.prototype.info = function(message, object) {\n    if (\n      this.isInfo() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      var dateTime = new Date().getTime();\n      var msg = f('[%s-%s:%s] %s %s', 'INFO', this.className, pid, dateTime, message);\n      var state = {\n        type: 'info',\n        message: message,\n        className: this.className,\n        pid: pid,\n        date: dateTime\n      };\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }),\n  /**\n   * Log a message at the error level\n   * @method\n   * @param {string} message The message to log\n   * @param {object} object additional meta data to log\n   * @return {null}\n   */\n  (Logger.prototype.error = function(message, object) {\n    if (\n      this.isError() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      var dateTime = new Date().getTime();\n      var msg = f('[%s-%s:%s] %s %s', 'ERROR', this.className, pid, dateTime, message);\n      var state = {\n        type: 'error',\n        message: message,\n        className: this.className,\n        pid: pid,\n        date: dateTime\n      };\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }),\n  /**\n   * Is the logger set at info level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isInfo = function() {\n    return level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at error level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isError = function() {\n    return level === 'error' || level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at error level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isWarn = function() {\n    return level === 'error' || level === 'warn' || level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at debug level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isDebug = function() {\n    return level === 'debug';\n  });\n\n/**\n * Resets the logger to default settings, error and no filtered classes\n * @method\n * @return {null}\n */\nLogger.reset = function() {\n  level = 'error';\n  filteredClasses = {};\n};\n\n/**\n * Get the current logger function\n * @method\n * @return {Logger~loggerCallback}\n */\nLogger.currentLogger = function() {\n  return currentLogger;\n};\n\n/**\n * Set the current logger function\n * @method\n * @param {Logger~loggerCallback} logger Logger function.\n * @return {null}\n */\nLogger.setCurrentLogger = function(logger) {\n  if (typeof logger !== 'function') throw new MongoError('current logger must be a function');\n  currentLogger = logger;\n};\n\n/**\n * Set what classes to log.\n * @method\n * @param {string} type The type of filter (currently only class)\n * @param {string[]} values The filters to apply\n * @return {null}\n */\nLogger.filter = function(type, values) {\n  if (type === 'class' && Array.isArray(values)) {\n    filteredClasses = {};\n\n    values.forEach(function(x) {\n      filteredClasses[x] = true;\n    });\n  }\n};\n\n/**\n * Set the current log level\n * @method\n * @param {string} level Set current log level (debug, info, error)\n * @return {null}\n */\nLogger.setLevel = function(_level) {\n  if (_level !== 'info' && _level !== 'error' && _level !== 'debug' && _level !== 'warn') {\n    throw new Error(f('%s is an illegal logging level', _level));\n  }\n\n  level = _level;\n};\n\nmodule.exports = Logger;\n","'use strict';\n\n// Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n\nconst Buffer = require('safe-buffer').Buffer;\nconst opcodes = require('../wireprotocol/shared').opcodes;\nconst databaseNamespace = require('../wireprotocol/shared').databaseNamespace;\nconst ReadPreference = require('../topologies/read_preference');\n\n// Incrementing request id\nlet _requestId = 0;\n\n// Msg Flags\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n\nclass Msg {\n  constructor(bson, ns, command, options) {\n    // Basic options needed to be passed in\n    if (command == null) throw new Error('query must be specified for query');\n\n    // Basic options\n    this.bson = bson;\n    this.ns = ns;\n    this.command = command;\n    this.command.$db = databaseNamespace(ns);\n\n    if (options.readPreference && options.readPreference.mode !== ReadPreference.PRIMARY) {\n      this.command.$readPreference = options.readPreference.toJSON();\n    }\n\n    // Ensure empty options\n    this.options = options || {};\n\n    // Additional options\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n\n    // flags\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome || false;\n    this.exhaustAllowed =\n      typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n\n  toBin() {\n    const buffers = [];\n    let flags = 0;\n\n    if (this.checksumPresent) {\n      flags |= OPTS_CHECKSUM_PRESENT;\n    }\n\n    if (this.moreToCome) {\n      flags |= OPTS_MORE_TO_COME;\n    }\n\n    if (this.exhaustAllowed) {\n      flags |= OPTS_EXHAUST_ALLOWED;\n    }\n\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 // Flags\n    );\n\n    buffers.push(header);\n\n    let totalLength = header.length;\n    const command = this.command;\n    totalLength += this.makeDocumentSegment(buffers, command);\n\n    header.writeInt32LE(totalLength, 0); // messageLength\n    header.writeInt32LE(this.requestId, 4); // requestID\n    header.writeInt32LE(0, 8); // responseTo\n    header.writeInt32LE(opcodes.OP_MSG, 12); // opCode\n    header.writeUInt32LE(flags, 16); // flags\n    return buffers;\n  }\n\n  makeDocumentSegment(buffers, document) {\n    const payloadTypeBuffer = Buffer.alloc(1);\n    payloadTypeBuffer[0] = 0;\n\n    const documentBuffer = this.serializeBson(document);\n    buffers.push(payloadTypeBuffer);\n    buffers.push(documentBuffer);\n\n    return payloadTypeBuffer.length + documentBuffer.length;\n  }\n\n  serializeBson(document) {\n    return this.bson.serialize(document, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n  }\n}\n\nMsg.getRequestId = function() {\n  _requestId = (_requestId + 1) & 0x7fffffff;\n  return _requestId;\n};\n\nclass BinMsg {\n  constructor(bson, message, msgHeader, msgBody, opts) {\n    opts = opts || { promoteLongs: true, promoteValues: true, promoteBuffers: false };\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.bson = bson;\n    this.opts = opts;\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Read response flags\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n    this.promoteValues = typeof opts.promoteValues === 'boolean' ? opts.promoteValues : true;\n    this.promoteBuffers = typeof opts.promoteBuffers === 'boolean' ? opts.promoteBuffers : false;\n\n    this.documents = [];\n  }\n\n  isParsed() {\n    return this.parsed;\n  }\n\n  parse(options) {\n    // Don't parse again if not needed\n    if (this.parsed) return;\n    options = options || {};\n\n    this.index = 4;\n    // Allow the return of raw documents instead of parsing\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs =\n      typeof options.promoteLongs === 'boolean' ? options.promoteLongs : this.opts.promoteLongs;\n    const promoteValues =\n      typeof options.promoteValues === 'boolean' ? options.promoteValues : this.opts.promoteValues;\n    const promoteBuffers =\n      typeof options.promoteBuffers === 'boolean'\n        ? options.promoteBuffers\n        : this.opts.promoteBuffers;\n\n    // Set up the options\n    const _options = {\n      promoteLongs: promoteLongs,\n      promoteValues: promoteValues,\n      promoteBuffers: promoteBuffers\n    };\n\n    while (this.index < this.data.length) {\n      const payloadType = this.data.readUInt8(this.index++);\n      if (payloadType === 1) {\n        console.error('TYPE 1');\n      } else if (payloadType === 0) {\n        const bsonSize = this.data.readUInt32LE(this.index);\n        const bin = this.data.slice(this.index, this.index + bsonSize);\n        this.documents.push(raw ? bin : this.bson.deserialize(bin, _options));\n\n        this.index += bsonSize;\n      }\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n\n      const doc = this.bson.deserialize(this.documents[0], _options);\n      this.documents = [doc];\n    }\n\n    this.parsed = true;\n  }\n}\n\nmodule.exports = { Msg, BinMsg };\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst EventEmitter = require('events').EventEmitter;\nconst MongoError = require('../error').MongoError;\nconst MongoTimeoutError = require('../error').MongoTimeoutError;\nconst MongoWriteConcernError = require('../error').MongoWriteConcernError;\nconst Logger = require('./logger');\nconst f = require('util').format;\nconst Msg = require('./msg').Msg;\nconst CommandResult = require('./command_result');\nconst MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE;\nconst COMPRESSION_DETAILS_SIZE = require('../wireprotocol/shared').COMPRESSION_DETAILS_SIZE;\nconst opcodes = require('../wireprotocol/shared').opcodes;\nconst compress = require('../wireprotocol/compression').compress;\nconst compressorIDs = require('../wireprotocol/compression').compressorIDs;\nconst uncompressibleCommands = require('../wireprotocol/compression').uncompressibleCommands;\nconst apm = require('./apm');\nconst Buffer = require('safe-buffer').Buffer;\nconst connect = require('./connect');\nconst updateSessionFromResponse = require('../sessions').updateSessionFromResponse;\nconst eachAsync = require('../utils').eachAsync;\nconst makeStateMachine = require('../utils').makeStateMachine;\nconst now = require('../../utils').now;\n\nconst DISCONNECTED = 'disconnected';\nconst CONNECTING = 'connecting';\nconst CONNECTED = 'connected';\nconst DRAINING = 'draining';\nconst DESTROYING = 'destroying';\nconst DESTROYED = 'destroyed';\nconst stateTransition = makeStateMachine({\n  [DISCONNECTED]: [CONNECTING, DRAINING, DISCONNECTED],\n  [CONNECTING]: [CONNECTING, CONNECTED, DRAINING, DISCONNECTED],\n  [CONNECTED]: [CONNECTED, DISCONNECTED, DRAINING],\n  [DRAINING]: [DRAINING, DESTROYING, DESTROYED],\n  [DESTROYING]: [DESTROYING, DESTROYED],\n  [DESTROYED]: [DESTROYED]\n});\n\nconst CONNECTION_EVENTS = new Set([\n  'error',\n  'close',\n  'timeout',\n  'parseError',\n  'connect',\n  'message'\n]);\n\nvar _id = 0;\n\n/**\n * Creates a new Pool instance\n * @class\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Max server connection pool size\n * @param {number} [options.minSize=0] Minimum server connection pool size\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=120000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {number} [options.monitoringSocketTimeout=0] TCP Socket timeout setting for replicaset monitoring socket\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=false] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @fires Pool#connect\n * @fires Pool#close\n * @fires Pool#error\n * @fires Pool#timeout\n * @fires Pool#parseError\n * @return {Pool} A cursor instance\n */\nvar Pool = function(topology, options) {\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Store topology for later use\n  this.topology = topology;\n\n  this.s = {\n    state: DISCONNECTED,\n    cancellationToken: new EventEmitter()\n  };\n\n  // we don't care how many connections are listening for cancellation\n  this.s.cancellationToken.setMaxListeners(Infinity);\n\n  // Add the options\n  this.options = Object.assign(\n    {\n      // Host and port settings\n      host: 'localhost',\n      port: 27017,\n      // Pool default max size\n      size: 5,\n      // Pool default min size\n      minSize: 0,\n      // socket settings\n      connectionTimeout: 30000,\n      socketTimeout: 0,\n      keepAlive: true,\n      keepAliveInitialDelay: 120000,\n      noDelay: true,\n      // SSL Settings\n      ssl: false,\n      checkServerIdentity: true,\n      ca: null,\n      crl: null,\n      cert: null,\n      key: null,\n      passphrase: null,\n      rejectUnauthorized: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      // Reconnection options\n      reconnect: true,\n      reconnectInterval: 1000,\n      reconnectTries: 30,\n      // Enable domains\n      domainsEnabled: false,\n      // feature flag for determining if we are running with the unified topology or not\n      legacyCompatMode: true\n    },\n    options\n  );\n\n  // Identification information\n  this.id = _id++;\n  // Current reconnect retries\n  this.retriesLeft = this.options.reconnectTries;\n  this.reconnectId = null;\n  this.reconnectError = null;\n  // No bson parser passed in\n  if (\n    !options.bson ||\n    (options.bson &&\n      (typeof options.bson.serialize !== 'function' ||\n        typeof options.bson.deserialize !== 'function'))\n  ) {\n    throw new Error('must pass in valid bson parser');\n  }\n\n  // Logger instance\n  this.logger = Logger('Pool', options);\n  // Connections\n  this.availableConnections = [];\n  this.inUseConnections = [];\n  this.connectingConnections = 0;\n  // Currently executing\n  this.executing = false;\n  // Operation work queue\n  this.queue = [];\n\n  // Number of consecutive timeouts caught\n  this.numberOfConsecutiveTimeouts = 0;\n  // Current pool Index\n  this.connectionIndex = 0;\n\n  // event handlers\n  const pool = this;\n  this._messageHandler = messageHandler(this);\n  this._connectionCloseHandler = function(err) {\n    const connection = this;\n    connectionFailureHandler(pool, 'close', err, connection);\n  };\n\n  this._connectionErrorHandler = function(err) {\n    const connection = this;\n    connectionFailureHandler(pool, 'error', err, connection);\n  };\n\n  this._connectionTimeoutHandler = function(err) {\n    const connection = this;\n    connectionFailureHandler(pool, 'timeout', err, connection);\n  };\n\n  this._connectionParseErrorHandler = function(err) {\n    const connection = this;\n    connectionFailureHandler(pool, 'parseError', err, connection);\n  };\n};\n\ninherits(Pool, EventEmitter);\n\nObject.defineProperty(Pool.prototype, 'size', {\n  enumerable: true,\n  get: function() {\n    return this.options.size;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'minSize', {\n  enumerable: true,\n  get: function() {\n    return this.options.minSize;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'connectionTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.connectionTimeout;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'socketTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.socketTimeout;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'state', {\n  enumerable: true,\n  get: function() {\n    return this.s.state;\n  }\n});\n\n// clears all pool state\nfunction resetPoolState(pool) {\n  pool.inUseConnections = [];\n  pool.availableConnections = [];\n  pool.connectingConnections = 0;\n  pool.executing = false;\n  pool.numberOfConsecutiveTimeouts = 0;\n  pool.connectionIndex = 0;\n  pool.retriesLeft = pool.options.reconnectTries;\n  pool.reconnectId = null;\n}\n\nfunction connectionFailureHandler(pool, event, err, conn) {\n  if (conn) {\n    if (conn._connectionFailHandled) {\n      return;\n    }\n\n    conn._connectionFailHandled = true;\n    conn.destroy();\n\n    // Remove the connection\n    removeConnection(pool, conn);\n\n    // flush remaining work items\n    conn.flush(err);\n  }\n\n  // Did we catch a timeout, increment the numberOfConsecutiveTimeouts\n  if (event === 'timeout') {\n    pool.numberOfConsecutiveTimeouts = pool.numberOfConsecutiveTimeouts + 1;\n\n    // Have we timed out more than reconnectTries in a row ?\n    // Force close the pool as we are trying to connect to tcp sink hole\n    if (pool.numberOfConsecutiveTimeouts > pool.options.reconnectTries) {\n      pool.numberOfConsecutiveTimeouts = 0;\n      // Destroy all connections and pool\n      pool.destroy(true);\n      // Emit close event\n      return pool.emit('close', pool);\n    }\n  }\n\n  // No more socket available propegate the event\n  if (pool.socketCount() === 0) {\n    if (pool.state !== DESTROYED && pool.state !== DESTROYING && pool.state !== DRAINING) {\n      if (pool.options.reconnect) {\n        stateTransition(pool, DISCONNECTED);\n      }\n    }\n\n    // Do not emit error events, they are always close events\n    // do not trigger the low level error handler in node\n    event = event === 'error' ? 'close' : event;\n    pool.emit(event, err);\n  }\n\n  // Start reconnection attempts\n  if (!pool.reconnectId && pool.options.reconnect) {\n    pool.reconnectError = err;\n    pool.reconnectId = setTimeout(attemptReconnect(pool), pool.options.reconnectInterval);\n  }\n\n  // Do we need to do anything to maintain the minimum pool size\n  const totalConnections = totalConnectionCount(pool);\n  if (totalConnections < pool.minSize) {\n    createConnection(pool);\n  }\n}\n\nfunction attemptReconnect(pool, callback) {\n  return function() {\n    pool.emit('attemptReconnect', pool);\n\n    if (pool.state === DESTROYED || pool.state === DESTROYING) {\n      if (typeof callback === 'function') {\n        callback(new MongoError('Cannot create connection when pool is destroyed'));\n      }\n\n      return;\n    }\n\n    pool.retriesLeft = pool.retriesLeft - 1;\n    if (pool.retriesLeft <= 0) {\n      pool.destroy();\n\n      const error = new MongoTimeoutError(\n        `failed to reconnect after ${pool.options.reconnectTries} attempts with interval ${pool.options.reconnectInterval} ms`,\n        pool.reconnectError\n      );\n\n      pool.emit('reconnectFailed', error);\n      if (typeof callback === 'function') {\n        callback(error);\n      }\n\n      return;\n    }\n\n    // clear the reconnect id on retry\n    pool.reconnectId = null;\n\n    // now retry creating a connection\n    createConnection(pool, (err, conn) => {\n      if (err == null) {\n        pool.reconnectId = null;\n        pool.retriesLeft = pool.options.reconnectTries;\n        pool.emit('reconnect', pool);\n      }\n\n      if (typeof callback === 'function') {\n        callback(err, conn);\n      }\n    });\n  };\n}\n\nfunction moveConnectionBetween(connection, from, to) {\n  var index = from.indexOf(connection);\n  // Move the connection from connecting to available\n  if (index !== -1) {\n    from.splice(index, 1);\n    to.push(connection);\n  }\n}\n\nfunction messageHandler(self) {\n  return function(message, connection) {\n    // workItem to execute\n    var workItem = null;\n\n    // Locate the workItem\n    for (var i = 0; i < connection.workItems.length; i++) {\n      if (connection.workItems[i].requestId === message.responseTo) {\n        // Get the callback\n        workItem = connection.workItems[i];\n        // Remove from list of workItems\n        connection.workItems.splice(i, 1);\n      }\n    }\n\n    if (workItem && workItem.monitoring) {\n      moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n    }\n\n    // Reset timeout counter\n    self.numberOfConsecutiveTimeouts = 0;\n\n    // Reset the connection timeout if we modified it for\n    // this operation\n    if (workItem && workItem.socketTimeout) {\n      connection.resetSocketTimeout();\n    }\n\n    // Log if debug enabled\n    if (self.logger.isDebug()) {\n      self.logger.debug(\n        f(\n          'message [%s] received from %s:%s',\n          message.raw.toString('hex'),\n          self.options.host,\n          self.options.port\n        )\n      );\n    }\n\n    function handleOperationCallback(self, cb, err, result) {\n      // No domain enabled\n      if (!self.options.domainsEnabled) {\n        return process.nextTick(function() {\n          return cb(err, result);\n        });\n      }\n\n      // Domain enabled just call the callback\n      cb(err, result);\n    }\n\n    // Keep executing, ensure current message handler does not stop execution\n    if (!self.executing) {\n      process.nextTick(function() {\n        _execute(self)();\n      });\n    }\n\n    // Time to dispatch the message if we have a callback\n    if (workItem && !workItem.immediateRelease) {\n      try {\n        // Parse the message according to the provided options\n        message.parse(workItem);\n      } catch (err) {\n        return handleOperationCallback(self, workItem.cb, new MongoError(err));\n      }\n\n      if (message.documents[0]) {\n        const document = message.documents[0];\n        const session = workItem.session;\n        if (session) {\n          updateSessionFromResponse(session, document);\n        }\n\n        if (self.topology && document.$clusterTime) {\n          self.topology.clusterTime = document.$clusterTime;\n        }\n      }\n\n      // Establish if we have an error\n      if (workItem.command && message.documents[0]) {\n        const responseDoc = message.documents[0];\n\n        if (responseDoc.writeConcernError) {\n          const err = new MongoWriteConcernError(responseDoc.writeConcernError, responseDoc);\n          return handleOperationCallback(self, workItem.cb, err);\n        }\n\n        if (responseDoc.ok === 0 || responseDoc.$err || responseDoc.errmsg || responseDoc.code) {\n          return handleOperationCallback(self, workItem.cb, new MongoError(responseDoc));\n        }\n      }\n\n      // Add the connection details\n      message.hashedName = connection.hashedName;\n\n      // Return the documents\n      handleOperationCallback(\n        self,\n        workItem.cb,\n        null,\n        new CommandResult(workItem.fullResult ? message : message.documents[0], connection, message)\n      );\n    }\n  };\n}\n\n/**\n * Return the total socket count in the pool.\n * @method\n * @return {Number} The number of socket available.\n */\nPool.prototype.socketCount = function() {\n  return this.availableConnections.length + this.inUseConnections.length;\n  // + this.connectingConnections.length;\n};\n\nfunction totalConnectionCount(pool) {\n  return (\n    pool.availableConnections.length + pool.inUseConnections.length + pool.connectingConnections\n  );\n}\n\n/**\n * Return all pool connections\n * @method\n * @return {Connection[]} The pool connections\n */\nPool.prototype.allConnections = function() {\n  return this.availableConnections.concat(this.inUseConnections);\n};\n\n/**\n * Get a pool connection (round-robin)\n * @method\n * @return {Connection}\n */\nPool.prototype.get = function() {\n  return this.allConnections()[0];\n};\n\n/**\n * Is the pool connected\n * @method\n * @return {boolean}\n */\nPool.prototype.isConnected = function() {\n  // We are in a destroyed state\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    return false;\n  }\n\n  // Get connections\n  var connections = this.availableConnections.concat(this.inUseConnections);\n\n  // Check if we have any connected connections\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i].isConnected()) return true;\n  }\n\n  // Not connected\n  return false;\n};\n\n/**\n * Was the pool destroyed\n * @method\n * @return {boolean}\n */\nPool.prototype.isDestroyed = function() {\n  return this.state === DESTROYED || this.state === DESTROYING;\n};\n\n/**\n * Is the pool in a disconnected state\n * @method\n * @return {boolean}\n */\nPool.prototype.isDisconnected = function() {\n  return this.state === DISCONNECTED;\n};\n\n/**\n * Connect pool\n */\nPool.prototype.connect = function(callback) {\n  if (this.state !== DISCONNECTED) {\n    throw new MongoError('connection in unlawful state ' + this.state);\n  }\n\n  stateTransition(this, CONNECTING);\n  createConnection(this, (err, conn) => {\n    if (err) {\n      if (typeof callback === 'function') {\n        this.destroy();\n        callback(err);\n        return;\n      }\n\n      if (this.state === CONNECTING) {\n        this.emit('error', err);\n      }\n\n      this.destroy();\n      return;\n    }\n\n    stateTransition(this, CONNECTED);\n\n    // create min connections\n    if (this.minSize) {\n      for (let i = 0; i < this.minSize; i++) {\n        createConnection(this);\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback(null, conn);\n    } else {\n      this.emit('connect', this, conn);\n    }\n  });\n};\n\n/**\n * Authenticate using a specified mechanism\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.auth = function(credentials, callback) {\n  if (typeof callback === 'function') callback(null, null);\n};\n\n/**\n * Logout all users against a database\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.logout = function(dbName, callback) {\n  if (typeof callback === 'function') callback(null, null);\n};\n\n/**\n * Unref the pool\n * @method\n */\nPool.prototype.unref = function() {\n  // Get all the known connections\n  var connections = this.availableConnections.concat(this.inUseConnections);\n\n  connections.forEach(function(c) {\n    c.unref();\n  });\n};\n\n// Destroy the connections\nfunction destroy(self, connections, options, callback) {\n  stateTransition(self, DESTROYING);\n\n  // indicate that in-flight connections should cancel\n  self.s.cancellationToken.emit('cancel');\n\n  eachAsync(\n    connections,\n    (conn, cb) => {\n      for (const eventName of CONNECTION_EVENTS) {\n        conn.removeAllListeners(eventName);\n      }\n\n      // ignore any errors during destruction\n      conn.on('error', () => {});\n\n      conn.destroy(options, cb);\n    },\n    err => {\n      if (err) {\n        if (typeof callback === 'function') callback(err, null);\n        return;\n      }\n\n      resetPoolState(self);\n      self.queue = [];\n\n      stateTransition(self, DESTROYED);\n      if (typeof callback === 'function') callback(null, null);\n    }\n  );\n}\n\n/**\n * Destroy pool\n * @method\n */\nPool.prototype.destroy = function(force, callback) {\n  var self = this;\n  if (typeof force === 'function') {\n    callback = force;\n    force = false;\n  }\n\n  // Do not try again if the pool is already dead\n  if (this.state === DESTROYED || self.state === DESTROYING) {\n    if (typeof callback === 'function') callback(null, null);\n    return;\n  }\n\n  // Set state to draining\n  stateTransition(this, DRAINING);\n\n  // Are we force closing\n  if (force) {\n    // Get all the known connections\n    var connections = self.availableConnections.concat(self.inUseConnections);\n\n    // Flush any remaining work items with\n    // an error\n    while (self.queue.length > 0) {\n      var workItem = self.queue.shift();\n      if (typeof workItem.cb === 'function') {\n        workItem.cb(new MongoError('Pool was force destroyed'));\n      }\n    }\n\n    // Destroy the topology\n    return destroy(self, connections, { force: true }, callback);\n  }\n\n  // Clear out the reconnect if set\n  if (this.reconnectId) {\n    clearTimeout(this.reconnectId);\n  }\n\n  // Wait for the operations to drain before we close the pool\n  function checkStatus() {\n    if (self.state === DESTROYED || self.state === DESTROYING) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    flushMonitoringOperations(self.queue);\n\n    if (self.queue.length === 0) {\n      // Get all the known connections\n      var connections = self.availableConnections.concat(self.inUseConnections);\n\n      // Check if we have any in flight operations\n      for (var i = 0; i < connections.length; i++) {\n        // There is an operation still in flight, reschedule a\n        // check waiting for it to drain\n        if (connections[i].workItems.length > 0) {\n          return setTimeout(checkStatus, 1);\n        }\n      }\n\n      destroy(self, connections, { force: false }, callback);\n    } else {\n      // Ensure we empty the queue\n      _execute(self)();\n      // Set timeout\n      setTimeout(checkStatus, 1);\n    }\n  }\n\n  // Initiate drain of operations\n  checkStatus();\n};\n\n/**\n * Reset all connections of this pool\n *\n * @param {function} [callback]\n */\nPool.prototype.reset = function(callback) {\n  if (this.s.state !== CONNECTED) {\n    if (typeof callback === 'function') {\n      callback(new MongoError('pool is not connected, reset aborted'));\n    }\n\n    return;\n  }\n\n  // signal in-flight connections should be cancelled\n  this.s.cancellationToken.emit('cancel');\n\n  // destroy existing connections\n  const connections = this.availableConnections.concat(this.inUseConnections);\n  eachAsync(\n    connections,\n    (conn, cb) => {\n      for (const eventName of CONNECTION_EVENTS) {\n        conn.removeAllListeners(eventName);\n      }\n\n      conn.destroy({ force: true }, cb);\n    },\n    err => {\n      if (err) {\n        if (typeof callback === 'function') {\n          callback(err, null);\n          return;\n        }\n      }\n\n      resetPoolState(this);\n\n      // create a new connection, this will ultimately trigger execution\n      createConnection(this, () => {\n        if (typeof callback === 'function') {\n          callback(null, null);\n        }\n      });\n    }\n  );\n};\n\n// Prepare the buffer that Pool.prototype.write() uses to send to the server\nfunction serializeCommand(self, command, callback) {\n  const originalCommandBuffer = command.toBin();\n\n  // Check whether we and the server have agreed to use a compressor\n  const shouldCompress = !!self.options.agreedCompressor;\n  if (!shouldCompress || !canCompress(command)) {\n    return callback(null, originalCommandBuffer);\n  }\n\n  // Transform originalCommandBuffer into OP_COMPRESSED\n  const concatenatedOriginalCommandBuffer = Buffer.concat(originalCommandBuffer);\n  const messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n  // Extract information needed for OP_COMPRESSED from the uncompressed message\n  const originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n  // Compress the message body\n  compress(self, messageToBeCompressed, function(err, compressedMessage) {\n    if (err) return callback(err, null);\n\n    // Create the msgHeader of OP_COMPRESSED\n    const msgHeader = Buffer.alloc(MESSAGE_HEADER_SIZE);\n    msgHeader.writeInt32LE(\n      MESSAGE_HEADER_SIZE + COMPRESSION_DETAILS_SIZE + compressedMessage.length,\n      0\n    ); // messageLength\n    msgHeader.writeInt32LE(command.requestId, 4); // requestID\n    msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n    msgHeader.writeInt32LE(opcodes.OP_COMPRESSED, 12); // opCode\n\n    // Create the compression details of OP_COMPRESSED\n    const compressionDetails = Buffer.alloc(COMPRESSION_DETAILS_SIZE);\n    compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n    compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n    compressionDetails.writeUInt8(compressorIDs[self.options.agreedCompressor], 8); // compressorID\n\n    return callback(null, [msgHeader, compressionDetails, compressedMessage]);\n  });\n}\n\n/**\n * Write a message to MongoDB\n * @method\n * @return {Connection}\n */\nPool.prototype.write = function(command, options, cb) {\n  var self = this;\n  // Ensure we have a callback\n  if (typeof options === 'function') {\n    cb = options;\n  }\n\n  // Always have options\n  options = options || {};\n\n  // We need to have a callback function unless the message returns no response\n  if (!(typeof cb === 'function') && !options.noResponse) {\n    throw new MongoError('write method must provide a callback');\n  }\n\n  // Pool was destroyed error out\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    cb(new MongoError('pool destroyed'));\n    return;\n  }\n\n  if (this.state === DRAINING) {\n    cb(new MongoError('pool is draining, new operations prohibited'));\n    return;\n  }\n\n  if (this.options.domainsEnabled && process.domain && typeof cb === 'function') {\n    // if we have a domain bind to it\n    var oldCb = cb;\n    cb = process.domain.bind(function() {\n      // v8 - argumentsToArray one-liner\n      var args = new Array(arguments.length);\n      for (var i = 0; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n      // bounce off event loop so domain switch takes place\n      process.nextTick(function() {\n        oldCb.apply(null, args);\n      });\n    });\n  }\n\n  // Do we have an operation\n  var operation = {\n    cb: cb,\n    raw: false,\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false,\n    fullResult: false\n  };\n\n  // Set the options for the parsing\n  operation.promoteLongs = typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true;\n  operation.promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : true;\n  operation.promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false;\n  operation.raw = typeof options.raw === 'boolean' ? options.raw : false;\n  operation.immediateRelease =\n    typeof options.immediateRelease === 'boolean' ? options.immediateRelease : false;\n  operation.documentsReturnedIn = options.documentsReturnedIn;\n  operation.command = typeof options.command === 'boolean' ? options.command : false;\n  operation.fullResult = typeof options.fullResult === 'boolean' ? options.fullResult : false;\n  operation.noResponse = typeof options.noResponse === 'boolean' ? options.noResponse : false;\n  operation.session = options.session || null;\n\n  // Optional per operation socketTimeout\n  operation.socketTimeout = options.socketTimeout;\n  operation.monitoring = options.monitoring;\n\n  // Get the requestId\n  operation.requestId = command.requestId;\n\n  // If command monitoring is enabled we need to modify the callback here\n  if (self.options.monitorCommands) {\n    this.emit('commandStarted', new apm.CommandStartedEvent(this, command));\n\n    operation.started = now();\n    operation.cb = (err, reply) => {\n      if (err) {\n        self.emit(\n          'commandFailed',\n          new apm.CommandFailedEvent(this, command, err, operation.started)\n        );\n      } else {\n        if (reply && reply.result && (reply.result.ok === 0 || reply.result.$err)) {\n          self.emit(\n            'commandFailed',\n            new apm.CommandFailedEvent(this, command, reply.result, operation.started)\n          );\n        } else {\n          self.emit(\n            'commandSucceeded',\n            new apm.CommandSucceededEvent(this, command, reply, operation.started)\n          );\n        }\n      }\n\n      if (typeof cb === 'function') cb(err, reply);\n    };\n  }\n\n  // Prepare the operation buffer\n  serializeCommand(self, command, (err, serializedBuffers) => {\n    if (err) throw err;\n\n    // Set the operation's buffer to the serialization of the commands\n    operation.buffer = serializedBuffers;\n\n    // If we have a monitoring operation schedule as the very first operation\n    // Otherwise add to back of queue\n    if (options.monitoring) {\n      self.queue.unshift(operation);\n    } else {\n      self.queue.push(operation);\n    }\n\n    // Attempt to execute the operation\n    if (!self.executing) {\n      process.nextTick(function() {\n        _execute(self)();\n      });\n    }\n  });\n};\n\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nfunction canCompress(command) {\n  const commandDoc = command instanceof Msg ? command.command : command.query;\n  const commandName = Object.keys(commandDoc)[0];\n  return !uncompressibleCommands.has(commandName);\n}\n\n// Remove connection method\nfunction remove(connection, connections) {\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i] === connection) {\n      connections.splice(i, 1);\n      return true;\n    }\n  }\n}\n\nfunction removeConnection(self, connection) {\n  if (remove(connection, self.availableConnections)) return;\n  if (remove(connection, self.inUseConnections)) return;\n}\n\nfunction createConnection(pool, callback) {\n  if (pool.state === DESTROYED || pool.state === DESTROYING) {\n    if (typeof callback === 'function') {\n      callback(new MongoError('Cannot create connection when pool is destroyed'));\n    }\n\n    return;\n  }\n\n  pool.connectingConnections++;\n  connect(pool.options, pool.s.cancellationToken, (err, connection) => {\n    pool.connectingConnections--;\n\n    if (err) {\n      if (pool.logger.isDebug()) {\n        pool.logger.debug(`connection attempt failed with error [${JSON.stringify(err)}]`);\n      }\n\n      // check if reconnect is enabled, and attempt retry if so\n      if (!pool.reconnectId && pool.options.reconnect) {\n        if (pool.state === CONNECTING && pool.options.legacyCompatMode) {\n          callback(err);\n          return;\n        }\n\n        pool.reconnectError = err;\n        pool.reconnectId = setTimeout(\n          attemptReconnect(pool, callback),\n          pool.options.reconnectInterval\n        );\n\n        return;\n      }\n\n      if (typeof callback === 'function') {\n        callback(err);\n      }\n\n      return;\n    }\n\n    // the pool might have been closed since we started creating the connection\n    if (pool.state === DESTROYED || pool.state === DESTROYING) {\n      if (typeof callback === 'function') {\n        callback(new MongoError('Pool was destroyed after connection creation'));\n      }\n\n      connection.destroy();\n      return;\n    }\n\n    // otherwise, connect relevant event handlers and add it to our available connections\n    connection.on('error', pool._connectionErrorHandler);\n    connection.on('close', pool._connectionCloseHandler);\n    connection.on('timeout', pool._connectionTimeoutHandler);\n    connection.on('parseError', pool._connectionParseErrorHandler);\n    connection.on('message', pool._messageHandler);\n\n    pool.availableConnections.push(connection);\n\n    // if a callback was provided, return the connection\n    if (typeof callback === 'function') {\n      callback(null, connection);\n    }\n\n    // immediately execute any waiting work\n    _execute(pool)();\n  });\n}\n\nfunction flushMonitoringOperations(queue) {\n  for (var i = 0; i < queue.length; i++) {\n    if (queue[i].monitoring) {\n      var workItem = queue[i];\n      queue.splice(i, 1);\n      workItem.cb(\n        new MongoError({ message: 'no connection available for monitoring', driver: true })\n      );\n    }\n  }\n}\n\nfunction _execute(self) {\n  return function() {\n    if (self.state === DESTROYED) return;\n    // Already executing, skip\n    if (self.executing) return;\n    // Set pool as executing\n    self.executing = true;\n\n    // New pool connections are in progress, wait them to finish\n    // before executing any more operation to ensure distribution of\n    // operations\n    if (self.connectingConnections > 0) {\n      self.executing = false;\n      return;\n    }\n\n    // As long as we have available connections\n    // eslint-disable-next-line\n    while (true) {\n      // Total availble connections\n      const totalConnections = totalConnectionCount(self);\n\n      // No available connections available, flush any monitoring ops\n      if (self.availableConnections.length === 0) {\n        // Flush any monitoring operations\n        flushMonitoringOperations(self.queue);\n\n        // Try to create a new connection to execute stuck operation\n        if (totalConnections < self.options.size && self.queue.length > 0) {\n          createConnection(self);\n        }\n\n        break;\n      }\n\n      // No queue break\n      if (self.queue.length === 0) {\n        break;\n      }\n\n      var connection = null;\n      const connections = self.availableConnections.filter(conn => conn.workItems.length === 0);\n\n      // No connection found that has no work on it, just pick one for pipelining\n      if (connections.length === 0) {\n        connection =\n          self.availableConnections[self.connectionIndex++ % self.availableConnections.length];\n      } else {\n        connection = connections[self.connectionIndex++ % connections.length];\n      }\n\n      // Is the connection connected\n      if (!connection.isConnected()) {\n        // Remove the disconnected connection\n        removeConnection(self, connection);\n        // Flush any monitoring operations in the queue, failing fast\n        flushMonitoringOperations(self.queue);\n        break;\n      }\n\n      // Get the next work item\n      var workItem = self.queue.shift();\n\n      // If we are monitoring we need to use a connection that is not\n      // running another operation to avoid socket timeout changes\n      // affecting an existing operation\n      if (workItem.monitoring) {\n        var foundValidConnection = false;\n\n        for (let i = 0; i < self.availableConnections.length; i++) {\n          // If the connection is connected\n          // And there are no pending workItems on it\n          // Then we can safely use it for monitoring.\n          if (\n            self.availableConnections[i].isConnected() &&\n            self.availableConnections[i].workItems.length === 0\n          ) {\n            foundValidConnection = true;\n            connection = self.availableConnections[i];\n            break;\n          }\n        }\n\n        // No safe connection found, attempt to grow the connections\n        // if possible and break from the loop\n        if (!foundValidConnection) {\n          // Put workItem back on the queue\n          self.queue.unshift(workItem);\n\n          // Attempt to grow the pool if it's not yet maxsize\n          if (totalConnections < self.options.size && self.queue.length > 0) {\n            // Create a new connection\n            createConnection(self);\n          }\n\n          // Re-execute the operation\n          setTimeout(() => _execute(self)(), 10);\n          break;\n        }\n      }\n\n      // Don't execute operation until we have a full pool\n      if (totalConnections < self.options.size) {\n        // Connection has work items, then put it back on the queue\n        // and create a new connection\n        if (connection.workItems.length > 0) {\n          // Lets put the workItem back on the list\n          self.queue.unshift(workItem);\n          // Create a new connection\n          createConnection(self);\n          // Break from the loop\n          break;\n        }\n      }\n\n      // Get actual binary commands\n      var buffer = workItem.buffer;\n\n      // If we are monitoring take the connection of the availableConnections\n      if (workItem.monitoring) {\n        moveConnectionBetween(connection, self.availableConnections, self.inUseConnections);\n      }\n\n      // Track the executing commands on the mongo server\n      // as long as there is an expected response\n      if (!workItem.noResponse) {\n        connection.workItems.push(workItem);\n      }\n\n      // We have a custom socketTimeout\n      if (!workItem.immediateRelease && typeof workItem.socketTimeout === 'number') {\n        connection.setSocketTimeout(workItem.socketTimeout);\n      }\n\n      // Capture if write was successful\n      var writeSuccessful = true;\n\n      // Put operation on the wire\n      if (Array.isArray(buffer)) {\n        for (let i = 0; i < buffer.length; i++) {\n          writeSuccessful = connection.write(buffer[i]);\n        }\n      } else {\n        writeSuccessful = connection.write(buffer);\n      }\n\n      // if the command is designated noResponse, call the callback immeditely\n      if (workItem.noResponse && typeof workItem.cb === 'function') {\n        workItem.cb(null, null);\n      }\n\n      if (writeSuccessful === false) {\n        // If write not successful put back on queue\n        self.queue.unshift(workItem);\n        // Remove the disconnected connection\n        removeConnection(self, connection);\n        // Flush any monitoring operations in the queue, failing fast\n        flushMonitoringOperations(self.queue);\n        break;\n      }\n    }\n\n    self.executing = false;\n  };\n}\n\n// Make execution loop available for testing\nPool._execute = _execute;\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Pool#connect\n * @type {Pool}\n */\n\n/**\n * A server reconnect event, used to verify that pool reconnected.\n *\n * @event Pool#reconnect\n * @type {Pool}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Pool#close\n * @type {Pool}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Pool#error\n * @type {Pool}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Pool#timeout\n * @type {Pool}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Pool#parseError\n * @type {Pool}\n */\n\n/**\n * The driver attempted to reconnect\n *\n * @event Pool#attemptReconnect\n * @type {Pool}\n */\n\n/**\n * The driver exhausted all reconnect attempts\n *\n * @event Pool#reconnectFailed\n * @type {Pool}\n */\n\nmodule.exports = Pool;\n","'use strict';\n\nconst require_optional = require('require_optional');\n\nfunction debugOptions(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n}\n\nfunction retrieveBSON() {\n  var BSON = require('bson');\n  BSON.native = false;\n\n  try {\n    var optionalBSON = require_optional('bson-ext');\n    if (optionalBSON) {\n      optionalBSON.native = true;\n      return optionalBSON;\n    }\n  } catch (err) {} // eslint-disable-line\n\n  return BSON;\n}\n\n// Throw an error if an attempt to use Snappy is made when Snappy is not installed\nfunction noSnappyWarning() {\n  throw new Error(\n    'Attempted to use Snappy compression, but Snappy is not installed. Install or disable Snappy compression and try again.'\n  );\n}\n\n// Facilitate loading Snappy optionally\nfunction retrieveSnappy() {\n  var snappy = null;\n  try {\n    snappy = require_optional('snappy');\n  } catch (error) {} // eslint-disable-line\n  if (!snappy) {\n    snappy = {\n      compress: noSnappyWarning,\n      uncompress: noSnappyWarning,\n      compressSync: noSnappyWarning,\n      uncompressSync: noSnappyWarning\n    };\n  }\n  return snappy;\n}\n\nmodule.exports = {\n  debugOptions,\n  retrieveBSON,\n  retrieveSnappy\n};\n","'use strict';\n\nconst Logger = require('./connection/logger');\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst MongoError = require('./error').MongoError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst collationNotSupported = require('./utils').collationNotSupported;\nconst ReadPreference = require('./topologies/read_preference');\nconst isUnifiedTopology = require('./utils').isUnifiedTopology;\nconst executeOperation = require('../operations/execute_operation');\nconst Readable = require('stream').Readable;\nconst SUPPORTS = require('../utils').SUPPORTS;\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\nconst mergeOptions = require('../utils').mergeOptions;\nconst OperationBase = require('../operations/operation').OperationBase;\n\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\n\n// Possible states for a cursor\nconst CursorState = {\n  INIT: 0,\n  OPEN: 1,\n  CLOSED: 2,\n  GET_MORE: 3\n};\n\n//\n// Handle callback (including any exceptions thrown)\nfunction handleCallback(callback, err, result) {\n  try {\n    callback(err, result);\n  } catch (err) {\n    process.nextTick(function() {\n      throw err;\n    });\n  }\n}\n\n/**\n * This is a cursor results callback\n *\n * @callback resultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {object} document\n */\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query.\n *\n * **CURSORS Cannot directly be instantiated**\n */\n\n/**\n * The core cursor class. All cursors in the driver build off of this one.\n *\n * @property {number} cursorBatchSize The current cursorBatchSize for the cursor\n * @property {number} cursorLimit The current cursorLimit for the cursor\n * @property {number} cursorSkip The current cursorSkip for the cursor\n */\nclass CoreCursor extends Readable {\n  /**\n   * Create a new core `Cursor` instance.\n   * **NOTE** Not to be instantiated directly\n   *\n   * @param {object} topology The server topology instance.\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {{object}|Long} cmd The selector (can be a command or a cursorId)\n   * @param {object} [options=null] Optional settings.\n   * @param {object} [options.batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/find/| find command documentation} and {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n   * @param {array} [options.documents=[]] Initial documents list for cursor\n   * @param {object} [options.transforms=null] Transform methods for the cursor results\n   * @param {function} [options.transforms.query] Transform the value returned from the initial query\n   * @param {function} [options.transforms.doc] Transform each document returned from Cursor.prototype._next\n   */\n  constructor(topology, ns, cmd, options) {\n    super({ objectMode: true });\n    options = options || {};\n\n    if (ns instanceof OperationBase) {\n      this.operation = ns;\n      ns = this.operation.ns.toString();\n      options = this.operation.options;\n      cmd = this.operation.cmd ? this.operation.cmd : {};\n    }\n\n    // Cursor pool\n    this.pool = null;\n    // Cursor server\n    this.server = null;\n\n    // Do we have a not connected handler\n    this.disconnectHandler = options.disconnectHandler;\n\n    // Set local values\n    this.bson = topology.s.bson;\n    this.ns = ns;\n    this.namespace = MongoDBNamespace.fromString(ns);\n    this.cmd = cmd;\n    this.options = options;\n    this.topology = topology;\n\n    // All internal state\n    this.cursorState = {\n      cursorId: null,\n      cmd,\n      documents: options.documents || [],\n      cursorIndex: 0,\n      dead: false,\n      killed: false,\n      init: false,\n      notified: false,\n      limit: options.limit || cmd.limit || 0,\n      skip: options.skip || cmd.skip || 0,\n      batchSize: options.batchSize || cmd.batchSize || 1000,\n      currentLimit: 0,\n      // Result field name if not a cursor (contains the array of results)\n      transforms: options.transforms,\n      raw: options.raw || (cmd && cmd.raw)\n    };\n\n    if (typeof options.session === 'object') {\n      this.cursorState.session = options.session;\n    }\n\n    // Add promoteLong to cursor state\n    const topologyOptions = topology.s.options;\n    if (typeof topologyOptions.promoteLongs === 'boolean') {\n      this.cursorState.promoteLongs = topologyOptions.promoteLongs;\n    } else if (typeof options.promoteLongs === 'boolean') {\n      this.cursorState.promoteLongs = options.promoteLongs;\n    }\n\n    // Add promoteValues to cursor state\n    if (typeof topologyOptions.promoteValues === 'boolean') {\n      this.cursorState.promoteValues = topologyOptions.promoteValues;\n    } else if (typeof options.promoteValues === 'boolean') {\n      this.cursorState.promoteValues = options.promoteValues;\n    }\n\n    // Add promoteBuffers to cursor state\n    if (typeof topologyOptions.promoteBuffers === 'boolean') {\n      this.cursorState.promoteBuffers = topologyOptions.promoteBuffers;\n    } else if (typeof options.promoteBuffers === 'boolean') {\n      this.cursorState.promoteBuffers = options.promoteBuffers;\n    }\n\n    if (topologyOptions.reconnect) {\n      this.cursorState.reconnect = topologyOptions.reconnect;\n    }\n\n    // Logger\n    this.logger = Logger('Cursor', topologyOptions);\n\n    //\n    // Did we pass in a cursor id\n    if (typeof cmd === 'number') {\n      this.cursorState.cursorId = Long.fromNumber(cmd);\n      this.cursorState.lastCursorId = this.cursorState.cursorId;\n    } else if (cmd instanceof Long) {\n      this.cursorState.cursorId = cmd;\n      this.cursorState.lastCursorId = cmd;\n    }\n\n    // TODO: remove as part of NODE-2104\n    if (this.operation) {\n      this.operation.cursorState = this.cursorState;\n    }\n  }\n\n  setCursorBatchSize(value) {\n    this.cursorState.batchSize = value;\n  }\n\n  cursorBatchSize() {\n    return this.cursorState.batchSize;\n  }\n\n  setCursorLimit(value) {\n    this.cursorState.limit = value;\n  }\n\n  cursorLimit() {\n    return this.cursorState.limit;\n  }\n\n  setCursorSkip(value) {\n    this.cursorState.skip = value;\n  }\n\n  cursorSkip() {\n    return this.cursorState.skip;\n  }\n\n  /**\n   * Retrieve the next document from the cursor\n   * @method\n   * @param {resultCallback} callback A callback function\n   */\n  _next(callback) {\n    nextFunction(this, callback);\n  }\n\n  /**\n   * Clone the cursor\n   * @method\n   * @return {Cursor}\n   */\n  clone() {\n    const clonedOptions = mergeOptions({}, this.options);\n    delete clonedOptions.session;\n    return this.topology.cursor(this.ns, this.cmd, clonedOptions);\n  }\n\n  /**\n   * Checks if the cursor is dead\n   * @method\n   * @return {boolean} A boolean signifying if the cursor is dead or not\n   */\n  isDead() {\n    return this.cursorState.dead === true;\n  }\n\n  /**\n   * Checks if the cursor was killed by the application\n   * @method\n   * @return {boolean} A boolean signifying if the cursor was killed by the application\n   */\n  isKilled() {\n    return this.cursorState.killed === true;\n  }\n\n  /**\n   * Checks if the cursor notified it's caller about it's death\n   * @method\n   * @return {boolean} A boolean signifying if the cursor notified the callback\n   */\n  isNotified() {\n    return this.cursorState.notified === true;\n  }\n\n  /**\n   * Returns current buffered documents length\n   * @method\n   * @return {number} The number of items in the buffered documents\n   */\n  bufferedCount() {\n    return this.cursorState.documents.length - this.cursorState.cursorIndex;\n  }\n\n  /**\n   * Returns current buffered documents\n   * @method\n   * @return {Array} An array of buffered documents\n   */\n  readBufferedDocuments(number) {\n    const unreadDocumentsLength = this.cursorState.documents.length - this.cursorState.cursorIndex;\n    const length = number < unreadDocumentsLength ? number : unreadDocumentsLength;\n    let elements = this.cursorState.documents.slice(\n      this.cursorState.cursorIndex,\n      this.cursorState.cursorIndex + length\n    );\n\n    // Transform the doc with passed in transformation method if provided\n    if (this.cursorState.transforms && typeof this.cursorState.transforms.doc === 'function') {\n      // Transform all the elements\n      for (let i = 0; i < elements.length; i++) {\n        elements[i] = this.cursorState.transforms.doc(elements[i]);\n      }\n    }\n\n    // Ensure we do not return any more documents than the limit imposed\n    // Just return the number of elements up to the limit\n    if (\n      this.cursorState.limit > 0 &&\n      this.cursorState.currentLimit + elements.length > this.cursorState.limit\n    ) {\n      elements = elements.slice(0, this.cursorState.limit - this.cursorState.currentLimit);\n      this.kill();\n    }\n\n    // Adjust current limit\n    this.cursorState.currentLimit = this.cursorState.currentLimit + elements.length;\n    this.cursorState.cursorIndex = this.cursorState.cursorIndex + elements.length;\n\n    // Return elements\n    return elements;\n  }\n\n  /**\n   * Resets local state for this cursor instance, and issues a `killCursors` command to the server\n   *\n   * @param {resultCallback} callback A callback function\n   */\n  kill(callback) {\n    // Set cursor to dead\n    this.cursorState.dead = true;\n    this.cursorState.killed = true;\n    // Remove documents\n    this.cursorState.documents = [];\n\n    // If no cursor id just return\n    if (\n      this.cursorState.cursorId == null ||\n      this.cursorState.cursorId.isZero() ||\n      this.cursorState.init === false\n    ) {\n      if (callback) callback(null, null);\n      return;\n    }\n\n    this.server.killCursors(this.ns, this.cursorState, callback);\n  }\n\n  /**\n   * Resets the cursor\n   */\n  rewind() {\n    if (this.cursorState.init) {\n      if (!this.cursorState.dead) {\n        this.kill();\n      }\n\n      this.cursorState.currentLimit = 0;\n      this.cursorState.init = false;\n      this.cursorState.dead = false;\n      this.cursorState.killed = false;\n      this.cursorState.notified = false;\n      this.cursorState.documents = [];\n      this.cursorState.cursorId = null;\n      this.cursorState.cursorIndex = 0;\n    }\n  }\n\n  // Internal methods\n  _read() {\n    if ((this.s && this.s.state === CursorState.CLOSED) || this.isDead()) {\n      return this.push(null);\n    }\n\n    // Get the next item\n    this._next((err, result) => {\n      if (err) {\n        if (this.listeners('error') && this.listeners('error').length > 0) {\n          this.emit('error', err);\n        }\n        if (!this.isDead()) this.close();\n\n        // Emit end event\n        this.emit('end');\n        return this.emit('finish');\n      }\n\n      // If we provided a transformation method\n      if (\n        this.cursorState.streamOptions &&\n        typeof this.cursorState.streamOptions.transform === 'function' &&\n        result != null\n      ) {\n        return this.push(this.cursorState.streamOptions.transform(result));\n      }\n\n      // Return the result\n      this.push(result);\n\n      if (result === null && this.isDead()) {\n        this.once('end', () => {\n          this.close();\n          this.emit('finish');\n        });\n      }\n    });\n  }\n\n  _endSession(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    options = options || {};\n\n    const session = this.cursorState.session;\n\n    if (session && (options.force || session.owner === this)) {\n      this.cursorState.session = undefined;\n\n      if (this.operation) {\n        this.operation.clearSession();\n      }\n\n      session.endSession(callback);\n      return true;\n    }\n\n    if (callback) {\n      callback();\n    }\n\n    return false;\n  }\n\n  _getMore(callback) {\n    if (this.logger.isDebug()) {\n      this.logger.debug(`schedule getMore call for query [${JSON.stringify(this.query)}]`);\n    }\n\n    // Set the current batchSize\n    let batchSize = this.cursorState.batchSize;\n    if (\n      this.cursorState.limit > 0 &&\n      this.cursorState.currentLimit + batchSize > this.cursorState.limit\n    ) {\n      batchSize = this.cursorState.limit - this.cursorState.currentLimit;\n    }\n\n    const cursorState = this.cursorState;\n    this.server.getMore(this.ns, cursorState, batchSize, this.options, (err, result, conn) => {\n      // NOTE: `getMore` modifies `cursorState`, would be very ideal not to do so in the future\n      if (err || (cursorState.cursorId && cursorState.cursorId.isZero())) {\n        this._endSession();\n      }\n\n      callback(err, result, conn);\n    });\n  }\n\n  _initializeCursor(callback) {\n    const cursor = this;\n\n    // NOTE: this goes away once cursors use `executeOperation`\n    if (isUnifiedTopology(cursor.topology) && cursor.topology.shouldCheckForSessionSupport()) {\n      cursor.topology.selectServer(ReadPreference.primaryPreferred, err => {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        this._initializeCursor(callback);\n      });\n\n      return;\n    }\n\n    function done(err, result) {\n      const cursorState = cursor.cursorState;\n      if (err || (cursorState.cursorId && cursorState.cursorId.isZero())) {\n        cursor._endSession();\n      }\n\n      if (\n        cursorState.documents.length === 0 &&\n        cursorState.cursorId &&\n        cursorState.cursorId.isZero() &&\n        !cursor.cmd.tailable &&\n        !cursor.cmd.awaitData\n      ) {\n        return setCursorNotified(cursor, callback);\n      }\n\n      callback(err, result);\n    }\n\n    const queryCallback = (err, r) => {\n      if (err) {\n        return done(err);\n      }\n\n      const result = r.message;\n\n      if (Array.isArray(result.documents) && result.documents.length === 1) {\n        const document = result.documents[0];\n\n        if (result.queryFailure) {\n          return done(new MongoError(document), null);\n        }\n\n        // Check if we have a command cursor\n        if (!cursor.cmd.find || (cursor.cmd.find && cursor.cmd.virtual === false)) {\n          // We have an error document, return the error\n          if (document.$err || document.errmsg) {\n            return done(new MongoError(document), null);\n          }\n\n          // We have a cursor document\n          if (document.cursor != null && typeof document.cursor !== 'string') {\n            const id = document.cursor.id;\n            // If we have a namespace change set the new namespace for getmores\n            if (document.cursor.ns) {\n              cursor.ns = document.cursor.ns;\n            }\n            // Promote id to long if needed\n            cursor.cursorState.cursorId = typeof id === 'number' ? Long.fromNumber(id) : id;\n            cursor.cursorState.lastCursorId = cursor.cursorState.cursorId;\n            cursor.cursorState.operationTime = document.operationTime;\n\n            // If we have a firstBatch set it\n            if (Array.isArray(document.cursor.firstBatch)) {\n              cursor.cursorState.documents = document.cursor.firstBatch; //.reverse();\n            }\n\n            // Return after processing command cursor\n            return done(null, result);\n          }\n        }\n      }\n\n      // Otherwise fall back to regular find path\n      const cursorId = result.cursorId || 0;\n      cursor.cursorState.cursorId = cursorId instanceof Long ? cursorId : Long.fromNumber(cursorId);\n      cursor.cursorState.documents = result.documents;\n      cursor.cursorState.lastCursorId = result.cursorId;\n\n      // Transform the results with passed in transformation method if provided\n      if (\n        cursor.cursorState.transforms &&\n        typeof cursor.cursorState.transforms.query === 'function'\n      ) {\n        cursor.cursorState.documents = cursor.cursorState.transforms.query(result);\n      }\n\n      done(null, result);\n    };\n\n    if (cursor.operation) {\n      if (cursor.logger.isDebug()) {\n        cursor.logger.debug(\n          `issue initial query [${JSON.stringify(cursor.cmd)}] with flags [${JSON.stringify(\n            cursor.query\n          )}]`\n        );\n      }\n\n      executeOperation(cursor.topology, cursor.operation, (err, result) => {\n        if (err) {\n          done(err);\n          return;\n        }\n\n        cursor.server = cursor.operation.server;\n        cursor.cursorState.init = true;\n\n        // NOTE: this is a special internal method for cloning a cursor, consider removing\n        if (cursor.cursorState.cursorId != null) {\n          return done();\n        }\n\n        queryCallback(err, result);\n      });\n\n      return;\n    }\n\n    // Very explicitly choose what is passed to selectServer\n    const serverSelectOptions = {};\n    if (cursor.cursorState.session) {\n      serverSelectOptions.session = cursor.cursorState.session;\n    }\n\n    if (cursor.operation) {\n      serverSelectOptions.readPreference = cursor.operation.readPreference;\n    } else if (cursor.options.readPreference) {\n      serverSelectOptions.readPreference = cursor.options.readPreference;\n    }\n\n    return cursor.topology.selectServer(serverSelectOptions, (err, server) => {\n      if (err) {\n        const disconnectHandler = cursor.disconnectHandler;\n        if (disconnectHandler != null) {\n          return disconnectHandler.addObjectAndMethod(\n            'cursor',\n            cursor,\n            'next',\n            [callback],\n            callback\n          );\n        }\n\n        return callback(err);\n      }\n\n      cursor.server = server;\n      cursor.cursorState.init = true;\n      if (collationNotSupported(cursor.server, cursor.cmd)) {\n        return callback(new MongoError(`server ${cursor.server.name} does not support collation`));\n      }\n\n      // NOTE: this is a special internal method for cloning a cursor, consider removing\n      if (cursor.cursorState.cursorId != null) {\n        return done();\n      }\n\n      if (cursor.logger.isDebug()) {\n        cursor.logger.debug(\n          `issue initial query [${JSON.stringify(cursor.cmd)}] with flags [${JSON.stringify(\n            cursor.query\n          )}]`\n        );\n      }\n\n      if (cursor.cmd.find != null) {\n        server.query(cursor.ns, cursor.cmd, cursor.cursorState, cursor.options, queryCallback);\n        return;\n      }\n\n      const commandOptions = Object.assign({ session: cursor.cursorState.session }, cursor.options);\n      server.command(cursor.ns, cursor.cmd, commandOptions, queryCallback);\n    });\n  }\n}\n\nif (SUPPORTS.ASYNC_ITERATOR) {\n  CoreCursor.prototype[Symbol.asyncIterator] = require('../async/async_iterator').asyncIterator;\n}\n\n/**\n * Validate if the pool is dead and return error\n */\nfunction isConnectionDead(self, callback) {\n  if (self.pool && self.pool.isDestroyed()) {\n    self.cursorState.killed = true;\n    const err = new MongoNetworkError(\n      `connection to host ${self.pool.host}:${self.pool.port} was destroyed`\n    );\n\n    _setCursorNotifiedImpl(self, () => callback(err));\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Validate if the cursor is dead but was not explicitly killed by user\n */\nfunction isCursorDeadButNotkilled(self, callback) {\n  // Cursor is dead but not marked killed, return null\n  if (self.cursorState.dead && !self.cursorState.killed) {\n    self.cursorState.killed = true;\n    setCursorNotified(self, callback);\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Validate if the cursor is dead and was killed by user\n */\nfunction isCursorDeadAndKilled(self, callback) {\n  if (self.cursorState.dead && self.cursorState.killed) {\n    handleCallback(callback, new MongoError('cursor is dead'));\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Validate if the cursor was killed by the user\n */\nfunction isCursorKilled(self, callback) {\n  if (self.cursorState.killed) {\n    setCursorNotified(self, callback);\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Mark cursor as being dead and notified\n */\nfunction setCursorDeadAndNotified(self, callback) {\n  self.cursorState.dead = true;\n  setCursorNotified(self, callback);\n}\n\n/**\n * Mark cursor as being notified\n */\nfunction setCursorNotified(self, callback) {\n  _setCursorNotifiedImpl(self, () => handleCallback(callback, null, null));\n}\n\nfunction _setCursorNotifiedImpl(self, callback) {\n  self.cursorState.notified = true;\n  self.cursorState.documents = [];\n  self.cursorState.cursorIndex = 0;\n\n  if (self.cursorState.session) {\n    self._endSession(callback);\n    return;\n  }\n\n  return callback();\n}\n\nfunction nextFunction(self, callback) {\n  // We have notified about it\n  if (self.cursorState.notified) {\n    return callback(new Error('cursor is exhausted'));\n  }\n\n  // Cursor is killed return null\n  if (isCursorKilled(self, callback)) return;\n\n  // Cursor is dead but not marked killed, return null\n  if (isCursorDeadButNotkilled(self, callback)) return;\n\n  // We have a dead and killed cursor, attempting to call next should error\n  if (isCursorDeadAndKilled(self, callback)) return;\n\n  // We have just started the cursor\n  if (!self.cursorState.init) {\n    // Topology is not connected, save the call in the provided store to be\n    // Executed at some point when the handler deems it's reconnected\n    if (!self.topology.isConnected(self.options)) {\n      // Only need this for single server, because repl sets and mongos\n      // will always continue trying to reconnect\n      if (self.topology._type === 'server' && !self.topology.s.options.reconnect) {\n        // Reconnect is disabled, so we'll never reconnect\n        return callback(new MongoError('no connection available'));\n      }\n\n      if (self.disconnectHandler != null) {\n        if (self.topology.isDestroyed()) {\n          // Topology was destroyed, so don't try to wait for it to reconnect\n          return callback(new MongoError('Topology was destroyed'));\n        }\n\n        self.disconnectHandler.addObjectAndMethod('cursor', self, 'next', [callback], callback);\n        return;\n      }\n    }\n\n    self._initializeCursor((err, result) => {\n      if (err || result === null) {\n        callback(err, result);\n        return;\n      }\n\n      nextFunction(self, callback);\n    });\n\n    return;\n  }\n\n  if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n    // Ensure we kill the cursor on the server\n    self.kill(() =>\n      // Set cursor in dead and notified state\n      setCursorDeadAndNotified(self, callback)\n    );\n  } else if (\n    self.cursorState.cursorIndex === self.cursorState.documents.length &&\n    !Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    // Ensure an empty cursor state\n    self.cursorState.documents = [];\n    self.cursorState.cursorIndex = 0;\n\n    // Check if topology is destroyed\n    if (self.topology.isDestroyed())\n      return callback(\n        new MongoNetworkError('connection destroyed, not possible to instantiate cursor')\n      );\n\n    // Check if connection is dead and return if not possible to\n    // execute a getMore on this connection\n    if (isConnectionDead(self, callback)) return;\n\n    // Execute the next get more\n    self._getMore(function(err, doc, connection) {\n      if (err) {\n        return handleCallback(callback, err);\n      }\n\n      // Save the returned connection to ensure all getMore's fire over the same connection\n      self.connection = connection;\n\n      // Tailable cursor getMore result, notify owner about it\n      // No attempt is made here to retry, this is left to the user of the\n      // core module to handle to keep core simple\n      if (\n        self.cursorState.documents.length === 0 &&\n        self.cmd.tailable &&\n        Long.ZERO.equals(self.cursorState.cursorId)\n      ) {\n        // No more documents in the tailed cursor\n        return handleCallback(\n          callback,\n          new MongoError({\n            message: 'No more documents in tailed cursor',\n            tailable: self.cmd.tailable,\n            awaitData: self.cmd.awaitData\n          })\n        );\n      } else if (\n        self.cursorState.documents.length === 0 &&\n        self.cmd.tailable &&\n        !Long.ZERO.equals(self.cursorState.cursorId)\n      ) {\n        return nextFunction(self, callback);\n      }\n\n      if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n        return setCursorDeadAndNotified(self, callback);\n      }\n\n      nextFunction(self, callback);\n    });\n  } else if (\n    self.cursorState.documents.length === self.cursorState.cursorIndex &&\n    self.cmd.tailable &&\n    Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    return handleCallback(\n      callback,\n      new MongoError({\n        message: 'No more documents in tailed cursor',\n        tailable: self.cmd.tailable,\n        awaitData: self.cmd.awaitData\n      })\n    );\n  } else if (\n    self.cursorState.documents.length === self.cursorState.cursorIndex &&\n    Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    setCursorDeadAndNotified(self, callback);\n  } else {\n    if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n      // Ensure we kill the cursor on the server\n      self.kill(() =>\n        // Set cursor in dead and notified state\n        setCursorDeadAndNotified(self, callback)\n      );\n\n      return;\n    }\n\n    // Increment the current cursor limit\n    self.cursorState.currentLimit += 1;\n\n    // Get the document\n    let doc = self.cursorState.documents[self.cursorState.cursorIndex++];\n\n    // Doc overflow\n    if (!doc || doc.$err) {\n      // Ensure we kill the cursor on the server\n      self.kill(() =>\n        // Set cursor in dead and notified state\n        setCursorDeadAndNotified(self, function() {\n          handleCallback(callback, new MongoError(doc ? doc.$err : undefined));\n        })\n      );\n\n      return;\n    }\n\n    // Transform the doc with passed in transformation method if provided\n    if (self.cursorState.transforms && typeof self.cursorState.transforms.doc === 'function') {\n      doc = self.cursorState.transforms.doc(doc);\n    }\n\n    // Return the document\n    handleCallback(callback, null, doc);\n  }\n}\n\nmodule.exports = {\n  CursorState,\n  CoreCursor\n};\n","'use strict';\n\nconst kErrorLabels = Symbol('errorLabels');\n\n/**\n * Creates a new MongoError\n *\n * @augments Error\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n */\nclass MongoError extends Error {\n  constructor(message) {\n    if (message instanceof Error) {\n      super(message.message);\n      this.stack = message.stack;\n    } else {\n      if (typeof message === 'string') {\n        super(message);\n      } else {\n        super(message.message || message.errmsg || message.$err || 'n/a');\n        if (message.errorLabels) {\n          this[kErrorLabels] = new Set(message.errorLabels);\n        }\n\n        for (var name in message) {\n          if (name === 'errorLabels' || name === 'errmsg') {\n            continue;\n          }\n\n          this[name] = message[name];\n        }\n      }\n\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'MongoError';\n  }\n\n  /**\n   * Legacy name for server error responses\n   */\n  get errmsg() {\n    return this.message;\n  }\n\n  /**\n   * Creates a new MongoError object\n   *\n   * @param {Error|string|object} options The options used to create the error.\n   * @return {MongoError} A MongoError instance\n   * @deprecated Use `new MongoError()` instead.\n   */\n  static create(options) {\n    return new MongoError(options);\n  }\n\n  /**\n   * Checks the error to see if it has an error label\n   * @param {string} label The error label to check for\n   * @returns {boolean} returns true if the error has the provided error label\n   */\n  hasErrorLabel(label) {\n    if (this[kErrorLabels] == null) {\n      return false;\n    }\n\n    return this[kErrorLabels].has(label);\n  }\n\n  addErrorLabel(label) {\n    if (this[kErrorLabels] == null) {\n      this[kErrorLabels] = new Set();\n    }\n\n    this[kErrorLabels].add(label);\n  }\n\n  get errorLabels() {\n    return this[kErrorLabels] ? Array.from(this[kErrorLabels]) : [];\n  }\n}\n\nconst kBeforeHandshake = Symbol('beforeHandshake');\nfunction isNetworkErrorBeforeHandshake(err) {\n  return err[kBeforeHandshake] === true;\n}\n\n/**\n * An error indicating an issue with the network, including TCP\n * errors and timeouts.\n *\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n * @extends MongoError\n */\nclass MongoNetworkError extends MongoError {\n  constructor(message, options) {\n    super(message);\n    this.name = 'MongoNetworkError';\n\n    if (options && options.beforeHandshake === true) {\n      this[kBeforeHandshake] = true;\n    }\n  }\n}\n\n/**\n * An error indicating a network timeout occurred\n *\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {object} [options.beforeHandshake] Indicates the timeout happened before a connection handshake completed\n * @extends MongoError\n */\nclass MongoNetworkTimeoutError extends MongoNetworkError {\n  constructor(message, options) {\n    super(message, options);\n    this.name = 'MongoNetworkTimeoutError';\n  }\n}\n\n/**\n * An error used when attempting to parse a value (like a connection string)\n *\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @extends MongoError\n */\nclass MongoParseError extends MongoError {\n  constructor(message) {\n    super(message);\n    this.name = 'MongoParseError';\n  }\n}\n\n/**\n * An error signifying a client-side timeout event\n *\n * @param {Error|string|object} message The error message\n * @param {string|object} [reason] The reason the timeout occured\n * @property {string} message The error message\n * @property {string} [reason] An optional reason context for the timeout, generally an error saved during flow of monitoring and selecting servers\n * @extends MongoError\n */\nclass MongoTimeoutError extends MongoError {\n  constructor(message, reason) {\n    if (reason && reason.error) {\n      super(reason.error.message || reason.error);\n    } else {\n      super(message);\n    }\n\n    this.name = 'MongoTimeoutError';\n    if (reason) {\n      this.reason = reason;\n    }\n  }\n}\n\n/**\n * An error signifying a client-side server selection error\n *\n * @param {Error|string|object} message The error message\n * @param {string|object} [reason] The reason the timeout occured\n * @property {string} message The error message\n * @property {string} [reason] An optional reason context for the timeout, generally an error saved during flow of monitoring and selecting servers\n * @extends MongoError\n */\nclass MongoServerSelectionError extends MongoTimeoutError {\n  constructor(message, reason) {\n    super(message, reason);\n    this.name = 'MongoServerSelectionError';\n  }\n}\n\nfunction makeWriteConcernResultObject(input) {\n  const output = Object.assign({}, input);\n\n  if (output.ok === 0) {\n    output.ok = 1;\n    delete output.errmsg;\n    delete output.code;\n    delete output.codeName;\n  }\n\n  return output;\n}\n\n/**\n * An error thrown when the server reports a writeConcernError\n *\n * @param {Error|string|object} message The error message\n * @param {object} result The result document (provided if ok: 1)\n * @property {string} message The error message\n * @property {object} [result] The result document (provided if ok: 1)\n * @extends MongoError\n */\nclass MongoWriteConcernError extends MongoError {\n  constructor(message, result) {\n    super(message);\n    this.name = 'MongoWriteConcernError';\n\n    if (result && Array.isArray(result.errorLabels)) {\n      this[kErrorLabels] = new Set(result.errorLabels);\n    }\n\n    if (result != null) {\n      this.result = makeWriteConcernResultObject(result);\n    }\n  }\n}\n\n// see: https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#terms\nconst RETRYABLE_ERROR_CODES = new Set([\n  6, // HostUnreachable\n  7, // HostNotFound\n  89, // NetworkTimeout\n  91, // ShutdownInProgress\n  189, // PrimarySteppedDown\n  9001, // SocketException\n  10107, // NotMaster\n  11600, // InterruptedAtShutdown\n  11602, // InterruptedDueToReplStateChange\n  13435, // NotMasterNoSlaveOk\n  13436 // NotMasterOrSecondary\n]);\n\nconst RETRYABLE_WRITE_ERROR_CODES = new Set([\n  11600, // InterruptedAtShutdown\n  11602, // InterruptedDueToReplStateChange\n  10107, // NotMaster\n  13435, // NotMasterNoSlaveOk\n  13436, // NotMasterOrSecondary\n  189, // PrimarySteppedDown\n  91, // ShutdownInProgress\n  7, // HostNotFound\n  6, // HostUnreachable\n  89, // NetworkTimeout\n  9001, // SocketException\n  262 // ExceededTimeLimit\n]);\n\nfunction isRetryableWriteError(error) {\n  if (error instanceof MongoWriteConcernError) {\n    return (\n      RETRYABLE_WRITE_ERROR_CODES.has(error.code) ||\n      RETRYABLE_WRITE_ERROR_CODES.has(error.result.code)\n    );\n  }\n\n  return RETRYABLE_WRITE_ERROR_CODES.has(error.code);\n}\n\n/**\n * Determines whether an error is something the driver should attempt to retry\n *\n * @ignore\n * @param {MongoError|Error} error\n */\nfunction isRetryableError(error) {\n  return (\n    RETRYABLE_ERROR_CODES.has(error.code) ||\n    error instanceof MongoNetworkError ||\n    error.message.match(/not master/) ||\n    error.message.match(/node is recovering/)\n  );\n}\n\nconst SDAM_RECOVERING_CODES = new Set([\n  91, // ShutdownInProgress\n  189, // PrimarySteppedDown\n  11600, // InterruptedAtShutdown\n  11602, // InterruptedDueToReplStateChange\n  13436 // NotMasterOrSecondary\n]);\n\nconst SDAM_NOTMASTER_CODES = new Set([\n  10107, // NotMaster\n  13435 // NotMasterNoSlaveOk\n]);\n\nconst SDAM_NODE_SHUTTING_DOWN_ERROR_CODES = new Set([\n  11600, // InterruptedAtShutdown\n  91 // ShutdownInProgress\n]);\n\nfunction isRecoveringError(err) {\n  if (err.code && SDAM_RECOVERING_CODES.has(err.code)) {\n    return true;\n  }\n\n  return err.message.match(/not master or secondary/) || err.message.match(/node is recovering/);\n}\n\nfunction isNotMasterError(err) {\n  if (err.code && SDAM_NOTMASTER_CODES.has(err.code)) {\n    return true;\n  }\n\n  if (isRecoveringError(err)) {\n    return false;\n  }\n\n  return err.message.match(/not master/);\n}\n\nfunction isNodeShuttingDownError(err) {\n  return err.code && SDAM_NODE_SHUTTING_DOWN_ERROR_CODES.has(err.code);\n}\n\n/**\n * Determines whether SDAM can recover from a given error. If it cannot\n * then the pool will be cleared, and server state will completely reset\n * locally.\n *\n * @ignore\n * @see https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-master-and-node-is-recovering\n * @param {MongoError|Error} error\n */\nfunction isSDAMUnrecoverableError(error) {\n  // NOTE: null check is here for a strictly pre-CMAP world, a timeout or\n  //       close event are considered unrecoverable\n  if (error instanceof MongoParseError || error == null) {\n    return true;\n  }\n\n  if (isRecoveringError(error) || isNotMasterError(error)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  MongoError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoParseError,\n  MongoTimeoutError,\n  MongoServerSelectionError,\n  MongoWriteConcernError,\n  isRetryableError,\n  isSDAMUnrecoverableError,\n  isNodeShuttingDownError,\n  isRetryableWriteError,\n  isNetworkErrorBeforeHandshake\n};\n","'use strict';\n\nlet BSON = require('bson');\nconst require_optional = require('require_optional');\nconst EJSON = require('./utils').retrieveEJSON();\n\ntry {\n  // Attempt to grab the native BSON parser\n  const BSONNative = require_optional('bson-ext');\n  // If we got the native parser, use it instead of the\n  // Javascript one\n  if (BSONNative) {\n    BSON = BSONNative;\n  }\n} catch (err) {} // eslint-disable-line\n\nmodule.exports = {\n  // Errors\n  MongoError: require('./error').MongoError,\n  MongoNetworkError: require('./error').MongoNetworkError,\n  MongoParseError: require('./error').MongoParseError,\n  MongoTimeoutError: require('./error').MongoTimeoutError,\n  MongoServerSelectionError: require('./error').MongoServerSelectionError,\n  MongoWriteConcernError: require('./error').MongoWriteConcernError,\n  // Core\n  Connection: require('./connection/connection'),\n  Server: require('./topologies/server'),\n  ReplSet: require('./topologies/replset'),\n  Mongos: require('./topologies/mongos'),\n  Logger: require('./connection/logger'),\n  Cursor: require('./cursor').CoreCursor,\n  ReadPreference: require('./topologies/read_preference'),\n  Sessions: require('./sessions'),\n  BSON: BSON,\n  EJSON: EJSON,\n  Topology: require('./sdam/topology').Topology,\n  // Raw operations\n  Query: require('./connection/commands').Query,\n  // Auth mechanisms\n  MongoCredentials: require('./auth/mongo_credentials').MongoCredentials,\n  defaultAuthProviders: require('./auth/defaultAuthProviders').defaultAuthProviders,\n  MongoCR: require('./auth/mongocr'),\n  X509: require('./auth/x509'),\n  Plain: require('./auth/plain'),\n  GSSAPI: require('./auth/gssapi'),\n  ScramSHA1: require('./auth/scram').ScramSHA1,\n  ScramSHA256: require('./auth/scram').ScramSHA256,\n  // Utilities\n  parseConnectionString: require('./uri_parser')\n};\n","'use strict';\n\n// shared state names\nconst STATE_CLOSING = 'closing';\nconst STATE_CLOSED = 'closed';\nconst STATE_CONNECTING = 'connecting';\nconst STATE_CONNECTED = 'connected';\n\n// An enumeration of topology types we know about\nconst TopologyType = {\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown'\n};\n\n// An enumeration of server types we know about\nconst ServerType = {\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown'\n};\n\n// helper to get a server's type that works for both legacy and unified topologies\nfunction serverType(server) {\n  let description = server.s.description || server.s.serverDescription;\n  if (description.topologyType === TopologyType.Single) return description.servers[0].type;\n  return description.type;\n}\n\nconst TOPOLOGY_DEFAULTS = {\n  useUnifiedTopology: true,\n  localThresholdMS: 15,\n  serverSelectionTimeoutMS: 30000,\n  heartbeatFrequencyMS: 10000,\n  minHeartbeatFrequencyMS: 500\n};\n\nfunction drainTimerQueue(queue) {\n  queue.forEach(clearTimeout);\n  queue.clear();\n}\n\nfunction clearAndRemoveTimerFrom(timer, timers) {\n  clearTimeout(timer);\n  return timers.delete(timer);\n}\n\nmodule.exports = {\n  STATE_CLOSING,\n  STATE_CLOSED,\n  STATE_CONNECTING,\n  STATE_CONNECTED,\n  TOPOLOGY_DEFAULTS,\n  TopologyType,\n  ServerType,\n  serverType,\n  drainTimerQueue,\n  clearAndRemoveTimerFrom\n};\n","'use strict';\n\n/**\n * Published when server description changes, but does NOT include changes to the RTT.\n *\n * @property {Object} topologyId A unique identifier for the topology\n * @property {ServerAddress} address The address (host/port pair) of the server\n * @property {ServerDescription} previousDescription The previous server description\n * @property {ServerDescription} newDescription The new server description\n */\nclass ServerDescriptionChangedEvent {\n  constructor(topologyId, address, previousDescription, newDescription) {\n    Object.assign(this, { topologyId, address, previousDescription, newDescription });\n  }\n}\n\n/**\n * Published when server is initialized.\n *\n * @property {Object} topologyId A unique identifier for the topology\n * @property {ServerAddress} address The address (host/port pair) of the server\n */\nclass ServerOpeningEvent {\n  constructor(topologyId, address) {\n    Object.assign(this, { topologyId, address });\n  }\n}\n\n/**\n * Published when server is closed.\n *\n * @property {ServerAddress} address The address (host/port pair) of the server\n * @property {Object} topologyId A unique identifier for the topology\n */\nclass ServerClosedEvent {\n  constructor(topologyId, address) {\n    Object.assign(this, { topologyId, address });\n  }\n}\n\n/**\n * Published when topology description changes.\n *\n * @property {Object} topologyId\n * @property {TopologyDescription} previousDescription The old topology description\n * @property {TopologyDescription} newDescription The new topology description\n */\nclass TopologyDescriptionChangedEvent {\n  constructor(topologyId, previousDescription, newDescription) {\n    Object.assign(this, { topologyId, previousDescription, newDescription });\n  }\n}\n\n/**\n * Published when topology is initialized.\n *\n * @param {Object} topologyId A unique identifier for the topology\n */\nclass TopologyOpeningEvent {\n  constructor(topologyId) {\n    Object.assign(this, { topologyId });\n  }\n}\n\n/**\n * Published when topology is closed.\n *\n * @param {Object} topologyId A unique identifier for the topology\n */\nclass TopologyClosedEvent {\n  constructor(topologyId) {\n    Object.assign(this, { topologyId });\n  }\n}\n\n/**\n * Fired when the server monitor’s ismaster command is started - immediately before\n * the ismaster command is serialized into raw BSON and written to the socket.\n *\n * @property {Object} connectionId The connection id for the command\n */\nclass ServerHeartbeatStartedEvent {\n  constructor(connectionId) {\n    Object.assign(this, { connectionId });\n  }\n}\n\n/**\n * Fired when the server monitor’s ismaster succeeds.\n *\n * @param {Number} duration The execution time of the event in ms\n * @param {Object} reply The command reply\n * @param {Object} connectionId The connection id for the command\n */\nclass ServerHeartbeatSucceededEvent {\n  constructor(duration, reply, connectionId) {\n    Object.assign(this, { connectionId, duration, reply });\n  }\n}\n\n/**\n * Fired when the server monitor’s ismaster fails, either with an “ok: 0” or a socket exception.\n *\n * @param {Number} duration The execution time of the event in ms\n * @param {MongoError|Object} failure The command failure\n * @param {Object} connectionId The connection id for the command\n */\nclass ServerHeartbeatFailedEvent {\n  constructor(duration, failure, connectionId) {\n    Object.assign(this, { connectionId, duration, failure });\n  }\n}\n\nmodule.exports = {\n  ServerDescriptionChangedEvent,\n  ServerOpeningEvent,\n  ServerClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent,\n  TopologyClosedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent,\n  ServerHeartbeatFailedEvent\n};\n","'use strict';\n\nconst ServerType = require('./common').ServerType;\nconst EventEmitter = require('events');\nconst connect = require('../connection/connect');\nconst Connection = require('../../cmap/connection').Connection;\nconst common = require('./common');\nconst makeStateMachine = require('../utils').makeStateMachine;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst BSON = require('../connection/utils').retrieveBSON();\nconst makeInterruptableAsyncInterval = require('../../utils').makeInterruptableAsyncInterval;\nconst calculateDurationInMs = require('../../utils').calculateDurationInMs;\nconst now = require('../../utils').now;\n\nconst sdamEvents = require('./events');\nconst ServerHeartbeatStartedEvent = sdamEvents.ServerHeartbeatStartedEvent;\nconst ServerHeartbeatSucceededEvent = sdamEvents.ServerHeartbeatSucceededEvent;\nconst ServerHeartbeatFailedEvent = sdamEvents.ServerHeartbeatFailedEvent;\n\nconst kServer = Symbol('server');\nconst kMonitorId = Symbol('monitorId');\nconst kConnection = Symbol('connection');\nconst kCancellationToken = Symbol('cancellationToken');\nconst kRTTPinger = Symbol('rttPinger');\nconst kRoundTripTime = Symbol('roundTripTime');\n\nconst STATE_CLOSED = common.STATE_CLOSED;\nconst STATE_CLOSING = common.STATE_CLOSING;\nconst STATE_IDLE = 'idle';\nconst STATE_MONITORING = 'monitoring';\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_IDLE, STATE_CLOSED],\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_MONITORING],\n  [STATE_IDLE]: [STATE_IDLE, STATE_MONITORING, STATE_CLOSING],\n  [STATE_MONITORING]: [STATE_MONITORING, STATE_IDLE, STATE_CLOSING]\n});\n\nconst INVALID_REQUEST_CHECK_STATES = new Set([STATE_CLOSING, STATE_CLOSED, STATE_MONITORING]);\n\nfunction isInCloseState(monitor) {\n  return monitor.s.state === STATE_CLOSED || monitor.s.state === STATE_CLOSING;\n}\n\nclass Monitor extends EventEmitter {\n  constructor(server, options) {\n    super(options);\n\n    this[kServer] = server;\n    this[kConnection] = undefined;\n    this[kCancellationToken] = new EventEmitter();\n    this[kCancellationToken].setMaxListeners(Infinity);\n    this[kMonitorId] = null;\n    this.s = {\n      state: STATE_CLOSED\n    };\n\n    this.address = server.description.address;\n    this.options = Object.freeze({\n      connectTimeoutMS:\n        typeof options.connectionTimeout === 'number'\n          ? options.connectionTimeout\n          : typeof options.connectTimeoutMS === 'number'\n          ? options.connectTimeoutMS\n          : 10000,\n      heartbeatFrequencyMS:\n        typeof options.heartbeatFrequencyMS === 'number' ? options.heartbeatFrequencyMS : 10000,\n      minHeartbeatFrequencyMS:\n        typeof options.minHeartbeatFrequencyMS === 'number' ? options.minHeartbeatFrequencyMS : 500\n    });\n\n    // TODO: refactor this to pull it directly from the pool, requires new ConnectionPool integration\n    const connectOptions = Object.assign(\n      {\n        id: '<monitor>',\n        host: server.description.host,\n        port: server.description.port,\n        bson: server.s.bson,\n        connectionType: Connection\n      },\n      server.s.options,\n      this.options,\n\n      // force BSON serialization options\n      {\n        raw: false,\n        promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: true\n      }\n    );\n\n    // ensure no authentication is used for monitoring\n    delete connectOptions.credentials;\n    this.connectOptions = Object.freeze(connectOptions);\n  }\n\n  connect() {\n    if (this.s.state !== STATE_CLOSED) {\n      return;\n    }\n\n    // start\n    const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n    const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n    this[kMonitorId] = makeInterruptableAsyncInterval(monitorServer(this), {\n      interval: heartbeatFrequencyMS,\n      minInterval: minHeartbeatFrequencyMS,\n      immediate: true\n    });\n  }\n\n  requestCheck() {\n    if (INVALID_REQUEST_CHECK_STATES.has(this.s.state)) {\n      return;\n    }\n\n    this[kMonitorId].wake();\n  }\n\n  reset() {\n    const topologyVersion = this[kServer].description.topologyVersion;\n    if (isInCloseState(this) || topologyVersion == null) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n    resetMonitorState(this);\n\n    // restart monitor\n    stateTransition(this, STATE_IDLE);\n\n    // restart monitoring\n    const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n    const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n    this[kMonitorId] = makeInterruptableAsyncInterval(monitorServer(this), {\n      interval: heartbeatFrequencyMS,\n      minInterval: minHeartbeatFrequencyMS\n    });\n  }\n\n  close() {\n    if (isInCloseState(this)) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n    resetMonitorState(this);\n\n    // close monitor\n    this.emit('close');\n    stateTransition(this, STATE_CLOSED);\n  }\n}\n\nfunction resetMonitorState(monitor) {\n  if (monitor[kMonitorId]) {\n    monitor[kMonitorId].stop();\n    monitor[kMonitorId] = null;\n  }\n\n  if (monitor[kRTTPinger]) {\n    monitor[kRTTPinger].close();\n    monitor[kRTTPinger] = undefined;\n  }\n\n  monitor[kCancellationToken].emit('cancel');\n  if (monitor[kMonitorId]) {\n    clearTimeout(monitor[kMonitorId]);\n    monitor[kMonitorId] = undefined;\n  }\n\n  if (monitor[kConnection]) {\n    monitor[kConnection].destroy({ force: true });\n  }\n}\n\nfunction checkServer(monitor, callback) {\n  let start = now();\n  monitor.emit('serverHeartbeatStarted', new ServerHeartbeatStartedEvent(monitor.address));\n\n  function failureHandler(err) {\n    if (monitor[kConnection]) {\n      monitor[kConnection].destroy({ force: true });\n      monitor[kConnection] = undefined;\n    }\n\n    monitor.emit(\n      'serverHeartbeatFailed',\n      new ServerHeartbeatFailedEvent(calculateDurationInMs(start), err, monitor.address)\n    );\n\n    monitor.emit('resetServer', err);\n    monitor.emit('resetConnectionPool');\n    callback(err);\n  }\n\n  if (monitor[kConnection] != null && !monitor[kConnection].closed) {\n    const connectTimeoutMS = monitor.options.connectTimeoutMS;\n    const maxAwaitTimeMS = monitor.options.heartbeatFrequencyMS;\n    const topologyVersion = monitor[kServer].description.topologyVersion;\n    const isAwaitable = topologyVersion != null;\n\n    const cmd = { ismaster: true };\n    const options = { socketTimeout: connectTimeoutMS };\n\n    if (isAwaitable) {\n      cmd.maxAwaitTimeMS = maxAwaitTimeMS;\n      cmd.topologyVersion = makeTopologyVersion(topologyVersion);\n      if (connectTimeoutMS) {\n        options.socketTimeout = connectTimeoutMS + maxAwaitTimeMS;\n      }\n      options.exhaustAllowed = true;\n      if (monitor[kRTTPinger] == null) {\n        monitor[kRTTPinger] = new RTTPinger(monitor[kCancellationToken], monitor.connectOptions);\n      }\n    }\n\n    monitor[kConnection].command('admin.$cmd', cmd, options, (err, result) => {\n      if (err) {\n        failureHandler(err);\n        return;\n      }\n\n      const isMaster = result.result;\n      const duration = isAwaitable\n        ? monitor[kRTTPinger].roundTripTime\n        : calculateDurationInMs(start);\n\n      monitor.emit(\n        'serverHeartbeatSucceeded',\n        new ServerHeartbeatSucceededEvent(duration, isMaster, monitor.address)\n      );\n\n      // if we are using the streaming protocol then we immediately issue another `started`\n      // event, otherwise the \"check\" is complete and return to the main monitor loop\n      if (isAwaitable && isMaster.topologyVersion) {\n        monitor.emit('serverHeartbeatStarted', new ServerHeartbeatStartedEvent(monitor.address));\n        start = now();\n      } else {\n        if (monitor[kRTTPinger]) {\n          monitor[kRTTPinger].close();\n          monitor[kRTTPinger] = undefined;\n        }\n\n        callback(undefined, isMaster);\n      }\n    });\n\n    return;\n  }\n\n  // connecting does an implicit `ismaster`\n  connect(monitor.connectOptions, monitor[kCancellationToken], (err, conn) => {\n    if (conn && isInCloseState(monitor)) {\n      conn.destroy({ force: true });\n      return;\n    }\n\n    if (err) {\n      monitor[kConnection] = undefined;\n\n      // we already reset the connection pool on network errors in all cases\n      if (!(err instanceof MongoNetworkError)) {\n        monitor.emit('resetConnectionPool');\n      }\n\n      failureHandler(err);\n      return;\n    }\n\n    monitor[kConnection] = conn;\n    monitor.emit(\n      'serverHeartbeatSucceeded',\n      new ServerHeartbeatSucceededEvent(\n        calculateDurationInMs(start),\n        conn.ismaster,\n        monitor.address\n      )\n    );\n\n    callback(undefined, conn.ismaster);\n  });\n}\n\nfunction monitorServer(monitor) {\n  return callback => {\n    stateTransition(monitor, STATE_MONITORING);\n    function done() {\n      if (!isInCloseState(monitor)) {\n        stateTransition(monitor, STATE_IDLE);\n      }\n\n      callback();\n    }\n\n    // TODO: the next line is a legacy event, remove in v4\n    process.nextTick(() => monitor.emit('monitoring', monitor[kServer]));\n\n    checkServer(monitor, (err, isMaster) => {\n      if (err) {\n        // otherwise an error occured on initial discovery, also bail\n        if (monitor[kServer].description.type === ServerType.Unknown) {\n          monitor.emit('resetServer', err);\n          return done();\n        }\n      }\n\n      // if the check indicates streaming is supported, immediately reschedule monitoring\n      if (isMaster && isMaster.topologyVersion) {\n        setTimeout(() => {\n          if (!isInCloseState(monitor)) {\n            monitor[kMonitorId].wake();\n          }\n        });\n      }\n\n      done();\n    });\n  };\n}\n\nfunction makeTopologyVersion(tv) {\n  return {\n    processId: tv.processId,\n    counter: BSON.Long.fromNumber(tv.counter)\n  };\n}\n\nclass RTTPinger {\n  constructor(cancellationToken, options) {\n    this[kConnection] = null;\n    this[kCancellationToken] = cancellationToken;\n    this[kRoundTripTime] = 0;\n    this.closed = false;\n\n    const heartbeatFrequencyMS = options.heartbeatFrequencyMS;\n    this[kMonitorId] = setTimeout(() => measureRoundTripTime(this, options), heartbeatFrequencyMS);\n  }\n\n  get roundTripTime() {\n    return this[kRoundTripTime];\n  }\n\n  close() {\n    this.closed = true;\n\n    clearTimeout(this[kMonitorId]);\n    this[kMonitorId] = undefined;\n\n    if (this[kConnection]) {\n      this[kConnection].destroy({ force: true });\n    }\n  }\n}\n\nfunction measureRoundTripTime(rttPinger, options) {\n  const start = now();\n  const cancellationToken = rttPinger[kCancellationToken];\n  const heartbeatFrequencyMS = options.heartbeatFrequencyMS;\n  if (rttPinger.closed) {\n    return;\n  }\n\n  function measureAndReschedule(conn) {\n    if (rttPinger.closed) {\n      conn.destroy({ force: true });\n      return;\n    }\n\n    if (rttPinger[kConnection] == null) {\n      rttPinger[kConnection] = conn;\n    }\n\n    rttPinger[kRoundTripTime] = calculateDurationInMs(start);\n    rttPinger[kMonitorId] = setTimeout(\n      () => measureRoundTripTime(rttPinger, options),\n      heartbeatFrequencyMS\n    );\n  }\n\n  if (rttPinger[kConnection] == null) {\n    connect(options, cancellationToken, (err, conn) => {\n      if (err) {\n        rttPinger[kConnection] = undefined;\n        rttPinger[kRoundTripTime] = 0;\n        return;\n      }\n\n      measureAndReschedule(conn);\n    });\n\n    return;\n  }\n\n  rttPinger[kConnection].command('admin.$cmd', { ismaster: 1 }, err => {\n    if (err) {\n      rttPinger[kConnection] = undefined;\n      rttPinger[kRoundTripTime] = 0;\n      return;\n    }\n\n    measureAndReschedule();\n  });\n}\n\nmodule.exports = {\n  Monitor\n};\n","'use strict';\nconst EventEmitter = require('events');\nconst ConnectionPool = require('../../cmap/connection_pool').ConnectionPool;\nconst CMAP_EVENT_NAMES = require('../../cmap/events').CMAP_EVENT_NAMES;\nconst MongoError = require('../error').MongoError;\nconst relayEvents = require('../utils').relayEvents;\nconst BSON = require('../connection/utils').retrieveBSON();\nconst Logger = require('../connection/logger');\nconst ServerDescription = require('./server_description').ServerDescription;\nconst compareTopologyVersion = require('./server_description').compareTopologyVersion;\nconst ReadPreference = require('../topologies/read_preference');\nconst Monitor = require('./monitor').Monitor;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MongoNetworkTimeoutError = require('../error').MongoNetworkTimeoutError;\nconst collationNotSupported = require('../utils').collationNotSupported;\nconst debugOptions = require('../connection/utils').debugOptions;\nconst isSDAMUnrecoverableError = require('../error').isSDAMUnrecoverableError;\nconst isRetryableWriteError = require('../error').isRetryableWriteError;\nconst isNodeShuttingDownError = require('../error').isNodeShuttingDownError;\nconst isNetworkErrorBeforeHandshake = require('../error').isNetworkErrorBeforeHandshake;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst makeStateMachine = require('../utils').makeStateMachine;\nconst common = require('./common');\nconst ServerType = common.ServerType;\nconst isTransactionCommand = require('../transactions').isTransactionCommand;\n\n// Used for filtering out fields for logging\nconst DEBUG_FIELDS = [\n  'reconnect',\n  'reconnectTries',\n  'reconnectInterval',\n  'emitError',\n  'cursorFactory',\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'checkServerIdentity',\n  'socketTimeout',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'key',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'servername'\n];\n\nconst STATE_CLOSING = common.STATE_CLOSING;\nconst STATE_CLOSED = common.STATE_CLOSED;\nconst STATE_CONNECTING = common.STATE_CONNECTING;\nconst STATE_CONNECTED = common.STATE_CONNECTED;\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_CONNECTING],\n  [STATE_CONNECTING]: [STATE_CONNECTING, STATE_CLOSING, STATE_CONNECTED, STATE_CLOSED],\n  [STATE_CONNECTED]: [STATE_CONNECTED, STATE_CLOSING, STATE_CLOSED],\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_CLOSED]\n});\n\nconst kMonitor = Symbol('monitor');\n\n/**\n *\n * @fires Server#serverHeartbeatStarted\n * @fires Server#serverHeartbeatSucceeded\n * @fires Server#serverHeartbeatFailed\n */\nclass Server extends EventEmitter {\n  /**\n   * Create a server\n   *\n   * @param {ServerDescription} description\n   * @param {Object} options\n   */\n  constructor(description, options, topology) {\n    super();\n\n    this.s = {\n      // the server description\n      description,\n      // a saved copy of the incoming options\n      options,\n      // the server logger\n      logger: Logger('Server', options),\n      // the bson parser\n      bson:\n        options.bson ||\n        new BSON([\n          BSON.Binary,\n          BSON.Code,\n          BSON.DBRef,\n          BSON.Decimal128,\n          BSON.Double,\n          BSON.Int32,\n          BSON.Long,\n          BSON.Map,\n          BSON.MaxKey,\n          BSON.MinKey,\n          BSON.ObjectId,\n          BSON.BSONRegExp,\n          BSON.Symbol,\n          BSON.Timestamp\n        ]),\n      // the server state\n      state: STATE_CLOSED,\n      credentials: options.credentials,\n      topology\n    };\n\n    // create the connection pool\n    // NOTE: this used to happen in `connect`, we supported overriding pool options there\n    const poolOptions = Object.assign(\n      { host: this.description.host, port: this.description.port, bson: this.s.bson },\n      options\n    );\n\n    this.s.pool = new ConnectionPool(poolOptions);\n    relayEvents(\n      this.s.pool,\n      this,\n      ['commandStarted', 'commandSucceeded', 'commandFailed'].concat(CMAP_EVENT_NAMES)\n    );\n\n    this.s.pool.on('clusterTimeReceived', clusterTime => {\n      this.clusterTime = clusterTime;\n    });\n\n    // create the monitor\n    this[kMonitor] = new Monitor(this, this.s.options);\n    relayEvents(this[kMonitor], this, [\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n\n      // legacy events\n      'monitoring'\n    ]);\n\n    this[kMonitor].on('resetConnectionPool', () => {\n      this.s.pool.clear();\n    });\n\n    this[kMonitor].on('resetServer', error => markServerUnknown(this, error));\n    this[kMonitor].on('serverHeartbeatSucceeded', event => {\n      this.emit(\n        'descriptionReceived',\n        new ServerDescription(this.description.address, event.reply, {\n          roundTripTime: calculateRoundTripTime(this.description.roundTripTime, event.duration)\n        })\n      );\n\n      if (this.s.state === STATE_CONNECTING) {\n        stateTransition(this, STATE_CONNECTED);\n        this.emit('connect', this);\n      }\n    });\n  }\n\n  get description() {\n    return this.s.description;\n  }\n\n  get name() {\n    return this.s.description.address;\n  }\n\n  get autoEncrypter() {\n    if (this.s.options && this.s.options.autoEncrypter) {\n      return this.s.options.autoEncrypter;\n    }\n    return null;\n  }\n\n  /**\n   * Initiate server connect\n   */\n  connect() {\n    if (this.s.state !== STATE_CLOSED) {\n      return;\n    }\n\n    stateTransition(this, STATE_CONNECTING);\n    this[kMonitor].connect();\n  }\n\n  /**\n   * Destroy the server connection\n   *\n   * @param {object} [options] Optional settings\n   * @param {Boolean} [options.force=false] Force destroy the pool\n   */\n  destroy(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = Object.assign({}, { force: false }, options);\n\n    if (this.s.state === STATE_CLOSED) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n\n    this[kMonitor].close();\n    this.s.pool.close(options, err => {\n      stateTransition(this, STATE_CLOSED);\n      this.emit('closed');\n      if (typeof callback === 'function') {\n        callback(err);\n      }\n    });\n  }\n\n  /**\n   * Immediately schedule monitoring of this server. If there already an attempt being made\n   * this will be a no-op.\n   */\n  requestCheck() {\n    this[kMonitor].requestCheck();\n  }\n\n  /**\n   * Execute a command\n   *\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {object} cmd The command hash\n   * @param {object} [options] Optional settings\n   * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.checkKeys=false] Specify if the bson parser should validate keys.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {Boolean} [options.fullResult=false] Return the full envelope instead of just the result document.\n   * @param {ClientSession} [options.session] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  command(ns, cmd, options, callback) {\n    if (typeof options === 'function') {\n      (callback = options), (options = {}), (options = options || {});\n    }\n\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      callback(new MongoError('server is closed'));\n      return;\n    }\n\n    const error = basicReadValidations(this, options);\n    if (error) {\n      return callback(error);\n    }\n\n    // Clone the options\n    options = Object.assign({}, options, { wireProtocolCommand: false });\n\n    // Debug log\n    if (this.s.logger.isDebug()) {\n      this.s.logger.debug(\n        `executing command [${JSON.stringify({\n          ns,\n          cmd,\n          options: debugOptions(DEBUG_FIELDS, options)\n        })}] against ${this.name}`\n      );\n    }\n\n    // error if collation not supported\n    if (collationNotSupported(this, cmd)) {\n      callback(new MongoError(`server ${this.name} does not support collation`));\n      return;\n    }\n\n    this.s.pool.withConnection((err, conn, cb) => {\n      if (err) {\n        markServerUnknown(this, err);\n        return cb(err);\n      }\n\n      conn.command(ns, cmd, options, makeOperationHandler(this, conn, cmd, options, cb));\n    }, callback);\n  }\n\n  /**\n   * Execute a query against the server\n   *\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {object} cmd The command document for the query\n   * @param {object} options Optional settings\n   * @param {function} callback\n   */\n  query(ns, cmd, cursorState, options, callback) {\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      callback(new MongoError('server is closed'));\n      return;\n    }\n\n    this.s.pool.withConnection((err, conn, cb) => {\n      if (err) {\n        markServerUnknown(this, err);\n        return cb(err);\n      }\n\n      conn.query(ns, cmd, cursorState, options, makeOperationHandler(this, conn, cmd, options, cb));\n    }, callback);\n  }\n\n  /**\n   * Execute a `getMore` against the server\n   *\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {object} cursorState State data associated with the cursor calling this method\n   * @param {object} options Optional settings\n   * @param {function} callback\n   */\n  getMore(ns, cursorState, batchSize, options, callback) {\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      callback(new MongoError('server is closed'));\n      return;\n    }\n\n    this.s.pool.withConnection((err, conn, cb) => {\n      if (err) {\n        markServerUnknown(this, err);\n        return cb(err);\n      }\n\n      conn.getMore(\n        ns,\n        cursorState,\n        batchSize,\n        options,\n        makeOperationHandler(this, conn, null, options, cb)\n      );\n    }, callback);\n  }\n\n  /**\n   * Execute a `killCursors` command against the server\n   *\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {object} cursorState State data associated with the cursor calling this method\n   * @param {function} callback\n   */\n  killCursors(ns, cursorState, callback) {\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      if (typeof callback === 'function') {\n        callback(new MongoError('server is closed'));\n      }\n\n      return;\n    }\n\n    this.s.pool.withConnection((err, conn, cb) => {\n      if (err) {\n        markServerUnknown(this, err);\n        return cb(err);\n      }\n\n      conn.killCursors(ns, cursorState, makeOperationHandler(this, conn, null, undefined, cb));\n    }, callback);\n  }\n\n  /**\n   * Insert one or more documents\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of documents to insert\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  insert(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'insert', ns, ops }, options, callback);\n  }\n\n  /**\n   * Perform one or more update operations\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of updates\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  update(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'update', ns, ops }, options, callback);\n  }\n\n  /**\n   * Perform one or more remove operations\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of removes\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  remove(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'remove', ns, ops }, options, callback);\n  }\n}\n\nObject.defineProperty(Server.prototype, 'clusterTime', {\n  get: function() {\n    return this.s.topology.clusterTime;\n  },\n  set: function(clusterTime) {\n    this.s.topology.clusterTime = clusterTime;\n  }\n});\n\nfunction supportsRetryableWrites(server) {\n  return (\n    server.description.maxWireVersion >= 6 &&\n    server.description.logicalSessionTimeoutMinutes &&\n    server.description.type !== ServerType.Standalone\n  );\n}\n\nfunction calculateRoundTripTime(oldRtt, duration) {\n  if (oldRtt === -1) {\n    return duration;\n  }\n\n  const alpha = 0.2;\n  return alpha * duration + (1 - alpha) * oldRtt;\n}\n\nfunction basicReadValidations(server, options) {\n  if (options.readPreference && !(options.readPreference instanceof ReadPreference)) {\n    return new MongoError('readPreference must be an instance of ReadPreference');\n  }\n}\n\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const server = args.server;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = Array.isArray(args.ops) ? args.ops : [args.ops];\n\n  if (server.s.state === STATE_CLOSING || server.s.state === STATE_CLOSED) {\n    callback(new MongoError('server is closed'));\n    return;\n  }\n\n  if (collationNotSupported(server, options)) {\n    callback(new MongoError(`server ${server.name} does not support collation`));\n    return;\n  }\n  const unacknowledgedWrite = options.writeConcern && options.writeConcern.w === 0;\n  if (unacknowledgedWrite || maxWireVersion(server) < 5) {\n    if ((op === 'update' || op === 'remove') && ops.find(o => o.hint)) {\n      callback(new MongoError(`servers < 3.4 do not support hint on ${op}`));\n      return;\n    }\n  }\n\n  server.s.pool.withConnection((err, conn, cb) => {\n    if (err) {\n      markServerUnknown(server, err);\n      return cb(err);\n    }\n\n    conn[op](ns, ops, options, makeOperationHandler(server, conn, ops, options, cb));\n  }, callback);\n}\n\nfunction markServerUnknown(server, error) {\n  if (error instanceof MongoNetworkError && !(error instanceof MongoNetworkTimeoutError)) {\n    server[kMonitor].reset();\n  }\n\n  server.emit(\n    'descriptionReceived',\n    new ServerDescription(server.description.address, null, {\n      error,\n      topologyVersion:\n        error && error.topologyVersion ? error.topologyVersion : server.description.topologyVersion\n    })\n  );\n}\n\nfunction connectionIsStale(pool, connection) {\n  return connection.generation !== pool.generation;\n}\n\nfunction shouldHandleStateChangeError(server, err) {\n  const etv = err.topologyVersion;\n  const stv = server.description.topologyVersion;\n\n  return compareTopologyVersion(stv, etv) < 0;\n}\n\nfunction inActiveTransaction(session, cmd) {\n  return session && session.inTransaction() && !isTransactionCommand(cmd);\n}\n\nfunction makeOperationHandler(server, connection, cmd, options, callback) {\n  const session = options && options.session;\n\n  return function handleOperationResult(err, result) {\n    if (err && !connectionIsStale(server.s.pool, connection)) {\n      if (err instanceof MongoNetworkError) {\n        if (session && !session.hasEnded) {\n          session.serverSession.isDirty = true;\n        }\n\n        if (supportsRetryableWrites(server) && !inActiveTransaction(session, cmd)) {\n          err.addErrorLabel('RetryableWriteError');\n        }\n\n        if (!(err instanceof MongoNetworkTimeoutError) || isNetworkErrorBeforeHandshake(err)) {\n          markServerUnknown(server, err);\n          server.s.pool.clear();\n        }\n      } else {\n        // if pre-4.4 server, then add error label if its a retryable write error\n        if (\n          maxWireVersion(server) < 9 &&\n          isRetryableWriteError(err) &&\n          !inActiveTransaction(session, cmd)\n        ) {\n          err.addErrorLabel('RetryableWriteError');\n        }\n\n        if (isSDAMUnrecoverableError(err)) {\n          if (shouldHandleStateChangeError(server, err)) {\n            if (maxWireVersion(server) <= 7 || isNodeShuttingDownError(err)) {\n              server.s.pool.clear();\n            }\n\n            markServerUnknown(server, err);\n            process.nextTick(() => server.requestCheck());\n          }\n        }\n      }\n    }\n\n    callback(err, result);\n  };\n}\n\nmodule.exports = {\n  Server\n};\n","'use strict';\n\nconst arrayStrictEqual = require('../utils').arrayStrictEqual;\nconst tagsStrictEqual = require('../utils').tagsStrictEqual;\nconst errorStrictEqual = require('../utils').errorStrictEqual;\nconst ServerType = require('./common').ServerType;\nconst now = require('../../utils').now;\n\nconst WRITABLE_SERVER_TYPES = new Set([\n  ServerType.RSPrimary,\n  ServerType.Standalone,\n  ServerType.Mongos\n]);\n\nconst DATA_BEARING_SERVER_TYPES = new Set([\n  ServerType.RSPrimary,\n  ServerType.RSSecondary,\n  ServerType.Mongos,\n  ServerType.Standalone\n]);\n\nconst ISMASTER_FIELDS = [\n  'minWireVersion',\n  'maxWireVersion',\n  'maxBsonObjectSize',\n  'maxMessageSizeBytes',\n  'maxWriteBatchSize',\n  'compression',\n  'me',\n  'hosts',\n  'passives',\n  'arbiters',\n  'tags',\n  'setName',\n  'setVersion',\n  'electionId',\n  'primary',\n  'logicalSessionTimeoutMinutes',\n  'saslSupportedMechs',\n  '__nodejs_mock_server__',\n  '$clusterTime'\n];\n\n/**\n * The client's view of a single server, based on the most recent ismaster outcome.\n *\n * Internal type, not meant to be directly instantiated\n */\nclass ServerDescription {\n  /**\n   * Create a ServerDescription\n   * @param {String} address The address of the server\n   * @param {Object} [ismaster] An optional ismaster response for this server\n   * @param {Object} [options] Optional settings\n   * @param {Number} [options.roundTripTime] The round trip time to ping this server (in ms)\n   * @param {Error} [options.error] An Error used for better reporting debugging\n   * @param {any} [options.topologyVersion] The topologyVersion\n   */\n  constructor(address, ismaster, options) {\n    options = options || {};\n    ismaster = Object.assign(\n      {\n        minWireVersion: 0,\n        maxWireVersion: 0,\n        hosts: [],\n        passives: [],\n        arbiters: [],\n        tags: []\n      },\n      ismaster\n    );\n\n    this.address = address;\n    this.error = options.error;\n    this.roundTripTime = options.roundTripTime || -1;\n    this.lastUpdateTime = now();\n    this.lastWriteDate = ismaster.lastWrite ? ismaster.lastWrite.lastWriteDate : null;\n    this.opTime = ismaster.lastWrite ? ismaster.lastWrite.opTime : null;\n    this.type = parseServerType(ismaster);\n    this.topologyVersion = options.topologyVersion || ismaster.topologyVersion;\n\n    // direct mappings\n    ISMASTER_FIELDS.forEach(field => {\n      if (typeof ismaster[field] !== 'undefined') this[field] = ismaster[field];\n    });\n\n    // normalize case for hosts\n    if (this.me) this.me = this.me.toLowerCase();\n    this.hosts = this.hosts.map(host => host.toLowerCase());\n    this.passives = this.passives.map(host => host.toLowerCase());\n    this.arbiters = this.arbiters.map(host => host.toLowerCase());\n  }\n\n  get allHosts() {\n    return this.hosts.concat(this.arbiters).concat(this.passives);\n  }\n\n  /**\n   * @return {Boolean} Is this server available for reads\n   */\n  get isReadable() {\n    return this.type === ServerType.RSSecondary || this.isWritable;\n  }\n\n  /**\n   * @return {Boolean} Is this server data bearing\n   */\n  get isDataBearing() {\n    return DATA_BEARING_SERVER_TYPES.has(this.type);\n  }\n\n  /**\n   * @return {Boolean} Is this server available for writes\n   */\n  get isWritable() {\n    return WRITABLE_SERVER_TYPES.has(this.type);\n  }\n\n  get host() {\n    const chopLength = `:${this.port}`.length;\n    return this.address.slice(0, -chopLength);\n  }\n\n  get port() {\n    const port = this.address.split(':').pop();\n    return port ? Number.parseInt(port, 10) : port;\n  }\n\n  /**\n   * Determines if another `ServerDescription` is equal to this one per the rules defined\n   * in the {@link https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#serverdescription|SDAM spec}\n   *\n   * @param {ServerDescription} other\n   * @return {Boolean}\n   */\n  equals(other) {\n    const topologyVersionsEqual =\n      this.topologyVersion === other.topologyVersion ||\n      compareTopologyVersion(this.topologyVersion, other.topologyVersion) === 0;\n\n    return (\n      other != null &&\n      errorStrictEqual(this.error, other.error) &&\n      this.type === other.type &&\n      this.minWireVersion === other.minWireVersion &&\n      this.me === other.me &&\n      arrayStrictEqual(this.hosts, other.hosts) &&\n      tagsStrictEqual(this.tags, other.tags) &&\n      this.setName === other.setName &&\n      this.setVersion === other.setVersion &&\n      (this.electionId\n        ? other.electionId && this.electionId.equals(other.electionId)\n        : this.electionId === other.electionId) &&\n      this.primary === other.primary &&\n      this.logicalSessionTimeoutMinutes === other.logicalSessionTimeoutMinutes &&\n      topologyVersionsEqual\n    );\n  }\n}\n\n/**\n * Parses an `ismaster` message and determines the server type\n *\n * @param {Object} ismaster The `ismaster` message to parse\n * @return {ServerType}\n */\nfunction parseServerType(ismaster) {\n  if (!ismaster || !ismaster.ok) {\n    return ServerType.Unknown;\n  }\n\n  if (ismaster.isreplicaset) {\n    return ServerType.RSGhost;\n  }\n\n  if (ismaster.msg && ismaster.msg === 'isdbgrid') {\n    return ServerType.Mongos;\n  }\n\n  if (ismaster.setName) {\n    if (ismaster.hidden) {\n      return ServerType.RSOther;\n    } else if (ismaster.ismaster) {\n      return ServerType.RSPrimary;\n    } else if (ismaster.secondary) {\n      return ServerType.RSSecondary;\n    } else if (ismaster.arbiterOnly) {\n      return ServerType.RSArbiter;\n    } else {\n      return ServerType.RSOther;\n    }\n  }\n\n  return ServerType.Standalone;\n}\n\n/**\n * Compares two topology versions.\n *\n * @param {object} lhs\n * @param {object} rhs\n * @returns A negative number if `lhs` is older than `rhs`; positive if `lhs` is newer than `rhs`; 0 if they are equivalent.\n */\nfunction compareTopologyVersion(lhs, rhs) {\n  if (lhs == null || rhs == null) {\n    return -1;\n  }\n\n  if (lhs.processId.equals(rhs.processId)) {\n    // TODO: handle counters as Longs\n    if (lhs.counter === rhs.counter) {\n      return 0;\n    } else if (lhs.counter < rhs.counter) {\n      return -1;\n    }\n\n    return 1;\n  }\n\n  return -1;\n}\n\nmodule.exports = {\n  ServerDescription,\n  parseServerType,\n  compareTopologyVersion\n};\n","'use strict';\nconst ServerType = require('./common').ServerType;\nconst TopologyType = require('./common').TopologyType;\nconst ReadPreference = require('../topologies/read_preference');\nconst MongoError = require('../error').MongoError;\n\n// max staleness constants\nconst IDLE_WRITE_PERIOD = 10000;\nconst SMALLEST_MAX_STALENESS_SECONDS = 90;\n\n/**\n * Returns a server selector that selects for writable servers\n */\nfunction writableServerSelector() {\n  return function(topologyDescription, servers) {\n    return latencyWindowReducer(\n      topologyDescription,\n      servers.filter(s => s.isWritable)\n    );\n  };\n}\n\n/**\n * Reduces the passed in array of servers by the rules of the \"Max Staleness\" specification\n * found here: https://github.com/mongodb/specifications/blob/master/source/max-staleness/max-staleness.rst\n *\n * @param {ReadPreference} readPreference The read preference providing max staleness guidance\n * @param {topologyDescription} topologyDescription The topology description\n * @param {ServerDescription[]} servers The list of server descriptions to be reduced\n * @return {ServerDescription[]} The list of servers that satisfy the requirements of max staleness\n */\nfunction maxStalenessReducer(readPreference, topologyDescription, servers) {\n  if (readPreference.maxStalenessSeconds == null || readPreference.maxStalenessSeconds < 0) {\n    return servers;\n  }\n\n  const maxStaleness = readPreference.maxStalenessSeconds;\n  const maxStalenessVariance =\n    (topologyDescription.heartbeatFrequencyMS + IDLE_WRITE_PERIOD) / 1000;\n  if (maxStaleness < maxStalenessVariance) {\n    throw new MongoError(`maxStalenessSeconds must be at least ${maxStalenessVariance} seconds`);\n  }\n\n  if (maxStaleness < SMALLEST_MAX_STALENESS_SECONDS) {\n    throw new MongoError(\n      `maxStalenessSeconds must be at least ${SMALLEST_MAX_STALENESS_SECONDS} seconds`\n    );\n  }\n\n  if (topologyDescription.type === TopologyType.ReplicaSetWithPrimary) {\n    const primary = Array.from(topologyDescription.servers.values()).filter(primaryFilter)[0];\n    return servers.reduce((result, server) => {\n      const stalenessMS =\n        server.lastUpdateTime -\n        server.lastWriteDate -\n        (primary.lastUpdateTime - primary.lastWriteDate) +\n        topologyDescription.heartbeatFrequencyMS;\n\n      const staleness = stalenessMS / 1000;\n      if (staleness <= readPreference.maxStalenessSeconds) result.push(server);\n      return result;\n    }, []);\n  }\n\n  if (topologyDescription.type === TopologyType.ReplicaSetNoPrimary) {\n    if (servers.length === 0) {\n      return servers;\n    }\n\n    const sMax = servers.reduce((max, s) => (s.lastWriteDate > max.lastWriteDate ? s : max));\n    return servers.reduce((result, server) => {\n      const stalenessMS =\n        sMax.lastWriteDate - server.lastWriteDate + topologyDescription.heartbeatFrequencyMS;\n\n      const staleness = stalenessMS / 1000;\n      if (staleness <= readPreference.maxStalenessSeconds) result.push(server);\n      return result;\n    }, []);\n  }\n\n  return servers;\n}\n\n/**\n * Determines whether a server's tags match a given set of tags\n *\n * @param {String[]} tagSet The requested tag set to match\n * @param {String[]} serverTags The server's tags\n */\nfunction tagSetMatch(tagSet, serverTags) {\n  const keys = Object.keys(tagSet);\n  const serverTagKeys = Object.keys(serverTags);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (serverTagKeys.indexOf(key) === -1 || serverTags[key] !== tagSet[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Reduces a set of server descriptions based on tags requested by the read preference\n *\n * @param {ReadPreference} readPreference The read preference providing the requested tags\n * @param {ServerDescription[]} servers The list of server descriptions to reduce\n * @return {ServerDescription[]} The list of servers matching the requested tags\n */\nfunction tagSetReducer(readPreference, servers) {\n  if (\n    readPreference.tags == null ||\n    (Array.isArray(readPreference.tags) && readPreference.tags.length === 0)\n  ) {\n    return servers;\n  }\n\n  for (let i = 0; i < readPreference.tags.length; ++i) {\n    const tagSet = readPreference.tags[i];\n    const serversMatchingTagset = servers.reduce((matched, server) => {\n      if (tagSetMatch(tagSet, server.tags)) matched.push(server);\n      return matched;\n    }, []);\n\n    if (serversMatchingTagset.length) {\n      return serversMatchingTagset;\n    }\n  }\n\n  return [];\n}\n\n/**\n * Reduces a list of servers to ensure they fall within an acceptable latency window. This is\n * further specified in the \"Server Selection\" specification, found here:\n * https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.rst\n *\n * @param {topologyDescription} topologyDescription The topology description\n * @param {ServerDescription[]} servers The list of servers to reduce\n * @returns {ServerDescription[]} The servers which fall within an acceptable latency window\n */\nfunction latencyWindowReducer(topologyDescription, servers) {\n  const low = servers.reduce(\n    (min, server) => (min === -1 ? server.roundTripTime : Math.min(server.roundTripTime, min)),\n    -1\n  );\n\n  const high = low + topologyDescription.localThresholdMS;\n\n  return servers.reduce((result, server) => {\n    if (server.roundTripTime <= high && server.roundTripTime >= low) result.push(server);\n    return result;\n  }, []);\n}\n\n// filters\nfunction primaryFilter(server) {\n  return server.type === ServerType.RSPrimary;\n}\n\nfunction secondaryFilter(server) {\n  return server.type === ServerType.RSSecondary;\n}\n\nfunction nearestFilter(server) {\n  return server.type === ServerType.RSSecondary || server.type === ServerType.RSPrimary;\n}\n\nfunction knownFilter(server) {\n  return server.type !== ServerType.Unknown;\n}\n\n/**\n * Returns a function which selects servers based on a provided read preference\n *\n * @param {ReadPreference} readPreference The read preference to select with\n */\nfunction readPreferenceServerSelector(readPreference) {\n  if (!readPreference.isValid()) {\n    throw new TypeError('Invalid read preference specified');\n  }\n\n  return function(topologyDescription, servers) {\n    const commonWireVersion = topologyDescription.commonWireVersion;\n    if (\n      commonWireVersion &&\n      readPreference.minWireVersion &&\n      readPreference.minWireVersion > commonWireVersion\n    ) {\n      throw new MongoError(\n        `Minimum wire version '${readPreference.minWireVersion}' required, but found '${commonWireVersion}'`\n      );\n    }\n\n    if (topologyDescription.type === TopologyType.Unknown) {\n      return [];\n    }\n\n    if (\n      topologyDescription.type === TopologyType.Single ||\n      topologyDescription.type === TopologyType.Sharded\n    ) {\n      return latencyWindowReducer(topologyDescription, servers.filter(knownFilter));\n    }\n\n    const mode = readPreference.mode;\n    if (mode === ReadPreference.PRIMARY) {\n      return servers.filter(primaryFilter);\n    }\n\n    if (mode === ReadPreference.PRIMARY_PREFERRED) {\n      const result = servers.filter(primaryFilter);\n      if (result.length) {\n        return result;\n      }\n    }\n\n    const filter = mode === ReadPreference.NEAREST ? nearestFilter : secondaryFilter;\n    const selectedServers = latencyWindowReducer(\n      topologyDescription,\n      tagSetReducer(\n        readPreference,\n        maxStalenessReducer(readPreference, topologyDescription, servers.filter(filter))\n      )\n    );\n\n    if (mode === ReadPreference.SECONDARY_PREFERRED && selectedServers.length === 0) {\n      return servers.filter(primaryFilter);\n    }\n\n    return selectedServers;\n  };\n}\n\nmodule.exports = {\n  writableServerSelector,\n  readPreferenceServerSelector\n};\n","'use strict';\n\nconst Logger = require('../connection/logger');\nconst EventEmitter = require('events').EventEmitter;\nconst dns = require('dns');\n/**\n * Determines whether a provided address matches the provided parent domain in order\n * to avoid certain attack vectors.\n *\n * @param {String} srvAddress The address to check against a domain\n * @param {String} parentDomain The domain to check the provided address against\n * @return {Boolean} Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(srvAddress, parentDomain) {\n  const regex = /^.*?\\./;\n  const srv = `.${srvAddress.replace(regex, '')}`;\n  const parent = `.${parentDomain.replace(regex, '')}`;\n  return srv.endsWith(parent);\n}\n\nclass SrvPollingEvent {\n  constructor(srvRecords) {\n    this.srvRecords = srvRecords;\n  }\n\n  addresses() {\n    return new Set(this.srvRecords.map(record => `${record.name}:${record.port}`));\n  }\n}\n\nclass SrvPoller extends EventEmitter {\n  /**\n   * @param {object} options\n   * @param {string} options.srvHost\n   * @param {number} [options.heartbeatFrequencyMS]\n   * @param {function} [options.logger]\n   * @param {string} [options.loggerLevel]\n   */\n  constructor(options) {\n    super();\n\n    if (!options || !options.srvHost) {\n      throw new TypeError('options for SrvPoller must exist and include srvHost');\n    }\n\n    this.srvHost = options.srvHost;\n    this.rescanSrvIntervalMS = 60000;\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 10000;\n    this.logger = Logger('srvPoller', options);\n\n    this.haMode = false;\n    this.generation = 0;\n\n    this._timeout = null;\n  }\n\n  get srvAddress() {\n    return `_mongodb._tcp.${this.srvHost}`;\n  }\n\n  get intervalMS() {\n    return this.haMode ? this.heartbeatFrequencyMS : this.rescanSrvIntervalMS;\n  }\n\n  start() {\n    if (!this._timeout) {\n      this.schedule();\n    }\n  }\n\n  stop() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this.generation += 1;\n      this._timeout = null;\n    }\n  }\n\n  schedule() {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this._poll(), this.intervalMS);\n  }\n\n  success(srvRecords) {\n    this.haMode = false;\n    this.schedule();\n    this.emit('srvRecordDiscovery', new SrvPollingEvent(srvRecords));\n  }\n\n  failure(message, obj) {\n    this.logger.warn(message, obj);\n    this.haMode = true;\n    this.schedule();\n  }\n\n  parentDomainMismatch(srvRecord) {\n    this.logger.warn(\n      `parent domain mismatch on SRV record (${srvRecord.name}:${srvRecord.port})`,\n      srvRecord\n    );\n  }\n\n  _poll() {\n    const generation = this.generation;\n    dns.resolveSrv(this.srvAddress, (err, srvRecords) => {\n      if (generation !== this.generation) {\n        return;\n      }\n\n      if (err) {\n        this.failure('DNS error', err);\n        return;\n      }\n\n      const finalAddresses = [];\n      srvRecords.forEach(record => {\n        if (matchesParentDomain(record.name, this.srvHost)) {\n          finalAddresses.push(record);\n        } else {\n          this.parentDomainMismatch(record);\n        }\n      });\n\n      if (!finalAddresses.length) {\n        this.failure('No valid addresses found at host');\n        return;\n      }\n\n      this.success(finalAddresses);\n    });\n  }\n}\n\nmodule.exports.SrvPollingEvent = SrvPollingEvent;\nmodule.exports.SrvPoller = SrvPoller;\n","'use strict';\nconst Denque = require('denque');\nconst EventEmitter = require('events');\nconst ServerDescription = require('./server_description').ServerDescription;\nconst ServerType = require('./common').ServerType;\nconst TopologyDescription = require('./topology_description').TopologyDescription;\nconst TopologyType = require('./common').TopologyType;\nconst events = require('./events');\nconst Server = require('./server').Server;\nconst relayEvents = require('../utils').relayEvents;\nconst ReadPreference = require('../topologies/read_preference');\nconst isRetryableWritesSupported = require('../topologies/shared').isRetryableWritesSupported;\nconst CoreCursor = require('../cursor').CoreCursor;\nconst deprecate = require('util').deprecate;\nconst BSON = require('../connection/utils').retrieveBSON();\nconst createCompressionInfo = require('../topologies/shared').createCompressionInfo;\nconst ClientSession = require('../sessions').ClientSession;\nconst MongoError = require('../error').MongoError;\nconst MongoServerSelectionError = require('../error').MongoServerSelectionError;\nconst resolveClusterTime = require('../topologies/shared').resolveClusterTime;\nconst SrvPoller = require('./srv_polling').SrvPoller;\nconst getMMAPError = require('../topologies/shared').getMMAPError;\nconst makeStateMachine = require('../utils').makeStateMachine;\nconst eachAsync = require('../utils').eachAsync;\nconst emitDeprecationWarning = require('../../utils').emitDeprecationWarning;\nconst ServerSessionPool = require('../sessions').ServerSessionPool;\nconst makeClientMetadata = require('../utils').makeClientMetadata;\nconst CMAP_EVENT_NAMES = require('../../cmap/events').CMAP_EVENT_NAMES;\nconst compareTopologyVersion = require('./server_description').compareTopologyVersion;\n\nconst common = require('./common');\nconst drainTimerQueue = common.drainTimerQueue;\nconst clearAndRemoveTimerFrom = common.clearAndRemoveTimerFrom;\n\nconst serverSelection = require('./server_selection');\nconst readPreferenceServerSelector = serverSelection.readPreferenceServerSelector;\nconst writableServerSelector = serverSelection.writableServerSelector;\n\n// Global state\nlet globalTopologyCounter = 0;\n\n// events that we relay to the `Topology`\nconst SERVER_RELAY_EVENTS = [\n  'serverHeartbeatStarted',\n  'serverHeartbeatSucceeded',\n  'serverHeartbeatFailed',\n  'commandStarted',\n  'commandSucceeded',\n  'commandFailed',\n\n  // NOTE: Legacy events\n  'monitoring'\n].concat(CMAP_EVENT_NAMES);\n\n// all events we listen to from `Server` instances\nconst LOCAL_SERVER_EVENTS = ['connect', 'descriptionReceived', 'close', 'ended'];\n\nconst STATE_CLOSING = common.STATE_CLOSING;\nconst STATE_CLOSED = common.STATE_CLOSED;\nconst STATE_CONNECTING = common.STATE_CONNECTING;\nconst STATE_CONNECTED = common.STATE_CONNECTED;\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_CONNECTING],\n  [STATE_CONNECTING]: [STATE_CONNECTING, STATE_CLOSING, STATE_CONNECTED, STATE_CLOSED],\n  [STATE_CONNECTED]: [STATE_CONNECTED, STATE_CLOSING, STATE_CLOSED],\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_CLOSED]\n});\n\nconst DEPRECATED_OPTIONS = new Set([\n  'autoReconnect',\n  'reconnectTries',\n  'reconnectInterval',\n  'bufferMaxEntries'\n]);\n\nconst kCancelled = Symbol('cancelled');\nconst kWaitQueue = Symbol('waitQueue');\n\n/**\n * A container of server instances representing a connection to a MongoDB topology.\n *\n * @fires Topology#serverOpening\n * @fires Topology#serverClosed\n * @fires Topology#serverDescriptionChanged\n * @fires Topology#topologyOpening\n * @fires Topology#topologyClosed\n * @fires Topology#topologyDescriptionChanged\n * @fires Topology#serverHeartbeatStarted\n * @fires Topology#serverHeartbeatSucceeded\n * @fires Topology#serverHeartbeatFailed\n */\nclass Topology extends EventEmitter {\n  /**\n   * Create a topology\n   *\n   * @param {Array|String} [seedlist] a string list, or array of Server instances to connect to\n   * @param {Object} [options] Optional settings\n   * @param {Number} [options.localThresholdMS=15] The size of the latency window for selecting among multiple suitable servers\n   * @param {Number} [options.serverSelectionTimeoutMS=30000] How long to block for server selection before throwing an error\n   * @param {Number} [options.heartbeatFrequencyMS=10000] The frequency with which topology updates are scheduled\n   */\n  constructor(seedlist, options) {\n    super();\n    if (typeof options === 'undefined' && typeof seedlist !== 'string') {\n      options = seedlist;\n      seedlist = [];\n\n      // this is for legacy single server constructor support\n      if (options.host) {\n        seedlist.push({ host: options.host, port: options.port });\n      }\n    }\n\n    seedlist = seedlist || [];\n    if (typeof seedlist === 'string') {\n      seedlist = parseStringSeedlist(seedlist);\n    }\n\n    options = Object.assign({}, common.TOPOLOGY_DEFAULTS, options);\n    options = Object.freeze(\n      Object.assign(options, {\n        metadata: makeClientMetadata(options),\n        compression: { compressors: createCompressionInfo(options) }\n      })\n    );\n\n    DEPRECATED_OPTIONS.forEach(optionName => {\n      if (options[optionName]) {\n        emitDeprecationWarning(\n          `The option \\`${optionName}\\` is incompatible with the unified topology, please read more by visiting http://bit.ly/2D8WfT6`,\n          'DeprecationWarning'\n        );\n      }\n    });\n\n    const topologyType = topologyTypeFromSeedlist(seedlist, options);\n    const topologyId = globalTopologyCounter++;\n    const serverDescriptions = seedlist.reduce((result, seed) => {\n      if (seed.domain_socket) seed.host = seed.domain_socket;\n      const address = seed.port ? `${seed.host}:${seed.port}` : `${seed.host}:27017`;\n      result.set(address, new ServerDescription(address));\n      return result;\n    }, new Map());\n\n    this[kWaitQueue] = new Denque();\n    this.s = {\n      // the id of this topology\n      id: topologyId,\n      // passed in options\n      options,\n      // initial seedlist of servers to connect to\n      seedlist: seedlist,\n      // initial state\n      state: STATE_CLOSED,\n      // the topology description\n      description: new TopologyDescription(\n        topologyType,\n        serverDescriptions,\n        options.replicaSet,\n        null,\n        null,\n        null,\n        options\n      ),\n      serverSelectionTimeoutMS: options.serverSelectionTimeoutMS,\n      heartbeatFrequencyMS: options.heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS,\n      // allow users to override the cursor factory\n      Cursor: options.cursorFactory || CoreCursor,\n      // the bson parser\n      bson:\n        options.bson ||\n        new BSON([\n          BSON.Binary,\n          BSON.Code,\n          BSON.DBRef,\n          BSON.Decimal128,\n          BSON.Double,\n          BSON.Int32,\n          BSON.Long,\n          BSON.Map,\n          BSON.MaxKey,\n          BSON.MinKey,\n          BSON.ObjectId,\n          BSON.BSONRegExp,\n          BSON.Symbol,\n          BSON.Timestamp\n        ]),\n      // a map of server instances to normalized addresses\n      servers: new Map(),\n      // Server Session Pool\n      sessionPool: new ServerSessionPool(this),\n      // Active client sessions\n      sessions: new Set(),\n      // Promise library\n      promiseLibrary: options.promiseLibrary || Promise,\n      credentials: options.credentials,\n      clusterTime: null,\n\n      // timer management\n      connectionTimers: new Set()\n    };\n\n    if (options.srvHost) {\n      this.s.srvPoller =\n        options.srvPoller ||\n        new SrvPoller({\n          heartbeatFrequencyMS: this.s.heartbeatFrequencyMS,\n          srvHost: options.srvHost, // TODO: GET THIS\n          logger: options.logger,\n          loggerLevel: options.loggerLevel\n        });\n      this.s.detectTopologyDescriptionChange = ev => {\n        const previousType = ev.previousDescription.type;\n        const newType = ev.newDescription.type;\n\n        if (previousType !== TopologyType.Sharded && newType === TopologyType.Sharded) {\n          this.s.handleSrvPolling = srvPollingHandler(this);\n          this.s.srvPoller.on('srvRecordDiscovery', this.s.handleSrvPolling);\n          this.s.srvPoller.start();\n        }\n      };\n\n      this.on('topologyDescriptionChanged', this.s.detectTopologyDescriptionChange);\n    }\n\n    // NOTE: remove this when NODE-1709 is resolved\n    this.setMaxListeners(Infinity);\n  }\n\n  /**\n   * @return A `TopologyDescription` for this topology\n   */\n  get description() {\n    return this.s.description;\n  }\n\n  get parserType() {\n    return BSON.native ? 'c++' : 'js';\n  }\n\n  /**\n   * Initiate server connect\n   *\n   * @param {Object} [options] Optional settings\n   * @param {Array} [options.auth=null] Array of auth options to apply on connect\n   * @param {function} [callback] An optional callback called once on the first connected server\n   */\n  connect(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n    if (this.s.state === STATE_CONNECTED) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    stateTransition(this, STATE_CONNECTING);\n\n    // emit SDAM monitoring events\n    this.emit('topologyOpening', new events.TopologyOpeningEvent(this.s.id));\n\n    // emit an event for the topology change\n    this.emit(\n      'topologyDescriptionChanged',\n      new events.TopologyDescriptionChangedEvent(\n        this.s.id,\n        new TopologyDescription(TopologyType.Unknown), // initial is always Unknown\n        this.s.description\n      )\n    );\n\n    // connect all known servers, then attempt server selection to connect\n    connectServers(this, Array.from(this.s.description.servers.values()));\n\n    ReadPreference.translate(options);\n    const readPreference = options.readPreference || ReadPreference.primary;\n    const connectHandler = err => {\n      if (err) {\n        this.close();\n\n        if (typeof callback === 'function') {\n          callback(err);\n        } else {\n          this.emit('error', err);\n        }\n\n        return;\n      }\n\n      stateTransition(this, STATE_CONNECTED);\n      this.emit('open', err, this);\n      this.emit('connect', this);\n\n      if (typeof callback === 'function') callback(err, this);\n    };\n\n    // TODO: NODE-2471\n    if (this.s.credentials) {\n      this.command('admin.$cmd', { ping: 1 }, { readPreference }, connectHandler);\n      return;\n    }\n\n    this.selectServer(readPreferenceServerSelector(readPreference), options, connectHandler);\n  }\n\n  /**\n   * Close this topology\n   */\n  close(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (typeof options === 'boolean') {\n      options = { force: options };\n    }\n\n    options = options || {};\n    if (this.s.state === STATE_CLOSED || this.s.state === STATE_CLOSING) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n\n    drainWaitQueue(this[kWaitQueue], new MongoError('Topology closed'));\n    drainTimerQueue(this.s.connectionTimers);\n\n    if (this.s.srvPoller) {\n      this.s.srvPoller.stop();\n      if (this.s.handleSrvPolling) {\n        this.s.srvPoller.removeListener('srvRecordDiscovery', this.s.handleSrvPolling);\n        delete this.s.handleSrvPolling;\n      }\n    }\n\n    if (this.s.detectTopologyDescriptionChange) {\n      this.removeListener('topologyDescriptionChanged', this.s.detectTopologyDescriptionChange);\n      delete this.s.detectTopologyDescriptionChange;\n    }\n\n    this.s.sessions.forEach(session => session.endSession());\n    this.s.sessionPool.endAllPooledSessions(() => {\n      eachAsync(\n        Array.from(this.s.servers.values()),\n        (server, cb) => destroyServer(server, this, options, cb),\n        err => {\n          this.s.servers.clear();\n\n          // emit an event for close\n          this.emit('topologyClosed', new events.TopologyClosedEvent(this.s.id));\n\n          stateTransition(this, STATE_CLOSED);\n          this.emit('close');\n\n          if (typeof callback === 'function') {\n            callback(err);\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Selects a server according to the selection predicate provided\n   *\n   * @param {function} [selector] An optional selector to select servers by, defaults to a random selection within a latency window\n   * @param {object} [options] Optional settings related to server selection\n   * @param {number} [options.serverSelectionTimeoutMS] How long to block for server selection before throwing an error\n   * @param {function} callback The callback used to indicate success or failure\n   * @return {Server} An instance of a `Server` meeting the criteria of the predicate provided\n   */\n  selectServer(selector, options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      if (typeof selector !== 'function') {\n        options = selector;\n\n        let readPreference;\n        if (selector instanceof ReadPreference) {\n          readPreference = selector;\n        } else if (typeof selector === 'string') {\n          readPreference = new ReadPreference(selector);\n        } else {\n          ReadPreference.translate(options);\n          readPreference = options.readPreference || ReadPreference.primary;\n        }\n\n        selector = readPreferenceServerSelector(readPreference);\n      } else {\n        options = {};\n      }\n    }\n\n    options = Object.assign(\n      {},\n      { serverSelectionTimeoutMS: this.s.serverSelectionTimeoutMS },\n      options\n    );\n\n    const isSharded = this.description.type === TopologyType.Sharded;\n    const session = options.session;\n    const transaction = session && session.transaction;\n\n    if (isSharded && transaction && transaction.server) {\n      callback(undefined, transaction.server);\n      return;\n    }\n\n    // support server selection by options with readPreference\n    let serverSelector = selector;\n    if (typeof selector === 'object') {\n      const readPreference = selector.readPreference\n        ? selector.readPreference\n        : ReadPreference.primary;\n\n      serverSelector = readPreferenceServerSelector(readPreference);\n    }\n\n    const waitQueueMember = {\n      serverSelector,\n      transaction,\n      callback\n    };\n\n    const serverSelectionTimeoutMS = options.serverSelectionTimeoutMS;\n    if (serverSelectionTimeoutMS) {\n      waitQueueMember.timer = setTimeout(() => {\n        waitQueueMember[kCancelled] = true;\n        waitQueueMember.timer = undefined;\n        const timeoutError = new MongoServerSelectionError(\n          `Server selection timed out after ${serverSelectionTimeoutMS} ms`,\n          this.description\n        );\n\n        waitQueueMember.callback(timeoutError);\n      }, serverSelectionTimeoutMS);\n    }\n\n    this[kWaitQueue].push(waitQueueMember);\n    processWaitQueue(this);\n  }\n\n  // Sessions related methods\n\n  /**\n   * @return Whether the topology should initiate selection to determine session support\n   */\n  shouldCheckForSessionSupport() {\n    if (this.description.type === TopologyType.Single) {\n      return !this.description.hasKnownServers;\n    }\n\n    return !this.description.hasDataBearingServers;\n  }\n\n  /**\n   * @return Whether sessions are supported on the current topology\n   */\n  hasSessionSupport() {\n    return this.description.logicalSessionTimeoutMinutes != null;\n  }\n\n  /**\n   * Start a logical session\n   */\n  startSession(options, clientOptions) {\n    const session = new ClientSession(this, this.s.sessionPool, options, clientOptions);\n    session.once('ended', () => {\n      this.s.sessions.delete(session);\n    });\n\n    this.s.sessions.add(session);\n    return session;\n  }\n\n  /**\n   * Send endSessions command(s) with the given session ids\n   *\n   * @param {Array} sessions The sessions to end\n   * @param {function} [callback]\n   */\n  endSessions(sessions, callback) {\n    if (!Array.isArray(sessions)) {\n      sessions = [sessions];\n    }\n\n    this.command(\n      'admin.$cmd',\n      { endSessions: sessions },\n      { readPreference: ReadPreference.primaryPreferred, noResponse: true },\n      () => {\n        // intentionally ignored, per spec\n        if (typeof callback === 'function') callback();\n      }\n    );\n  }\n\n  /**\n   * Update the internal TopologyDescription with a ServerDescription\n   *\n   * @param {object} serverDescription The server to update in the internal list of server descriptions\n   */\n  serverUpdateHandler(serverDescription) {\n    if (!this.s.description.hasServer(serverDescription.address)) {\n      return;\n    }\n\n    // ignore this server update if its from an outdated topologyVersion\n    if (isStaleServerDescription(this.s.description, serverDescription)) {\n      return;\n    }\n\n    // these will be used for monitoring events later\n    const previousTopologyDescription = this.s.description;\n    const previousServerDescription = this.s.description.servers.get(serverDescription.address);\n\n    // Driver Sessions Spec: \"Whenever a driver receives a cluster time from\n    // a server it MUST compare it to the current highest seen cluster time\n    // for the deployment. If the new cluster time is higher than the\n    // highest seen cluster time it MUST become the new highest seen cluster\n    // time. Two cluster times are compared using only the BsonTimestamp\n    // value of the clusterTime embedded field.\"\n    const clusterTime = serverDescription.$clusterTime;\n    if (clusterTime) {\n      resolveClusterTime(this, clusterTime);\n    }\n\n    // If we already know all the information contained in this updated description, then\n    // we don't need to emit SDAM events, but still need to update the description, in order\n    // to keep client-tracked attributes like last update time and round trip time up to date\n    const equalDescriptions =\n      previousServerDescription && previousServerDescription.equals(serverDescription);\n\n    // first update the TopologyDescription\n    this.s.description = this.s.description.update(serverDescription);\n    if (this.s.description.compatibilityError) {\n      this.emit('error', new MongoError(this.s.description.compatibilityError));\n      return;\n    }\n\n    // emit monitoring events for this change\n    if (!equalDescriptions) {\n      this.emit(\n        'serverDescriptionChanged',\n        new events.ServerDescriptionChangedEvent(\n          this.s.id,\n          serverDescription.address,\n          previousServerDescription,\n          this.s.description.servers.get(serverDescription.address)\n        )\n      );\n    }\n\n    // update server list from updated descriptions\n    updateServers(this, serverDescription);\n\n    // attempt to resolve any outstanding server selection attempts\n    if (this[kWaitQueue].length > 0) {\n      processWaitQueue(this);\n    }\n\n    if (!equalDescriptions) {\n      this.emit(\n        'topologyDescriptionChanged',\n        new events.TopologyDescriptionChangedEvent(\n          this.s.id,\n          previousTopologyDescription,\n          this.s.description\n        )\n      );\n    }\n  }\n\n  auth(credentials, callback) {\n    if (typeof credentials === 'function') (callback = credentials), (credentials = null);\n    if (typeof callback === 'function') callback(null, true);\n  }\n\n  logout(callback) {\n    if (typeof callback === 'function') callback(null, true);\n  }\n\n  // Basic operation support. Eventually this should be moved into command construction\n  // during the command refactor.\n\n  /**\n   * Insert one or more documents\n   *\n   * @param {String} ns The full qualified namespace for this operation\n   * @param {Array} ops An array of documents to insert\n   * @param {Boolean} [options.ordered=true] Execute in order or out of order\n   * @param {Object} [options.writeConcern] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields\n   * @param {ClientSession} [options.session] Session to use for the operation\n   * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n   * @param {opResultCallback} callback A callback function\n   */\n  insert(ns, ops, options, callback) {\n    executeWriteOperation({ topology: this, op: 'insert', ns, ops }, options, callback);\n  }\n\n  /**\n   * Perform one or more update operations\n   *\n   * @param {string} ns The fully qualified namespace for this operation\n   * @param {array} ops An array of updates\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields\n   * @param {ClientSession} [options.session] Session to use for the operation\n   * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n   * @param {opResultCallback} callback A callback function\n   */\n  update(ns, ops, options, callback) {\n    executeWriteOperation({ topology: this, op: 'update', ns, ops }, options, callback);\n  }\n\n  /**\n   * Perform one or more remove operations\n   *\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of removes\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n   * @param {opResultCallback} callback A callback function\n   */\n  remove(ns, ops, options, callback) {\n    executeWriteOperation({ topology: this, op: 'remove', ns, ops }, options, callback);\n  }\n\n  /**\n   * Execute a command\n   *\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {object} cmd The command hash\n   * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n   * @param {Connection} [options.connection] Specify connection object to execute command against\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  command(ns, cmd, options, callback) {\n    if (typeof options === 'function') {\n      (callback = options), (options = {}), (options = options || {});\n    }\n\n    ReadPreference.translate(options);\n    const readPreference = options.readPreference || ReadPreference.primary;\n\n    this.selectServer(readPreferenceServerSelector(readPreference), options, (err, server) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const willRetryWrite =\n        !options.retrying &&\n        !!options.retryWrites &&\n        options.session &&\n        isRetryableWritesSupported(this) &&\n        !options.session.inTransaction() &&\n        isWriteCommand(cmd);\n\n      const cb = (err, result) => {\n        if (!err) return callback(null, result);\n        if (!shouldRetryOperation(err)) {\n          return callback(err);\n        }\n\n        if (willRetryWrite) {\n          const newOptions = Object.assign({}, options, { retrying: true });\n          return this.command(ns, cmd, newOptions, callback);\n        }\n\n        return callback(err);\n      };\n\n      // increment and assign txnNumber\n      if (willRetryWrite) {\n        options.session.incrementTransactionNumber();\n        options.willRetryWrite = willRetryWrite;\n      }\n\n      server.command(ns, cmd, options, cb);\n    });\n  }\n\n  /**\n   * Create a new cursor\n   *\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n   * @param {object} [options] Options for the cursor\n   * @param {object} [options.batchSize=0] Batchsize for the operation\n   * @param {array} [options.documents=[]] Initial documents list for cursor\n   * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {object} [options.topology] The internal topology of the created cursor\n   * @returns {Cursor}\n   */\n  cursor(ns, cmd, options) {\n    options = options || {};\n    const topology = options.topology || this;\n    const CursorClass = options.cursorFactory || this.s.Cursor;\n    ReadPreference.translate(options);\n\n    return new CursorClass(topology, ns, cmd, options);\n  }\n\n  get clientMetadata() {\n    return this.s.options.metadata;\n  }\n\n  isConnected() {\n    return this.s.state === STATE_CONNECTED;\n  }\n\n  isDestroyed() {\n    return this.s.state === STATE_CLOSED;\n  }\n\n  unref() {\n    console.log('not implemented: `unref`');\n  }\n\n  // NOTE: There are many places in code where we explicitly check the last isMaster\n  //       to do feature support detection. This should be done any other way, but for\n  //       now we will just return the first isMaster seen, which should suffice.\n  lastIsMaster() {\n    const serverDescriptions = Array.from(this.description.servers.values());\n    if (serverDescriptions.length === 0) return {};\n\n    const sd = serverDescriptions.filter(sd => sd.type !== ServerType.Unknown)[0];\n    const result = sd || { maxWireVersion: this.description.commonWireVersion };\n    return result;\n  }\n\n  get logicalSessionTimeoutMinutes() {\n    return this.description.logicalSessionTimeoutMinutes;\n  }\n\n  get bson() {\n    return this.s.bson;\n  }\n}\n\nObject.defineProperty(Topology.prototype, 'clusterTime', {\n  enumerable: true,\n  get: function() {\n    return this.s.clusterTime;\n  },\n  set: function(clusterTime) {\n    this.s.clusterTime = clusterTime;\n  }\n});\n\n// legacy aliases\nTopology.prototype.destroy = deprecate(\n  Topology.prototype.close,\n  'destroy() is deprecated, please use close() instead'\n);\n\nconst RETRYABLE_WRITE_OPERATIONS = ['findAndModify', 'insert', 'update', 'delete'];\nfunction isWriteCommand(command) {\n  return RETRYABLE_WRITE_OPERATIONS.some(op => command[op]);\n}\n\nfunction isStaleServerDescription(topologyDescription, incomingServerDescription) {\n  const currentServerDescription = topologyDescription.servers.get(\n    incomingServerDescription.address\n  );\n  const currentTopologyVersion = currentServerDescription.topologyVersion;\n  return (\n    compareTopologyVersion(currentTopologyVersion, incomingServerDescription.topologyVersion) > 0\n  );\n}\n\n/**\n * Destroys a server, and removes all event listeners from the instance\n *\n * @param {Server} server\n */\nfunction destroyServer(server, topology, options, callback) {\n  options = options || {};\n  LOCAL_SERVER_EVENTS.forEach(event => server.removeAllListeners(event));\n\n  server.destroy(options, () => {\n    topology.emit(\n      'serverClosed',\n      new events.ServerClosedEvent(topology.s.id, server.description.address)\n    );\n\n    SERVER_RELAY_EVENTS.forEach(event => server.removeAllListeners(event));\n    if (typeof callback === 'function') {\n      callback();\n    }\n  });\n}\n\n/**\n * Parses a basic seedlist in string form\n *\n * @param {string} seedlist The seedlist to parse\n */\nfunction parseStringSeedlist(seedlist) {\n  return seedlist.split(',').map(seed => ({\n    host: seed.split(':')[0],\n    port: seed.split(':')[1] || 27017\n  }));\n}\n\nfunction topologyTypeFromSeedlist(seedlist, options) {\n  if (options.directConnection) {\n    return TopologyType.Single;\n  }\n\n  const replicaSet = options.replicaSet || options.setName || options.rs_name;\n  if (replicaSet == null) {\n    return TopologyType.Unknown;\n  }\n\n  return TopologyType.ReplicaSetNoPrimary;\n}\n\nfunction randomSelection(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nfunction createAndConnectServer(topology, serverDescription, connectDelay) {\n  topology.emit(\n    'serverOpening',\n    new events.ServerOpeningEvent(topology.s.id, serverDescription.address)\n  );\n\n  const server = new Server(serverDescription, topology.s.options, topology);\n  relayEvents(server, topology, SERVER_RELAY_EVENTS);\n\n  server.on('descriptionReceived', topology.serverUpdateHandler.bind(topology));\n\n  if (connectDelay) {\n    const connectTimer = setTimeout(() => {\n      clearAndRemoveTimerFrom(connectTimer, topology.s.connectionTimers);\n      server.connect();\n    }, connectDelay);\n\n    topology.s.connectionTimers.add(connectTimer);\n    return server;\n  }\n\n  server.connect();\n  return server;\n}\n\n/**\n * Create `Server` instances for all initially known servers, connect them, and assign\n * them to the passed in `Topology`.\n *\n * @param {Topology} topology The topology responsible for the servers\n * @param {ServerDescription[]} serverDescriptions A list of server descriptions to connect\n */\nfunction connectServers(topology, serverDescriptions) {\n  topology.s.servers = serverDescriptions.reduce((servers, serverDescription) => {\n    const server = createAndConnectServer(topology, serverDescription);\n    servers.set(serverDescription.address, server);\n    return servers;\n  }, new Map());\n}\n\nfunction updateServers(topology, incomingServerDescription) {\n  // update the internal server's description\n  if (incomingServerDescription && topology.s.servers.has(incomingServerDescription.address)) {\n    const server = topology.s.servers.get(incomingServerDescription.address);\n    server.s.description = incomingServerDescription;\n  }\n\n  // add new servers for all descriptions we currently don't know about locally\n  for (const serverDescription of topology.description.servers.values()) {\n    if (!topology.s.servers.has(serverDescription.address)) {\n      const server = createAndConnectServer(topology, serverDescription);\n      topology.s.servers.set(serverDescription.address, server);\n    }\n  }\n\n  // for all servers no longer known, remove their descriptions and destroy their instances\n  for (const entry of topology.s.servers) {\n    const serverAddress = entry[0];\n    if (topology.description.hasServer(serverAddress)) {\n      continue;\n    }\n\n    const server = topology.s.servers.get(serverAddress);\n    topology.s.servers.delete(serverAddress);\n\n    // prepare server for garbage collection\n    destroyServer(server, topology);\n  }\n}\n\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const topology = args.topology;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = args.ops;\n\n  const willRetryWrite =\n    !args.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(topology) &&\n    !options.session.inTransaction() &&\n    options.explain === undefined;\n\n  topology.selectServer(writableServerSelector(), options, (err, server) => {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    const handler = (err, result) => {\n      if (!err) return callback(null, result);\n      if (!shouldRetryOperation(err)) {\n        err = getMMAPError(err);\n        return callback(err);\n      }\n\n      if (willRetryWrite) {\n        const newArgs = Object.assign({}, args, { retrying: true });\n        return executeWriteOperation(newArgs, options, callback);\n      }\n\n      return callback(err);\n    };\n\n    if (callback.operationId) {\n      handler.operationId = callback.operationId;\n    }\n\n    // increment and assign txnNumber\n    if (willRetryWrite) {\n      options.session.incrementTransactionNumber();\n      options.willRetryWrite = willRetryWrite;\n    }\n\n    // execute the write operation\n    server[op](ns, ops, options, handler);\n  });\n}\n\nfunction shouldRetryOperation(err) {\n  return err instanceof MongoError && err.hasErrorLabel('RetryableWriteError');\n}\n\nfunction srvPollingHandler(topology) {\n  return function handleSrvPolling(ev) {\n    const previousTopologyDescription = topology.s.description;\n    topology.s.description = topology.s.description.updateFromSrvPollingEvent(ev);\n    if (topology.s.description === previousTopologyDescription) {\n      // Nothing changed, so return\n      return;\n    }\n\n    updateServers(topology);\n\n    topology.emit(\n      'topologyDescriptionChanged',\n      new events.TopologyDescriptionChangedEvent(\n        topology.s.id,\n        previousTopologyDescription,\n        topology.s.description\n      )\n    );\n  };\n}\n\nfunction drainWaitQueue(queue, err) {\n  while (queue.length) {\n    const waitQueueMember = queue.shift();\n    clearTimeout(waitQueueMember.timer);\n    if (!waitQueueMember[kCancelled]) {\n      waitQueueMember.callback(err);\n    }\n  }\n}\n\nfunction processWaitQueue(topology) {\n  if (topology.s.state === STATE_CLOSED) {\n    drainWaitQueue(topology[kWaitQueue], new MongoError('Topology is closed, please connect'));\n    return;\n  }\n\n  const serverDescriptions = Array.from(topology.description.servers.values());\n  const membersToProcess = topology[kWaitQueue].length;\n  for (let i = 0; i < membersToProcess && topology[kWaitQueue].length; ++i) {\n    const waitQueueMember = topology[kWaitQueue].shift();\n    if (waitQueueMember[kCancelled]) {\n      continue;\n    }\n\n    let selectedDescriptions;\n    try {\n      const serverSelector = waitQueueMember.serverSelector;\n      selectedDescriptions = serverSelector\n        ? serverSelector(topology.description, serverDescriptions)\n        : serverDescriptions;\n    } catch (e) {\n      clearTimeout(waitQueueMember.timer);\n      waitQueueMember.callback(e);\n      continue;\n    }\n\n    if (selectedDescriptions.length === 0) {\n      topology[kWaitQueue].push(waitQueueMember);\n      continue;\n    }\n\n    const selectedServerDescription = randomSelection(selectedDescriptions);\n    const selectedServer = topology.s.servers.get(selectedServerDescription.address);\n    const transaction = waitQueueMember.transaction;\n    const isSharded = topology.description.type === TopologyType.Sharded;\n    if (isSharded && transaction && transaction.isActive) {\n      transaction.pinServer(selectedServer);\n    }\n\n    clearTimeout(waitQueueMember.timer);\n    waitQueueMember.callback(undefined, selectedServer);\n  }\n\n  if (topology[kWaitQueue].length > 0) {\n    // ensure all server monitors attempt monitoring soon\n    topology.s.servers.forEach(server => process.nextTick(() => server.requestCheck()));\n  }\n}\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event Topology#serverOpening\n * @type {ServerOpeningEvent}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event Topology#serverClosed\n * @type {ServerClosedEvent}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event Topology#serverDescriptionChanged\n * @type {ServerDescriptionChangedEvent}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event Topology#topologyOpening\n * @type {TopologyOpeningEvent}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event Topology#topologyClosed\n * @type {TopologyClosedEvent}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event Topology#topologyDescriptionChanged\n * @type {TopologyDescriptionChangedEvent}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event Topology#serverHeartbeatStarted\n * @type {ServerHeartbeatStartedEvent}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event Topology#serverHeartbeatFailed\n * @type {ServerHearbeatFailedEvent}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event Topology#serverHeartbeatSucceeded\n * @type {ServerHeartbeatSucceededEvent}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Topology#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Topology#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Topology#commandFailed\n * @type {object}\n */\n\nmodule.exports = {\n  Topology\n};\n","'use strict';\nconst ServerType = require('./common').ServerType;\nconst ServerDescription = require('./server_description').ServerDescription;\nconst WIRE_CONSTANTS = require('../wireprotocol/constants');\nconst TopologyType = require('./common').TopologyType;\n\n// contstants related to compatability checks\nconst MIN_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_SERVER_VERSION;\nconst MAX_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_SERVER_VERSION;\nconst MIN_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_WIRE_VERSION;\nconst MAX_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_WIRE_VERSION;\n\n// Representation of a deployment of servers\nclass TopologyDescription {\n  /**\n   * Create a TopologyDescription\n   *\n   * @param {string} topologyType\n   * @param {Map<string, ServerDescription>} serverDescriptions the a map of address to ServerDescription\n   * @param {string} setName\n   * @param {number} maxSetVersion\n   * @param {ObjectId} maxElectionId\n   */\n  constructor(\n    topologyType,\n    serverDescriptions,\n    setName,\n    maxSetVersion,\n    maxElectionId,\n    commonWireVersion,\n    options\n  ) {\n    options = options || {};\n\n    // TODO: consider assigning all these values to a temporary value `s` which\n    //       we use `Object.freeze` on, ensuring the internal state of this type\n    //       is immutable.\n    this.type = topologyType || TopologyType.Unknown;\n    this.setName = setName || null;\n    this.maxSetVersion = maxSetVersion || null;\n    this.maxElectionId = maxElectionId || null;\n    this.servers = serverDescriptions || new Map();\n    this.stale = false;\n    this.compatible = true;\n    this.compatibilityError = null;\n    this.logicalSessionTimeoutMinutes = null;\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 0;\n    this.localThresholdMS = options.localThresholdMS || 0;\n    this.commonWireVersion = commonWireVersion || null;\n\n    // save this locally, but don't display when printing the instance out\n    Object.defineProperty(this, 'options', { value: options, enumberable: false });\n\n    // determine server compatibility\n    for (const serverDescription of this.servers.values()) {\n      if (serverDescription.type === ServerType.Unknown) continue;\n\n      if (serverDescription.minWireVersion > MAX_SUPPORTED_WIRE_VERSION) {\n        this.compatible = false;\n        this.compatibilityError = `Server at ${serverDescription.address} requires wire version ${serverDescription.minWireVersion}, but this version of the driver only supports up to ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n      }\n\n      if (serverDescription.maxWireVersion < MIN_SUPPORTED_WIRE_VERSION) {\n        this.compatible = false;\n        this.compatibilityError = `Server at ${serverDescription.address} reports wire version ${serverDescription.maxWireVersion}, but this version of the driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION}).`;\n        break;\n      }\n    }\n\n    // Whenever a client updates the TopologyDescription from an ismaster response, it MUST set\n    // TopologyDescription.logicalSessionTimeoutMinutes to the smallest logicalSessionTimeoutMinutes\n    // value among ServerDescriptions of all data-bearing server types. If any have a null\n    // logicalSessionTimeoutMinutes, then TopologyDescription.logicalSessionTimeoutMinutes MUST be\n    // set to null.\n    const readableServers = Array.from(this.servers.values()).filter(s => s.isReadable);\n    this.logicalSessionTimeoutMinutes = readableServers.reduce((result, server) => {\n      if (server.logicalSessionTimeoutMinutes == null) return null;\n      if (result == null) return server.logicalSessionTimeoutMinutes;\n      return Math.min(result, server.logicalSessionTimeoutMinutes);\n    }, null);\n  }\n\n  /**\n   * Returns a new TopologyDescription based on the SrvPollingEvent\n   * @param {SrvPollingEvent} ev The event\n   */\n  updateFromSrvPollingEvent(ev) {\n    const newAddresses = ev.addresses();\n    const serverDescriptions = new Map(this.servers);\n    for (const server of this.servers) {\n      if (newAddresses.has(server[0])) {\n        newAddresses.delete(server[0]);\n      } else {\n        serverDescriptions.delete(server[0]);\n      }\n    }\n\n    if (serverDescriptions.size === this.servers.size && newAddresses.size === 0) {\n      return this;\n    }\n\n    for (const address of newAddresses) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n\n    return new TopologyDescription(\n      this.type,\n      serverDescriptions,\n      this.setName,\n      this.maxSetVersion,\n      this.maxElectionId,\n      this.commonWireVersion,\n      this.options,\n      null\n    );\n  }\n\n  /**\n   * Returns a copy of this description updated with a given ServerDescription\n   *\n   * @param {ServerDescription} serverDescription\n   */\n  update(serverDescription) {\n    const address = serverDescription.address;\n    // NOTE: there are a number of prime targets for refactoring here\n    //       once we support destructuring assignments\n\n    // potentially mutated values\n    let topologyType = this.type;\n    let setName = this.setName;\n    let maxSetVersion = this.maxSetVersion;\n    let maxElectionId = this.maxElectionId;\n    let commonWireVersion = this.commonWireVersion;\n\n    if (serverDescription.setName && setName && serverDescription.setName !== setName) {\n      serverDescription = new ServerDescription(address, null);\n    }\n\n    const serverType = serverDescription.type;\n    let serverDescriptions = new Map(this.servers);\n\n    // update common wire version\n    if (serverDescription.maxWireVersion !== 0) {\n      if (commonWireVersion == null) {\n        commonWireVersion = serverDescription.maxWireVersion;\n      } else {\n        commonWireVersion = Math.min(commonWireVersion, serverDescription.maxWireVersion);\n      }\n    }\n\n    // update the actual server description\n    serverDescriptions.set(address, serverDescription);\n\n    if (topologyType === TopologyType.Single) {\n      // once we are defined as single, that never changes\n      return new TopologyDescription(\n        TopologyType.Single,\n        serverDescriptions,\n        setName,\n        maxSetVersion,\n        maxElectionId,\n        commonWireVersion,\n        this.options\n      );\n    }\n\n    if (topologyType === TopologyType.Unknown) {\n      if (serverType === ServerType.Standalone && this.servers.size !== 1) {\n        serverDescriptions.delete(address);\n      } else {\n        topologyType = topologyTypeForServerType(serverType);\n      }\n    }\n\n    if (topologyType === TopologyType.Sharded) {\n      if ([ServerType.Mongos, ServerType.Unknown].indexOf(serverType) === -1) {\n        serverDescriptions.delete(address);\n      }\n    }\n\n    if (topologyType === TopologyType.ReplicaSetNoPrimary) {\n      if ([ServerType.Standalone, ServerType.Mongos].indexOf(serverType) >= 0) {\n        serverDescriptions.delete(address);\n      }\n\n      if (serverType === ServerType.RSPrimary) {\n        const result = updateRsFromPrimary(\n          serverDescriptions,\n          setName,\n          serverDescription,\n          maxSetVersion,\n          maxElectionId\n        );\n\n        (topologyType = result[0]),\n          (setName = result[1]),\n          (maxSetVersion = result[2]),\n          (maxElectionId = result[3]);\n      } else if (\n        [ServerType.RSSecondary, ServerType.RSArbiter, ServerType.RSOther].indexOf(serverType) >= 0\n      ) {\n        const result = updateRsNoPrimaryFromMember(serverDescriptions, setName, serverDescription);\n        (topologyType = result[0]), (setName = result[1]);\n      }\n    }\n\n    if (topologyType === TopologyType.ReplicaSetWithPrimary) {\n      if ([ServerType.Standalone, ServerType.Mongos].indexOf(serverType) >= 0) {\n        serverDescriptions.delete(address);\n        topologyType = checkHasPrimary(serverDescriptions);\n      } else if (serverType === ServerType.RSPrimary) {\n        const result = updateRsFromPrimary(\n          serverDescriptions,\n          setName,\n          serverDescription,\n          maxSetVersion,\n          maxElectionId\n        );\n\n        (topologyType = result[0]),\n          (setName = result[1]),\n          (maxSetVersion = result[2]),\n          (maxElectionId = result[3]);\n      } else if (\n        [ServerType.RSSecondary, ServerType.RSArbiter, ServerType.RSOther].indexOf(serverType) >= 0\n      ) {\n        topologyType = updateRsWithPrimaryFromMember(\n          serverDescriptions,\n          setName,\n          serverDescription\n        );\n      } else {\n        topologyType = checkHasPrimary(serverDescriptions);\n      }\n    }\n\n    return new TopologyDescription(\n      topologyType,\n      serverDescriptions,\n      setName,\n      maxSetVersion,\n      maxElectionId,\n      commonWireVersion,\n      this.options\n    );\n  }\n\n  get error() {\n    const descriptionsWithError = Array.from(this.servers.values()).filter(sd => sd.error);\n    if (descriptionsWithError.length > 0) {\n      return descriptionsWithError[0].error;\n    }\n    return undefined;\n  }\n\n  /**\n   * Determines if the topology description has any known servers\n   */\n  get hasKnownServers() {\n    return Array.from(this.servers.values()).some(sd => sd.type !== ServerType.Unknown);\n  }\n\n  /**\n   * Determines if this topology description has a data-bearing server available.\n   */\n  get hasDataBearingServers() {\n    return Array.from(this.servers.values()).some(sd => sd.isDataBearing);\n  }\n\n  /**\n   * Determines if the topology has a definition for the provided address\n   *\n   * @param {String} address\n   * @return {Boolean} Whether the topology knows about this server\n   */\n  hasServer(address) {\n    return this.servers.has(address);\n  }\n}\n\nfunction topologyTypeForServerType(serverType) {\n  if (serverType === ServerType.Standalone) {\n    return TopologyType.Single;\n  }\n\n  if (serverType === ServerType.Mongos) {\n    return TopologyType.Sharded;\n  }\n\n  if (serverType === ServerType.RSPrimary) {\n    return TopologyType.ReplicaSetWithPrimary;\n  }\n\n  if (serverType === ServerType.RSGhost || serverType === ServerType.Unknown) {\n    return TopologyType.Unknown;\n  }\n\n  return TopologyType.ReplicaSetNoPrimary;\n}\n\nfunction compareObjectId(oid1, oid2) {\n  if (oid1 == null) {\n    return -1;\n  }\n\n  if (oid2 == null) {\n    return 1;\n  }\n\n  if (oid1.id instanceof Buffer && oid2.id instanceof Buffer) {\n    const oid1Buffer = oid1.id;\n    const oid2Buffer = oid2.id;\n    return oid1Buffer.compare(oid2Buffer);\n  }\n\n  const oid1String = oid1.toString();\n  const oid2String = oid2.toString();\n  return oid1String.localeCompare(oid2String);\n}\n\nfunction updateRsFromPrimary(\n  serverDescriptions,\n  setName,\n  serverDescription,\n  maxSetVersion,\n  maxElectionId\n) {\n  setName = setName || serverDescription.setName;\n  if (setName !== serverDescription.setName) {\n    serverDescriptions.delete(serverDescription.address);\n    return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n  }\n\n  const electionId = serverDescription.electionId ? serverDescription.electionId : null;\n  if (serverDescription.setVersion && electionId) {\n    if (maxSetVersion && maxElectionId) {\n      if (\n        maxSetVersion > serverDescription.setVersion ||\n        compareObjectId(maxElectionId, electionId) > 0\n      ) {\n        // this primary is stale, we must remove it\n        serverDescriptions.set(\n          serverDescription.address,\n          new ServerDescription(serverDescription.address)\n        );\n\n        return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n      }\n    }\n\n    maxElectionId = serverDescription.electionId;\n  }\n\n  if (\n    serverDescription.setVersion != null &&\n    (maxSetVersion == null || serverDescription.setVersion > maxSetVersion)\n  ) {\n    maxSetVersion = serverDescription.setVersion;\n  }\n\n  // We've heard from the primary. Is it the same primary as before?\n  for (const address of serverDescriptions.keys()) {\n    const server = serverDescriptions.get(address);\n\n    if (server.type === ServerType.RSPrimary && server.address !== serverDescription.address) {\n      // Reset old primary's type to Unknown.\n      serverDescriptions.set(address, new ServerDescription(server.address));\n\n      // There can only be one primary\n      break;\n    }\n  }\n\n  // Discover new hosts from this primary's response.\n  serverDescription.allHosts.forEach(address => {\n    if (!serverDescriptions.has(address)) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n  });\n\n  // Remove hosts not in the response.\n  const currentAddresses = Array.from(serverDescriptions.keys());\n  const responseAddresses = serverDescription.allHosts;\n  currentAddresses\n    .filter(addr => responseAddresses.indexOf(addr) === -1)\n    .forEach(address => {\n      serverDescriptions.delete(address);\n    });\n\n  return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n}\n\nfunction updateRsWithPrimaryFromMember(serverDescriptions, setName, serverDescription) {\n  if (setName == null) {\n    throw new TypeError('setName is required');\n  }\n\n  if (\n    setName !== serverDescription.setName ||\n    (serverDescription.me && serverDescription.address !== serverDescription.me)\n  ) {\n    serverDescriptions.delete(serverDescription.address);\n  }\n\n  return checkHasPrimary(serverDescriptions);\n}\n\nfunction updateRsNoPrimaryFromMember(serverDescriptions, setName, serverDescription) {\n  let topologyType = TopologyType.ReplicaSetNoPrimary;\n\n  setName = setName || serverDescription.setName;\n  if (setName !== serverDescription.setName) {\n    serverDescriptions.delete(serverDescription.address);\n    return [topologyType, setName];\n  }\n\n  serverDescription.allHosts.forEach(address => {\n    if (!serverDescriptions.has(address)) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n  });\n\n  if (serverDescription.me && serverDescription.address !== serverDescription.me) {\n    serverDescriptions.delete(serverDescription.address);\n  }\n\n  return [topologyType, setName];\n}\n\nfunction checkHasPrimary(serverDescriptions) {\n  for (const addr of serverDescriptions.keys()) {\n    if (serverDescriptions.get(addr).type === ServerType.RSPrimary) {\n      return TopologyType.ReplicaSetWithPrimary;\n    }\n  }\n\n  return TopologyType.ReplicaSetNoPrimary;\n}\n\nmodule.exports = {\n  TopologyDescription\n};\n","'use strict';\n\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst EventEmitter = require('events');\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\nconst uuidV4 = require('./utils').uuidV4;\nconst MongoError = require('./error').MongoError;\nconst isRetryableError = require('././error').isRetryableError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst MongoWriteConcernError = require('./error').MongoWriteConcernError;\nconst Transaction = require('./transactions').Transaction;\nconst TxnState = require('./transactions').TxnState;\nconst isPromiseLike = require('./utils').isPromiseLike;\nconst ReadPreference = require('./topologies/read_preference');\nconst maybePromise = require('../utils').maybePromise;\nconst isTransactionCommand = require('./transactions').isTransactionCommand;\nconst resolveClusterTime = require('./topologies/shared').resolveClusterTime;\nconst isSharded = require('./wireprotocol/shared').isSharded;\nconst maxWireVersion = require('./utils').maxWireVersion;\nconst now = require('./../utils').now;\nconst calculateDurationInMs = require('./../utils').calculateDurationInMs;\nconst minWireVersionForShardedTransactions = 8;\n\nfunction assertAlive(session, callback) {\n  if (session.serverSession == null) {\n    const error = new MongoError('Cannot use a session that has ended');\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return false;\n    }\n\n    throw error;\n  }\n\n  return true;\n}\n\n/**\n * Options to pass when creating a Client Session\n * @typedef {Object} SessionOptions\n * @property {boolean} [causalConsistency=true] Whether causal consistency should be enabled on this session\n * @property {TransactionOptions} [defaultTransactionOptions] The default TransactionOptions to use for transactions started on this session.\n */\n\n/**\n * A BSON document reflecting the lsid of a {@link ClientSession}\n * @typedef {Object} SessionId\n */\n\nconst kServerSession = Symbol('serverSession');\n\n/**\n * A class representing a client session on the server\n * WARNING: not meant to be instantiated directly.\n * @class\n * @hideconstructor\n */\nclass ClientSession extends EventEmitter {\n  /**\n   * Create a client session.\n   * WARNING: not meant to be instantiated directly\n   *\n   * @param {Topology} topology The current client's topology (Internal Class)\n   * @param {ServerSessionPool} sessionPool The server session pool (Internal Class)\n   * @param {SessionOptions} [options] Optional settings\n   * @param {Object} [clientOptions] Optional settings provided when creating a client in the porcelain driver\n   */\n  constructor(topology, sessionPool, options, clientOptions) {\n    super();\n\n    if (topology == null) {\n      throw new Error('ClientSession requires a topology');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      throw new Error('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options || {};\n    clientOptions = clientOptions || {};\n\n    this.topology = topology;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.clientOptions = clientOptions;\n    this[kServerSession] = undefined;\n\n    this.supports = {\n      causalConsistency:\n        typeof options.causalConsistency !== 'undefined' ? options.causalConsistency : true\n    };\n\n    this.clusterTime = options.initialClusterTime;\n\n    this.operationTime = null;\n    this.explicit = !!options.explicit;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n    this.transaction = new Transaction();\n  }\n\n  /**\n   * The server id associated with this session\n   * @type {SessionId}\n   */\n  get id() {\n    return this.serverSession.id;\n  }\n\n  get serverSession() {\n    if (this[kServerSession] == null) {\n      this[kServerSession] = this.sessionPool.acquire();\n    }\n\n    return this[kServerSession];\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param {Object} [options] Optional settings. Currently reserved for future use\n   * @param {Function} [callback] Optional callback for completion of this operation\n   */\n  endSession(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    const session = this;\n    return maybePromise(this, callback, done => {\n      if (session.hasEnded) {\n        return done();\n      }\n\n      function completeEndSession() {\n        // release the server session back to the pool\n        session.sessionPool.release(session.serverSession);\n        session[kServerSession] = undefined;\n\n        // mark the session as ended, and emit a signal\n        session.hasEnded = true;\n        session.emit('ended', session);\n\n        // spec indicates that we should ignore all errors for `endSessions`\n        done();\n      }\n\n      if (session.serverSession && session.inTransaction()) {\n        session.abortTransaction(err => {\n          if (err) return done(err);\n          completeEndSession();\n        });\n\n        return;\n      }\n\n      completeEndSession();\n    });\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param {Timestamp} operationTime the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime) {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Used to determine if this session equals another\n   * @param {ClientSession} session\n   * @return {boolean} true if the sessions are equal\n   */\n  equals(session) {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    return this.id.id.buffer.equals(session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   */\n  incrementTransactionNumber() {\n    this.serverSession.txnNumber++;\n  }\n\n  /**\n   * @returns {boolean} whether this session is currently in a transaction or not\n   */\n  inTransaction() {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param {TransactionOptions} options Options for the transaction\n   */\n  startTransaction(options) {\n    assertAlive(this);\n    if (this.inTransaction()) {\n      throw new MongoError('Transaction already in progress');\n    }\n\n    const topologyMaxWireVersion = maxWireVersion(this.topology);\n    if (\n      isSharded(this.topology) &&\n      topologyMaxWireVersion != null &&\n      topologyMaxWireVersion < minWireVersionForShardedTransactions\n    ) {\n      throw new MongoError('Transactions are not supported on sharded clusters in MongoDB < 4.2.');\n    }\n\n    // increment txnNumber\n    this.incrementTransactionNumber();\n\n    // create transaction state\n    this.transaction = new Transaction(\n      Object.assign({}, this.clientOptions, options || this.defaultTransactionOptions)\n    );\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  commitTransaction(callback) {\n    return maybePromise(this, callback, done => endTransaction(this, 'commitTransaction', done));\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  abortTransaction(callback) {\n    return maybePromise(this, callback, done => endTransaction(this, 'abortTransaction', done));\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   * @ignore\n   */\n  toBSON() {\n    throw new Error('ClientSession cannot be serialized to BSON.');\n  }\n\n  /**\n   * A user provided function to be run within a transaction\n   *\n   * @callback WithTransactionCallback\n   * @param {ClientSession} session The parent session of the transaction running the operation. This should be passed into each operation within the lambda.\n   * @returns {Promise} The resulting Promise of operations run within this transaction\n   */\n\n  /**\n   * Runs a provided lambda within a transaction, retrying either the commit operation\n   * or entire transaction as needed (and when the error permits) to better ensure that\n   * the transaction can complete successfully.\n   *\n   * IMPORTANT: This method requires the user to return a Promise, all lambdas that do not\n   * return a Promise will result in undefined behavior.\n   *\n   * @param {WithTransactionCallback} fn\n   * @param {TransactionOptions} [options] Optional settings for the transaction\n   */\n  withTransaction(fn, options) {\n    const startTime = now();\n    return attemptTransaction(this, startTime, fn, options);\n  }\n}\n\nconst MAX_WITH_TRANSACTION_TIMEOUT = 120000;\nconst UNSATISFIABLE_WRITE_CONCERN_CODE = 100;\nconst UNKNOWN_REPL_WRITE_CONCERN_CODE = 79;\nconst MAX_TIME_MS_EXPIRED_CODE = 50;\nconst NON_DETERMINISTIC_WRITE_CONCERN_ERRORS = new Set([\n  'CannotSatisfyWriteConcern',\n  'UnknownReplWriteConcern',\n  'UnsatisfiableWriteConcern'\n]);\n\nfunction hasNotTimedOut(startTime, max) {\n  return calculateDurationInMs(startTime) < max;\n}\n\nfunction isUnknownTransactionCommitResult(err) {\n  return (\n    isMaxTimeMSExpiredError(err) ||\n    (!NON_DETERMINISTIC_WRITE_CONCERN_ERRORS.has(err.codeName) &&\n      err.code !== UNSATISFIABLE_WRITE_CONCERN_CODE &&\n      err.code !== UNKNOWN_REPL_WRITE_CONCERN_CODE)\n  );\n}\n\nfunction isMaxTimeMSExpiredError(err) {\n  if (err == null) return false;\n  return (\n    err.code === MAX_TIME_MS_EXPIRED_CODE ||\n    (err.writeConcernError && err.writeConcernError.code === MAX_TIME_MS_EXPIRED_CODE)\n  );\n}\n\nfunction attemptTransactionCommit(session, startTime, fn, options) {\n  return session.commitTransaction().catch(err => {\n    if (\n      err instanceof MongoError &&\n      hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT) &&\n      !isMaxTimeMSExpiredError(err)\n    ) {\n      if (err.hasErrorLabel('UnknownTransactionCommitResult')) {\n        return attemptTransactionCommit(session, startTime, fn, options);\n      }\n\n      if (err.hasErrorLabel('TransientTransactionError')) {\n        return attemptTransaction(session, startTime, fn, options);\n      }\n    }\n\n    throw err;\n  });\n}\n\nconst USER_EXPLICIT_TXN_END_STATES = new Set([\n  TxnState.NO_TRANSACTION,\n  TxnState.TRANSACTION_COMMITTED,\n  TxnState.TRANSACTION_ABORTED\n]);\n\nfunction userExplicitlyEndedTransaction(session) {\n  return USER_EXPLICIT_TXN_END_STATES.has(session.transaction.state);\n}\n\nfunction attemptTransaction(session, startTime, fn, options) {\n  session.startTransaction(options);\n\n  let promise;\n  try {\n    promise = fn(session);\n  } catch (err) {\n    promise = Promise.reject(err);\n  }\n\n  if (!isPromiseLike(promise)) {\n    session.abortTransaction();\n    throw new TypeError('Function provided to `withTransaction` must return a Promise');\n  }\n\n  return promise\n    .then(() => {\n      if (userExplicitlyEndedTransaction(session)) {\n        return;\n      }\n\n      return attemptTransactionCommit(session, startTime, fn, options);\n    })\n    .catch(err => {\n      function maybeRetryOrThrow(err) {\n        if (\n          err instanceof MongoError &&\n          err.hasErrorLabel('TransientTransactionError') &&\n          hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT)\n        ) {\n          return attemptTransaction(session, startTime, fn, options);\n        }\n\n        if (isMaxTimeMSExpiredError(err)) {\n          err.addErrorLabel('UnknownTransactionCommitResult');\n        }\n\n        throw err;\n      }\n\n      if (session.transaction.isActive) {\n        return session.abortTransaction().then(() => maybeRetryOrThrow(err));\n      }\n\n      return maybeRetryOrThrow(err);\n    });\n}\n\nfunction endTransaction(session, commandName, callback) {\n  if (!assertAlive(session, callback)) {\n    // checking result in case callback was called\n    return;\n  }\n\n  // handle any initial problematic cases\n  let txnState = session.transaction.state;\n\n  if (txnState === TxnState.NO_TRANSACTION) {\n    callback(new MongoError('No transaction started'));\n    return;\n  }\n\n  if (commandName === 'commitTransaction') {\n    if (\n      txnState === TxnState.STARTING_TRANSACTION ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call commitTransaction after calling abortTransaction'));\n      return;\n    }\n  } else {\n    if (txnState === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call abortTransaction twice'));\n      return;\n    }\n\n    if (\n      txnState === TxnState.TRANSACTION_COMMITTED ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      callback(new MongoError('Cannot call abortTransaction after calling commitTransaction'));\n      return;\n    }\n  }\n\n  // construct and send the command\n  const command = { [commandName]: 1 };\n\n  // apply a writeConcern if specified\n  let writeConcern;\n  if (session.transaction.options.writeConcern) {\n    writeConcern = Object.assign({}, session.transaction.options.writeConcern);\n  } else if (session.clientOptions && session.clientOptions.w) {\n    writeConcern = { w: session.clientOptions.w };\n  }\n\n  if (txnState === TxnState.TRANSACTION_COMMITTED) {\n    writeConcern = Object.assign({ wtimeout: 10000 }, writeConcern, { w: 'majority' });\n  }\n\n  if (writeConcern) {\n    Object.assign(command, { writeConcern });\n  }\n\n  if (commandName === 'commitTransaction' && session.transaction.options.maxTimeMS) {\n    Object.assign(command, { maxTimeMS: session.transaction.options.maxTimeMS });\n  }\n\n  function commandHandler(e, r) {\n    if (commandName === 'commitTransaction') {\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n\n      if (\n        e &&\n        (e instanceof MongoNetworkError ||\n          e instanceof MongoWriteConcernError ||\n          isRetryableError(e) ||\n          isMaxTimeMSExpiredError(e))\n      ) {\n        if (isUnknownTransactionCommitResult(e)) {\n          e.addErrorLabel('UnknownTransactionCommitResult');\n\n          // per txns spec, must unpin session in this case\n          session.transaction.unpinServer();\n        }\n      }\n    } else {\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n    }\n\n    callback(e, r);\n  }\n\n  // The spec indicates that we should ignore all errors on `abortTransaction`\n  function transactionError(err) {\n    return commandName === 'commitTransaction' ? err : null;\n  }\n\n  if (\n    // Assumption here that commandName is \"commitTransaction\" or \"abortTransaction\"\n    session.transaction.recoveryToken &&\n    supportsRecoveryToken(session)\n  ) {\n    command.recoveryToken = session.transaction.recoveryToken;\n  }\n\n  // send the command\n  session.topology.command('admin.$cmd', command, { session }, (err, reply) => {\n    if (err && isRetryableError(err)) {\n      // SPEC-1185: apply majority write concern when retrying commitTransaction\n      if (command.commitTransaction) {\n        // per txns spec, must unpin session in this case\n        session.transaction.unpinServer();\n\n        command.writeConcern = Object.assign({ wtimeout: 10000 }, command.writeConcern, {\n          w: 'majority'\n        });\n      }\n\n      return session.topology.command('admin.$cmd', command, { session }, (_err, _reply) =>\n        commandHandler(transactionError(_err), _reply)\n      );\n    }\n\n    commandHandler(transactionError(err), reply);\n  });\n}\n\nfunction supportsRecoveryToken(session) {\n  const topology = session.topology;\n  return !!topology.s.options.useRecoveryToken;\n}\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @ignore\n */\nclass ServerSession {\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = now();\n    this.txnNumber = 0;\n    this.isDirty = false;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   * @ignore\n   * @param {Date} sessionTimeoutMinutes The server's \"logicalSessionTimeoutMinutes\"\n   * @return {boolean} true if the session has timed out.\n   */\n  hasTimedOut(sessionTimeoutMinutes) {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      ((calculateDurationInMs(this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @ignore\n */\nclass ServerSessionPool {\n  constructor(topology) {\n    if (topology == null) {\n      throw new Error('ServerSessionPool requires a topology');\n    }\n\n    this.topology = topology;\n    this.sessions = [];\n  }\n\n  /**\n   * Ends all sessions in the session pool.\n   * @ignore\n   */\n  endAllPooledSessions(callback) {\n    if (this.sessions.length) {\n      this.topology.endSessions(\n        this.sessions.map(session => session.id),\n        () => {\n          this.sessions = [];\n          if (typeof callback === 'function') {\n            callback();\n          }\n        }\n      );\n\n      return;\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession\n   * is created.\n   * @ignore\n   * @returns {ServerSession}\n   */\n  acquire() {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions.shift();\n      if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n        return session;\n      }\n    }\n\n    return new ServerSession();\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   * @ignore\n   * @param {ServerSession} session The session to release to the pool\n   */\n  release(session) {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const pooledSession = this.sessions[this.sessions.length - 1];\n      if (pooledSession.hasTimedOut(sessionTimeoutMinutes)) {\n        this.sessions.pop();\n      } else {\n        break;\n      }\n    }\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      if (session.isDirty) {\n        return;\n      }\n\n      // otherwise, readd this session to the session pool\n      this.sessions.unshift(session);\n    }\n  }\n}\n\n// TODO: this should be codified in command construction\n// @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#read-concern\nfunction commandSupportsReadConcern(command, options) {\n  if (\n    command.aggregate ||\n    command.count ||\n    command.distinct ||\n    command.find ||\n    command.parallelCollectionScan ||\n    command.geoNear ||\n    command.geoSearch\n  ) {\n    return true;\n  }\n\n  if (\n    command.mapReduce &&\n    options &&\n    options.out &&\n    (options.out.inline === 1 || options.out === 'inline')\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @ignore\n * @param {ClientSession} session the session tracking transaction state\n * @param {Object} command the command to decorate\n * @param {Object} topology the topology for tracking the cluster time\n * @param {Object} [options] Optional settings passed to calling operation\n * @return {MongoError|null} An error, if some error condition was met\n */\nfunction applySession(session, command, options) {\n  if (session.hasEnded) {\n    // TODO: merge this with `assertAlive`, did not want to throw a try/catch here\n    return new MongoError('Cannot use a session that has ended');\n  }\n\n  // SPEC-1019: silently ignore explicit session with unacknowledged write for backwards compatibility\n  if (options && options.writeConcern && options.writeConcern.w === 0) {\n    return;\n  }\n\n  const serverSession = session.serverSession;\n  serverSession.lastUse = now();\n  command.lsid = serverSession.id;\n\n  // first apply non-transaction-specific sessions data\n  const inTransaction = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = options.willRetryWrite;\n  const shouldApplyReadConcern = commandSupportsReadConcern(command, options);\n\n  if (serverSession.txnNumber && (isRetryableWrite || inTransaction)) {\n    command.txnNumber = BSON.Long.fromNumber(serverSession.txnNumber);\n  }\n\n  // now attempt to apply transaction-specific sessions data\n  if (!inTransaction) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    // TODO: the following should only be applied to read operation per spec.\n    // for causal consistency\n    if (session.supports.causalConsistency && session.operationTime && shouldApplyReadConcern) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n\n    return;\n  }\n\n  if (options.readPreference && !options.readPreference.equals(ReadPreference.primary)) {\n    return new MongoError(\n      `Read preference in a transaction must be primary, not: ${options.readPreference.mode}`\n    );\n  }\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session.clientOptions.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n}\n\nfunction updateSessionFromResponse(session, document) {\n  if (document.$clusterTime) {\n    resolveClusterTime(session, document.$clusterTime);\n  }\n\n  if (document.operationTime && session && session.supports.causalConsistency) {\n    session.advanceOperationTime(document.operationTime);\n  }\n\n  if (document.recoveryToken && session && session.inTransaction()) {\n    session.transaction._recoveryToken = document.recoveryToken;\n  }\n}\n\nmodule.exports = {\n  ClientSession,\n  ServerSession,\n  ServerSessionPool,\n  TxnState,\n  applySession,\n  updateSessionFromResponse,\n  commandSupportsReadConcern\n};\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\nconst CoreCursor = require('../cursor').CoreCursor;\nconst Logger = require('../connection/logger');\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst Server = require('./server');\nconst diff = require('./shared').diff;\nconst cloneOptions = require('./shared').cloneOptions;\nconst SessionMixins = require('./shared').SessionMixins;\nconst isRetryableWritesSupported = require('./shared').isRetryableWritesSupported;\nconst relayEvents = require('../utils').relayEvents;\nconst BSON = retrieveBSON();\nconst getMMAPError = require('./shared').getMMAPError;\nconst makeClientMetadata = require('../utils').makeClientMetadata;\nconst legacyIsRetryableWriteError = require('./shared').legacyIsRetryableWriteError;\n\n/**\n * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is\n * used to construct connections.\n */\n\n//\n// States\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar UNREFERENCED = 'unreferenced';\nvar DESTROYING = 'destroying';\nvar DESTROYED = 'destroyed';\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYING, DESTROYED, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYING, DESTROYED, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYING, DESTROYED, UNREFERENCED],\n    unreferenced: [UNREFERENCED, DESTROYING, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.state = newState;\n  } else {\n    self.s.logger.error(\n      f(\n        'Mongos with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\n//\n// ReplSet instance id\nvar id = 1;\nvar handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];\n\n/**\n * Creates a new Mongos instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {number} [options.haInterval=5000] The High availability period for replicaset inquiry\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=120000] Initial delay before TCP keep alive enabled\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for MongoS proxy selection\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=1000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {Mongos} A cursor instance\n * @fires Mongos#connect\n * @fires Mongos#reconnect\n * @fires Mongos#joined\n * @fires Mongos#left\n * @fires Mongos#failed\n * @fires Mongos#fullsetup\n * @fires Mongos#all\n * @fires Mongos#serverHeartbeatStarted\n * @fires Mongos#serverHeartbeatSucceeded\n * @fires Mongos#serverHeartbeatFailed\n * @fires Mongos#topologyOpening\n * @fires Mongos#topologyClosed\n * @fires Mongos#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar Mongos = function(seedlist, options) {\n  options = options || {};\n\n  // Get replSet Id\n  this.id = id++;\n\n  // deduplicate seedlist\n  if (Array.isArray(seedlist)) {\n    seedlist = seedlist.reduce((seeds, seed) => {\n      if (seeds.find(s => s.host === seed.host && s.port === seed.port)) {\n        return seeds;\n      }\n\n      seeds.push(seed);\n      return seeds;\n    }, []);\n  }\n\n  // Internal state\n  this.s = {\n    options: Object.assign({ metadata: makeClientMetadata(options) }, options),\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Factory overrides\n    Cursor: options.cursorFactory || CoreCursor,\n    // Logger instance\n    logger: Logger('Mongos', options),\n    // Seedlist\n    seedlist: seedlist,\n    // Ha interval\n    haInterval: options.haInterval ? options.haInterval : 10000,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Server selection index\n    index: 0,\n    // Connect function options passed in\n    connectOptions: {},\n    // Are we running in debug mode\n    debug: typeof options.debug === 'boolean' ? options.debug : false,\n    // localThresholdMS\n    localThresholdMS: options.localThresholdMS || 15\n  };\n\n  // Log info warning if the socketTimeout < haInterval as it will cause\n  // a lot of recycled connections to happen.\n  if (\n    this.s.logger.isWarn() &&\n    this.s.options.socketTimeout !== 0 &&\n    this.s.options.socketTimeout < this.s.haInterval\n  ) {\n    this.s.logger.warn(\n      f(\n        'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts',\n        this.s.options.socketTimeout,\n        this.s.haInterval\n      )\n    );\n  }\n\n  // Disconnected state\n  this.state = DISCONNECTED;\n\n  // Current proxies we are connecting to\n  this.connectingProxies = [];\n  // Currently connected proxies\n  this.connectedProxies = [];\n  // Disconnected proxies\n  this.disconnectedProxies = [];\n  // Index of proxy to run operations against\n  this.index = 0;\n  // High availability timeout id\n  this.haTimeoutId = null;\n  // Last ismaster\n  this.ismaster = null;\n\n  // Description of the Replicaset\n  this.topologyDescription = {\n    topologyType: 'Unknown',\n    servers: []\n  };\n\n  // Highest clusterTime seen in responses from the current deployment\n  this.clusterTime = null;\n\n  // Add event listener\n  EventEmitter.call(this);\n};\n\ninherits(Mongos, EventEmitter);\nObject.assign(Mongos.prototype, SessionMixins);\n\nObject.defineProperty(Mongos.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return 'mongos';\n  }\n});\n\nObject.defineProperty(Mongos.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(Mongos.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    if (!this.ismaster) return null;\n    return this.ismaster.logicalSessionTimeoutMinutes || null;\n  }\n});\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\nconst SERVER_EVENTS = ['serverDescriptionChanged', 'error', 'close', 'timeout', 'parseError'];\nfunction destroyServer(server, options, callback) {\n  options = options || {};\n  SERVER_EVENTS.forEach(event => server.removeAllListeners(event));\n  server.destroy(options, callback);\n}\n\n/**\n * Initiate server connect\n */\nMongos.prototype.connect = function(options) {\n  var self = this;\n  // Add any connect level options to the internal state\n  this.s.connectOptions = options || {};\n\n  // Set connecting state\n  stateTransition(this, CONNECTING);\n\n  // Create server instances\n  var servers = this.s.seedlist.map(function(x) {\n    const server = new Server(\n      Object.assign({}, self.s.options, x, options, {\n        reconnect: false,\n        monitoring: false,\n        parent: self\n      })\n    );\n\n    relayEvents(server, self, ['serverDescriptionChanged']);\n    return server;\n  });\n\n  // Emit the topology opening event\n  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });\n\n  // Start all server connections\n  connectProxies(self, servers);\n};\n\n/**\n * Authenticate the topology.\n * @method\n * @param {MongoCredentials} credentials The credentials for authentication we are using\n * @param {authResultCallback} callback A callback function\n */\nMongos.prototype.auth = function(credentials, callback) {\n  if (typeof callback === 'function') callback(null, null);\n};\n\nfunction handleEvent(self) {\n  return function() {\n    if (self.state === DESTROYED || self.state === DESTROYING) {\n      return;\n    }\n\n    // Move to list of disconnectedProxies\n    moveServerFrom(self.connectedProxies, self.disconnectedProxies, this);\n    // Emit the initial topology\n    emitTopologyDescriptionChanged(self);\n    // Emit the left signal\n    self.emit('left', 'mongos', this);\n    // Emit the sdam event\n    self.emit('serverClosed', {\n      topologyId: self.id,\n      address: this.name\n    });\n  };\n}\n\nfunction handleInitialConnectEvent(self, event) {\n  return function() {\n    var _this = this;\n\n    // Destroy the instance\n    if (self.state === DESTROYED) {\n      // Emit the initial topology\n      emitTopologyDescriptionChanged(self);\n      // Move from connectingProxies\n      moveServerFrom(self.connectingProxies, self.disconnectedProxies, this);\n      return this.destroy();\n    }\n\n    // Check the type of server\n    if (event === 'connect') {\n      // Get last known ismaster\n      self.ismaster = _this.lastIsMaster();\n\n      // Is this not a proxy, remove t\n      if (self.ismaster.msg === 'isdbgrid') {\n        // Add to the connectd list\n        for (let i = 0; i < self.connectedProxies.length; i++) {\n          if (self.connectedProxies[i].name === _this.name) {\n            // Move from connectingProxies\n            moveServerFrom(self.connectingProxies, self.disconnectedProxies, _this);\n            // Emit the initial topology\n            emitTopologyDescriptionChanged(self);\n            _this.destroy();\n            return self.emit('failed', _this);\n          }\n        }\n\n        // Remove the handlers\n        for (let i = 0; i < handlers.length; i++) {\n          _this.removeAllListeners(handlers[i]);\n        }\n\n        // Add stable state handlers\n        _this.on('error', handleEvent(self, 'error'));\n        _this.on('close', handleEvent(self, 'close'));\n        _this.on('timeout', handleEvent(self, 'timeout'));\n        _this.on('parseError', handleEvent(self, 'parseError'));\n\n        // Move from connecting proxies connected\n        moveServerFrom(self.connectingProxies, self.connectedProxies, _this);\n        // Emit the joined event\n        self.emit('joined', 'mongos', _this);\n      } else {\n        // Print warning if we did not find a mongos proxy\n        if (self.s.logger.isWarn()) {\n          var message = 'expected mongos proxy, but found replicaset member mongod for server %s';\n          // We have a standalone server\n          if (!self.ismaster.hosts) {\n            message = 'expected mongos proxy, but found standalone mongod for server %s';\n          }\n\n          self.s.logger.warn(f(message, _this.name));\n        }\n\n        // This is not a mongos proxy, destroy and remove it completely\n        _this.destroy(true);\n        removeProxyFrom(self.connectingProxies, _this);\n        // Emit the left event\n        self.emit('left', 'server', _this);\n        // Emit failed event\n        self.emit('failed', _this);\n      }\n    } else {\n      moveServerFrom(self.connectingProxies, self.disconnectedProxies, this);\n      // Emit the left event\n      self.emit('left', 'mongos', this);\n      // Emit failed event\n      self.emit('failed', this);\n    }\n\n    // Emit the initial topology\n    emitTopologyDescriptionChanged(self);\n\n    // Trigger topologyMonitor\n    if (self.connectingProxies.length === 0) {\n      // Emit connected if we are connected\n      if (self.connectedProxies.length > 0 && self.state === CONNECTING) {\n        // Set the state to connected\n        stateTransition(self, CONNECTED);\n        // Emit the connect event\n        self.emit('connect', self);\n        self.emit('fullsetup', self);\n        self.emit('all', self);\n      } else if (self.disconnectedProxies.length === 0) {\n        // Print warning if we did not find a mongos proxy\n        if (self.s.logger.isWarn()) {\n          self.s.logger.warn(\n            f('no mongos proxies found in seed list, did you mean to connect to a replicaset')\n          );\n        }\n\n        // Emit the error that no proxies were found\n        return self.emit('error', new MongoError('no mongos proxies found in seed list'));\n      }\n\n      // Topology monitor\n      topologyMonitor(self, { firstConnect: true });\n    }\n  };\n}\n\nfunction connectProxies(self, servers) {\n  // Update connectingProxies\n  self.connectingProxies = self.connectingProxies.concat(servers);\n\n  // Index used to interleaf the server connects, avoiding\n  // runtime issues on io constrained vm's\n  var timeoutInterval = 0;\n\n  function connect(server, timeoutInterval) {\n    setTimeout(function() {\n      // Emit opening server event\n      self.emit('serverOpening', {\n        topologyId: self.id,\n        address: server.name\n      });\n\n      // Emit the initial topology\n      emitTopologyDescriptionChanged(self);\n\n      // Add event handlers\n      server.once('close', handleInitialConnectEvent(self, 'close'));\n      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));\n      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));\n      server.once('error', handleInitialConnectEvent(self, 'error'));\n      server.once('connect', handleInitialConnectEvent(self, 'connect'));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Start connection\n      server.connect(self.s.connectOptions);\n    }, timeoutInterval);\n  }\n\n  // Start all the servers\n  servers.forEach(server => connect(server, timeoutInterval++));\n}\n\nfunction pickProxy(self, session) {\n  // TODO: Destructure :)\n  const transaction = session && session.transaction;\n\n  if (transaction && transaction.server) {\n    if (transaction.server.isConnected()) {\n      return transaction.server;\n    } else {\n      transaction.unpinServer();\n    }\n  }\n\n  // Get the currently connected Proxies\n  var connectedProxies = self.connectedProxies.slice(0);\n\n  // Set lower bound\n  var lowerBoundLatency = Number.MAX_VALUE;\n\n  // Determine the lower bound for the Proxies\n  for (var i = 0; i < connectedProxies.length; i++) {\n    if (connectedProxies[i].lastIsMasterMS < lowerBoundLatency) {\n      lowerBoundLatency = connectedProxies[i].lastIsMasterMS;\n    }\n  }\n\n  // Filter out the possible servers\n  connectedProxies = connectedProxies.filter(function(server) {\n    if (\n      server.lastIsMasterMS <= lowerBoundLatency + self.s.localThresholdMS &&\n      server.isConnected()\n    ) {\n      return true;\n    }\n  });\n\n  let proxy;\n\n  // We have no connectedProxies pick first of the connected ones\n  if (connectedProxies.length === 0) {\n    proxy = self.connectedProxies[0];\n  } else {\n    // Get proxy\n    proxy = connectedProxies[self.index % connectedProxies.length];\n    // Update the index\n    self.index = (self.index + 1) % connectedProxies.length;\n  }\n\n  if (transaction && transaction.isActive && proxy && proxy.isConnected()) {\n    transaction.pinServer(proxy);\n  }\n\n  // Return the proxy\n  return proxy;\n}\n\nfunction moveServerFrom(from, to, proxy) {\n  for (var i = 0; i < from.length; i++) {\n    if (from[i].name === proxy.name) {\n      from.splice(i, 1);\n    }\n  }\n\n  for (i = 0; i < to.length; i++) {\n    if (to[i].name === proxy.name) {\n      to.splice(i, 1);\n    }\n  }\n\n  to.push(proxy);\n}\n\nfunction removeProxyFrom(from, proxy) {\n  for (var i = 0; i < from.length; i++) {\n    if (from[i].name === proxy.name) {\n      from.splice(i, 1);\n    }\n  }\n}\n\nfunction reconnectProxies(self, proxies, callback) {\n  // Count lefts\n  var count = proxies.length;\n\n  // Handle events\n  var _handleEvent = function(self, event) {\n    return function() {\n      var _self = this;\n      count = count - 1;\n\n      // Destroyed\n      if (self.state === DESTROYED || self.state === DESTROYING || self.state === UNREFERENCED) {\n        moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n        return this.destroy();\n      }\n\n      if (event === 'connect') {\n        // Destroyed\n        if (self.state === DESTROYED || self.state === DESTROYING || self.state === UNREFERENCED) {\n          moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n          return _self.destroy();\n        }\n\n        // Remove the handlers\n        for (var i = 0; i < handlers.length; i++) {\n          _self.removeAllListeners(handlers[i]);\n        }\n\n        // Add stable state handlers\n        _self.on('error', handleEvent(self, 'error'));\n        _self.on('close', handleEvent(self, 'close'));\n        _self.on('timeout', handleEvent(self, 'timeout'));\n        _self.on('parseError', handleEvent(self, 'parseError'));\n\n        // Move to the connected servers\n        moveServerFrom(self.connectingProxies, self.connectedProxies, _self);\n        // Emit topology Change\n        emitTopologyDescriptionChanged(self);\n        // Emit joined event\n        self.emit('joined', 'mongos', _self);\n      } else {\n        // Move from connectingProxies\n        moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n        this.destroy();\n      }\n\n      // Are we done finish up callback\n      if (count === 0) {\n        callback();\n      }\n    };\n  };\n\n  // No new servers\n  if (count === 0) {\n    return callback();\n  }\n\n  // Execute method\n  function execute(_server, i) {\n    setTimeout(function() {\n      // Destroyed\n      if (self.state === DESTROYED || self.state === DESTROYING || self.state === UNREFERENCED) {\n        return;\n      }\n\n      // Create a new server instance\n      var server = new Server(\n        Object.assign({}, self.s.options, {\n          host: _server.name.split(':')[0],\n          port: parseInt(_server.name.split(':')[1], 10),\n          reconnect: false,\n          monitoring: false,\n          parent: self\n        })\n      );\n\n      destroyServer(_server, { force: true });\n      removeProxyFrom(self.disconnectedProxies, _server);\n\n      // Relay the server description change\n      relayEvents(server, self, ['serverDescriptionChanged']);\n\n      // Emit opening server event\n      self.emit('serverOpening', {\n        topologyId: server.s.topologyId !== -1 ? server.s.topologyId : self.id,\n        address: server.name\n      });\n\n      // Add temp handlers\n      server.once('connect', _handleEvent(self, 'connect'));\n      server.once('close', _handleEvent(self, 'close'));\n      server.once('timeout', _handleEvent(self, 'timeout'));\n      server.once('error', _handleEvent(self, 'error'));\n      server.once('parseError', _handleEvent(self, 'parseError'));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Connect to proxy\n      self.connectingProxies.push(server);\n      server.connect(self.s.connectOptions);\n    }, i);\n  }\n\n  // Create new instances\n  for (var i = 0; i < proxies.length; i++) {\n    execute(proxies[i], i);\n  }\n}\n\nfunction topologyMonitor(self, options) {\n  options = options || {};\n\n  // no need to set up the monitor if we're already closed\n  if (self.state === DESTROYED || self.state === DESTROYING || self.state === UNREFERENCED) {\n    return;\n  }\n\n  // Set momitoring timeout\n  self.haTimeoutId = setTimeout(function() {\n    if (self.state === DESTROYED || self.state === DESTROYING || self.state === UNREFERENCED) {\n      return;\n    }\n\n    // If we have a primary and a disconnect handler, execute\n    // buffered operations\n    if (self.isConnected() && self.s.disconnectHandler) {\n      self.s.disconnectHandler.execute();\n    }\n\n    // Get the connectingServers\n    var proxies = self.connectedProxies.slice(0);\n    // Get the count\n    var count = proxies.length;\n\n    // If the count is zero schedule a new fast\n    function pingServer(_self, _server, cb) {\n      // Measure running time\n      var start = new Date().getTime();\n\n      // Emit the server heartbeat start\n      emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: _server.name });\n\n      // Execute ismaster\n      _server.command(\n        'admin.$cmd',\n        {\n          ismaster: true\n        },\n        {\n          monitoring: true,\n          socketTimeout: self.s.options.connectionTimeout || 2000\n        },\n        function(err, r) {\n          if (\n            self.state === DESTROYED ||\n            self.state === DESTROYING ||\n            self.state === UNREFERENCED\n          ) {\n            // Move from connectingProxies\n            moveServerFrom(self.connectedProxies, self.disconnectedProxies, _server);\n            _server.destroy();\n            return cb(err, r);\n          }\n\n          // Calculate latency\n          var latencyMS = new Date().getTime() - start;\n\n          // We had an error, remove it from the state\n          if (err) {\n            // Emit the server heartbeat failure\n            emitSDAMEvent(self, 'serverHeartbeatFailed', {\n              durationMS: latencyMS,\n              failure: err,\n              connectionId: _server.name\n            });\n            // Move from connected proxies to disconnected proxies\n            moveServerFrom(self.connectedProxies, self.disconnectedProxies, _server);\n          } else {\n            // Update the server ismaster\n            _server.ismaster = r.result;\n            _server.lastIsMasterMS = latencyMS;\n\n            // Server heart beat event\n            emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n              durationMS: latencyMS,\n              reply: r.result,\n              connectionId: _server.name\n            });\n          }\n\n          cb(err, r);\n        }\n      );\n    }\n\n    // No proxies initiate monitor again\n    if (proxies.length === 0) {\n      // Emit close event if any listeners registered\n      if (self.listeners('close').length > 0 && self.state === CONNECTING) {\n        self.emit('error', new MongoError('no mongos proxy available'));\n      } else {\n        self.emit('close', self);\n      }\n\n      // Attempt to connect to any unknown servers\n      return reconnectProxies(self, self.disconnectedProxies, function() {\n        if (self.state === DESTROYED || self.state === DESTROYING || self.state === UNREFERENCED) {\n          return;\n        }\n\n        // Are we connected ? emit connect event\n        if (self.state === CONNECTING && options.firstConnect) {\n          self.emit('connect', self);\n          self.emit('fullsetup', self);\n          self.emit('all', self);\n        } else if (self.isConnected()) {\n          self.emit('reconnect', self);\n        } else if (!self.isConnected() && self.listeners('close').length > 0) {\n          self.emit('close', self);\n        }\n\n        // Perform topology monitor\n        topologyMonitor(self);\n      });\n    }\n\n    // Ping all servers\n    for (var i = 0; i < proxies.length; i++) {\n      pingServer(self, proxies[i], function() {\n        count = count - 1;\n\n        if (count === 0) {\n          if (\n            self.state === DESTROYED ||\n            self.state === DESTROYING ||\n            self.state === UNREFERENCED\n          ) {\n            return;\n          }\n\n          // Attempt to connect to any unknown servers\n          reconnectProxies(self, self.disconnectedProxies, function() {\n            if (\n              self.state === DESTROYED ||\n              self.state === DESTROYING ||\n              self.state === UNREFERENCED\n            ) {\n              return;\n            }\n\n            // Perform topology monitor\n            topologyMonitor(self);\n          });\n        }\n      });\n    }\n  }, self.s.haInterval);\n}\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nMongos.prototype.lastIsMaster = function() {\n  return this.ismaster;\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nMongos.prototype.unref = function() {\n  // Transition state\n  stateTransition(this, UNREFERENCED);\n  // Get all proxies\n  var proxies = this.connectedProxies.concat(this.connectingProxies);\n  proxies.forEach(function(x) {\n    x.unref();\n  });\n\n  clearTimeout(this.haTimeoutId);\n};\n\n/**\n * Destroy the server connection\n * @param {boolean} [options.force=false] Force destroy the pool\n * @method\n */\nMongos.prototype.destroy = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  stateTransition(this, DESTROYING);\n  if (this.haTimeoutId) {\n    clearTimeout(this.haTimeoutId);\n  }\n\n  const proxies = this.connectedProxies.concat(this.connectingProxies);\n  let serverCount = proxies.length;\n  const serverDestroyed = () => {\n    serverCount--;\n    if (serverCount > 0) {\n      return;\n    }\n\n    emitTopologyDescriptionChanged(this);\n    emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });\n    stateTransition(this, DESTROYED);\n    if (typeof callback === 'function') {\n      callback(null, null);\n    }\n  };\n\n  if (serverCount === 0) {\n    serverDestroyed();\n    return;\n  }\n\n  // Destroy all connecting servers\n  proxies.forEach(server => {\n    // Emit the sdam event\n    this.emit('serverClosed', {\n      topologyId: this.id,\n      address: server.name\n    });\n\n    destroyServer(server, options, serverDestroyed);\n    moveServerFrom(this.connectedProxies, this.disconnectedProxies, server);\n  });\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nMongos.prototype.isConnected = function() {\n  return this.connectedProxies.length > 0;\n};\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nMongos.prototype.isDestroyed = function() {\n  return this.state === DESTROYED;\n};\n\n//\n// Operations\n//\n\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const self = args.self;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = args.ops;\n\n  // Pick a server\n  let server = pickProxy(self, options.session);\n  // No server found error out\n  if (!server) return callback(new MongoError('no mongos proxy available'));\n\n  const willRetryWrite =\n    !args.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction() &&\n    options.explain === undefined;\n\n  const handler = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!legacyIsRetryableWriteError(err, self) || !willRetryWrite) {\n      err = getMMAPError(err);\n      return callback(err);\n    }\n\n    // Pick another server\n    server = pickProxy(self, options.session);\n\n    // No server found error out with original error\n    if (!server) {\n      return callback(err);\n    }\n\n    const newArgs = Object.assign({}, args, { retrying: true });\n    return executeWriteOperation(newArgs, options, callback);\n  };\n\n  if (callback.operationId) {\n    handler.operationId = callback.operationId;\n  }\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  // rerun the operation\n  server[op](ns, ops, options, handler);\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.insert = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('insert', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'insert', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.update = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('update', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'update', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.remove = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('remove', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'remove', ns, ops }, options, callback);\n};\n\nconst RETRYABLE_WRITE_OPERATIONS = ['findAndModify', 'insert', 'update', 'delete'];\n\nfunction isWriteCommand(command) {\n  return RETRYABLE_WRITE_OPERATIONS.some(op => command[op]);\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.command = function(ns, cmd, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  var self = this;\n\n  // Pick a proxy\n  var server = pickProxy(self, options.session);\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if ((server == null || !server.isConnected()) && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // No server returned we had an error\n  if (server == null) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Cloned options\n  var clonedOptions = cloneOptions(options);\n  clonedOptions.topology = self;\n\n  const willRetryWrite =\n    !options.retrying &&\n    options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction() &&\n    isWriteCommand(cmd);\n\n  const cb = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!legacyIsRetryableWriteError(err, self)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newOptions = Object.assign({}, clonedOptions, { retrying: true });\n      return this.command(ns, cmd, newOptions, callback);\n    }\n\n    return callback(err);\n  };\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    clonedOptions.session.incrementTransactionNumber();\n    clonedOptions.willRetryWrite = willRetryWrite;\n  }\n\n  // Execute the command\n  server.command(ns, cmd, clonedOptions, cb);\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nMongos.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(topology, ns, cmd, options);\n};\n\n/**\n * Selects a server\n *\n * @method\n * @param {function} selector Unused\n * @param {ReadPreference} [options.readPreference] Unused\n * @param {ClientSession} [options.session] Specify a session if it is being used\n * @param {function} callback\n */\nMongos.prototype.selectServer = function(selector, options, callback) {\n  if (typeof selector === 'function' && typeof callback === 'undefined')\n    (callback = selector), (selector = undefined), (options = {});\n  if (typeof options === 'function')\n    (callback = options), (options = selector), (selector = undefined);\n  options = options || {};\n\n  const server = pickProxy(this, options.session);\n  if (server == null) {\n    callback(new MongoError('server selection failed'));\n    return;\n  }\n\n  if (this.s.debug) this.emit('pickedServer', null, server);\n  callback(null, server);\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nMongos.prototype.connections = function() {\n  var connections = [];\n\n  for (var i = 0; i < this.connectedProxies.length; i++) {\n    connections = connections.concat(this.connectedProxies[i].connections());\n  }\n\n  return connections;\n};\n\nfunction emitTopologyDescriptionChanged(self) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    var topology = 'Unknown';\n    if (self.connectedProxies.length > 0) {\n      topology = 'Sharded';\n    }\n\n    // Generate description\n    var description = {\n      topologyType: topology,\n      servers: []\n    };\n\n    // All proxies\n    var proxies = self.disconnectedProxies.concat(self.connectingProxies);\n\n    // Add all the disconnected proxies\n    description.servers = description.servers.concat(\n      proxies.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'Unknown';\n        return description;\n      })\n    );\n\n    // Add all the connected proxies\n    description.servers = description.servers.concat(\n      self.connectedProxies.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'Mongos';\n        return description;\n      })\n    );\n\n    // Get the diff\n    var diffResult = diff(self.topologyDescription, description);\n\n    // Create the result\n    var result = {\n      topologyId: self.id,\n      previousDescription: self.topologyDescription,\n      newDescription: description,\n      diff: diffResult\n    };\n\n    // Emit the topologyDescription change\n    if (diffResult.servers.length > 0) {\n      self.emit('topologyDescriptionChanged', result);\n    }\n\n    // Set the new description\n    self.topologyDescription = description;\n  }\n}\n\n/**\n * A mongos connect event, used to verify that the connection is up and running\n *\n * @event Mongos#connect\n * @type {Mongos}\n */\n\n/**\n * A mongos reconnect event, used to verify that the mongos topology has reconnected\n *\n * @event Mongos#reconnect\n * @type {Mongos}\n */\n\n/**\n * A mongos fullsetup event, used to signal that all topology members have been contacted.\n *\n * @event Mongos#fullsetup\n * @type {Mongos}\n */\n\n/**\n * A mongos all event, used to signal that all topology members have been contacted.\n *\n * @event Mongos#all\n * @type {Mongos}\n */\n\n/**\n * A server member left the mongos list\n *\n * @event Mongos#left\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the mongos list\n *\n * @event Mongos#joined\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that joined\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event Mongos#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event Mongos#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event Mongos#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event Mongos#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event Mongos#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event Mongos#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event Mongos#serverHeartbeatStarted\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event Mongos#serverHeartbeatFailed\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event Mongos#serverHeartbeatSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Mongos#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Mongos#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Mongos#commandFailed\n * @type {object}\n */\n\nmodule.exports = Mongos;\n","'use strict';\n\n/**\n * The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n * @class\n * @param {string} mode A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n * @param {array} tags The tags object\n * @param {object} [options] Additional read preference options\n * @param {number} [options.maxStalenessSeconds] Max secondary read staleness in seconds, Minimum value is 90 seconds.\n * @param {object} [options.hedge] Server mode in which the same query is dispatched in parallel to multiple replica set members.\n * @param {boolean} [options.hedge.enabled] Explicitly enable or disable hedged reads.\n * @see https://docs.mongodb.com/manual/core/read-preference/\n * @return {ReadPreference}\n */\nconst ReadPreference = function(mode, tags, options) {\n  if (!ReadPreference.isValid(mode)) {\n    throw new TypeError(`Invalid read preference mode ${mode}`);\n  }\n\n  // TODO(major): tags MUST be an array of tagsets\n  if (tags && !Array.isArray(tags)) {\n    console.warn(\n      'ReadPreference tags must be an array, this will change in the next major version'\n    );\n\n    const tagsHasMaxStalenessSeconds = typeof tags.maxStalenessSeconds !== 'undefined';\n    const tagsHasHedge = typeof tags.hedge !== 'undefined';\n    const tagsHasOptions = tagsHasMaxStalenessSeconds || tagsHasHedge;\n    if (tagsHasOptions) {\n      // this is likely an options object\n      options = tags;\n      tags = undefined;\n    } else {\n      tags = [tags];\n    }\n  }\n\n  this.mode = mode;\n  this.tags = tags;\n  this.hedge = options && options.hedge;\n\n  options = options || {};\n  if (options.maxStalenessSeconds != null) {\n    if (options.maxStalenessSeconds <= 0) {\n      throw new TypeError('maxStalenessSeconds must be a positive integer');\n    }\n\n    this.maxStalenessSeconds = options.maxStalenessSeconds;\n\n    // NOTE: The minimum required wire version is 5 for this read preference. If the existing\n    //       topology has a lower value then a MongoError will be thrown during server selection.\n    this.minWireVersion = 5;\n  }\n\n  if (this.mode === ReadPreference.PRIMARY) {\n    if (this.tags && Array.isArray(this.tags) && this.tags.length > 0) {\n      throw new TypeError('Primary read preference cannot be combined with tags');\n    }\n\n    if (this.maxStalenessSeconds) {\n      throw new TypeError('Primary read preference cannot be combined with maxStalenessSeconds');\n    }\n\n    if (this.hedge) {\n      throw new TypeError('Primary read preference cannot be combined with hedge');\n    }\n  }\n};\n\n// Support the deprecated `preference` property introduced in the porcelain layer\nObject.defineProperty(ReadPreference.prototype, 'preference', {\n  enumerable: true,\n  get: function() {\n    return this.mode;\n  }\n});\n\n/*\n * Read preference mode constants\n */\nReadPreference.PRIMARY = 'primary';\nReadPreference.PRIMARY_PREFERRED = 'primaryPreferred';\nReadPreference.SECONDARY = 'secondary';\nReadPreference.SECONDARY_PREFERRED = 'secondaryPreferred';\nReadPreference.NEAREST = 'nearest';\n\nconst VALID_MODES = [\n  ReadPreference.PRIMARY,\n  ReadPreference.PRIMARY_PREFERRED,\n  ReadPreference.SECONDARY,\n  ReadPreference.SECONDARY_PREFERRED,\n  ReadPreference.NEAREST,\n  null\n];\n\n/**\n * Construct a ReadPreference given an options object.\n *\n * @param {object} options The options object from which to extract the read preference.\n * @return {ReadPreference}\n */\nReadPreference.fromOptions = function(options) {\n  if (!options) return null;\n  const readPreference = options.readPreference;\n  if (!readPreference) return null;\n  const readPreferenceTags = options.readPreferenceTags;\n  const maxStalenessSeconds = options.maxStalenessSeconds;\n  if (typeof readPreference === 'string') {\n    return new ReadPreference(readPreference, readPreferenceTags);\n  } else if (!(readPreference instanceof ReadPreference) && typeof readPreference === 'object') {\n    const mode = readPreference.mode || readPreference.preference;\n    if (mode && typeof mode === 'string') {\n      return new ReadPreference(mode, readPreference.tags, {\n        maxStalenessSeconds: readPreference.maxStalenessSeconds || maxStalenessSeconds,\n        hedge: readPreference.hedge\n      });\n    }\n  }\n\n  return readPreference;\n};\n\n/**\n * Resolves a read preference based on well-defined inheritance rules. This method will not only\n * determine the read preference (if there is one), but will also ensure the returned value is a\n * properly constructed instance of `ReadPreference`.\n *\n * @param {Collection|Db|MongoClient} parent The parent of the operation on which to determine the read\n * preference, used for determining the inherited read preference.\n * @param {object} options The options passed into the method, potentially containing a read preference\n * @returns {(ReadPreference|null)} The resolved read preference\n */\nReadPreference.resolve = function(parent, options) {\n  options = options || {};\n  const session = options.session;\n\n  const inheritedReadPreference = parent && parent.readPreference;\n\n  let readPreference;\n  if (options.readPreference) {\n    readPreference = ReadPreference.fromOptions(options);\n  } else if (session && session.inTransaction() && session.transaction.options.readPreference) {\n    // The transaction’s read preference MUST override all other user configurable read preferences.\n    readPreference = session.transaction.options.readPreference;\n  } else if (inheritedReadPreference != null) {\n    readPreference = inheritedReadPreference;\n  } else {\n    readPreference = ReadPreference.primary;\n  }\n\n  return typeof readPreference === 'string' ? new ReadPreference(readPreference) : readPreference;\n};\n\n/**\n * Replaces options.readPreference with a ReadPreference instance\n */\nReadPreference.translate = function(options) {\n  if (options.readPreference == null) return options;\n  const r = options.readPreference;\n\n  if (typeof r === 'string') {\n    options.readPreference = new ReadPreference(r);\n  } else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n    const mode = r.mode || r.preference;\n    if (mode && typeof mode === 'string') {\n      options.readPreference = new ReadPreference(mode, r.tags, {\n        maxStalenessSeconds: r.maxStalenessSeconds\n      });\n    }\n  } else if (!(r instanceof ReadPreference)) {\n    throw new TypeError('Invalid read preference: ' + r);\n  }\n\n  return options;\n};\n\n/**\n * Validate if a mode is legal\n *\n * @method\n * @param {string} mode The string representing the read preference mode.\n * @return {boolean} True if a mode is valid\n */\nReadPreference.isValid = function(mode) {\n  return VALID_MODES.indexOf(mode) !== -1;\n};\n\n/**\n * Validate if a mode is legal\n *\n * @method\n * @param {string} mode The string representing the read preference mode.\n * @return {boolean} True if a mode is valid\n */\nReadPreference.prototype.isValid = function(mode) {\n  return ReadPreference.isValid(typeof mode === 'string' ? mode : this.mode);\n};\n\nconst needSlaveOk = ['primaryPreferred', 'secondary', 'secondaryPreferred', 'nearest'];\n\n/**\n * Indicates that this readPreference needs the \"slaveOk\" bit when sent over the wire\n * @method\n * @return {boolean}\n * @see https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#op-query\n */\nReadPreference.prototype.slaveOk = function() {\n  return needSlaveOk.indexOf(this.mode) !== -1;\n};\n\n/**\n * Are the two read preference equal\n * @method\n * @param {ReadPreference} readPreference The read preference with which to check equality\n * @return {boolean} True if the two ReadPreferences are equivalent\n */\nReadPreference.prototype.equals = function(readPreference) {\n  return readPreference.mode === this.mode;\n};\n\n/**\n * Return JSON representation\n * @method\n * @return {Object} A JSON representation of the ReadPreference\n */\nReadPreference.prototype.toJSON = function() {\n  const readPreference = { mode: this.mode };\n  if (Array.isArray(this.tags)) readPreference.tags = this.tags;\n  if (this.maxStalenessSeconds) readPreference.maxStalenessSeconds = this.maxStalenessSeconds;\n  if (this.hedge) readPreference.hedge = this.hedge;\n  return readPreference;\n};\n\n/**\n * Primary read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.primary = new ReadPreference('primary');\n/**\n * Primary Preferred read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.primaryPreferred = new ReadPreference('primaryPreferred');\n/**\n * Secondary read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.secondary = new ReadPreference('secondary');\n/**\n * Secondary Preferred read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.secondaryPreferred = new ReadPreference('secondaryPreferred');\n/**\n * Nearest read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.nearest = new ReadPreference('nearest');\n\nmodule.exports = ReadPreference;\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\nconst ReadPreference = require('./read_preference');\nconst CoreCursor = require('../cursor').CoreCursor;\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst Logger = require('../connection/logger');\nconst MongoError = require('../error').MongoError;\nconst Server = require('./server');\nconst ReplSetState = require('./replset_state');\nconst Timeout = require('./shared').Timeout;\nconst Interval = require('./shared').Interval;\nconst SessionMixins = require('./shared').SessionMixins;\nconst isRetryableWritesSupported = require('./shared').isRetryableWritesSupported;\nconst relayEvents = require('../utils').relayEvents;\nconst BSON = retrieveBSON();\nconst getMMAPError = require('./shared').getMMAPError;\nconst makeClientMetadata = require('../utils').makeClientMetadata;\nconst legacyIsRetryableWriteError = require('./shared').legacyIsRetryableWriteError;\nconst now = require('../../utils').now;\nconst calculateDurationInMs = require('../../utils').calculateDurationInMs;\n\n//\n// States\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar UNREFERENCED = 'unreferenced';\nvar DESTROYED = 'destroyed';\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYED, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],\n    unreferenced: [UNREFERENCED, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.state = newState;\n  } else {\n    self.s.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\n//\n// ReplSet instance id\nvar id = 1;\nvar handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];\n\n/**\n * Creates a new Replset instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {boolean} options.setName The Replicaset set name\n * @param {boolean} [options.secondaryOnlyConnectionAllowed=false] Allow connection to a secondary only replicaset\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=120000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=10000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {ReplSet} A cursor instance\n * @fires ReplSet#connect\n * @fires ReplSet#ha\n * @fires ReplSet#joined\n * @fires ReplSet#left\n * @fires ReplSet#failed\n * @fires ReplSet#fullsetup\n * @fires ReplSet#all\n * @fires ReplSet#error\n * @fires ReplSet#serverHeartbeatStarted\n * @fires ReplSet#serverHeartbeatSucceeded\n * @fires ReplSet#serverHeartbeatFailed\n * @fires ReplSet#topologyOpening\n * @fires ReplSet#topologyClosed\n * @fires ReplSet#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar ReplSet = function(seedlist, options) {\n  var self = this;\n  options = options || {};\n\n  // Validate seedlist\n  if (!Array.isArray(seedlist)) throw new MongoError('seedlist must be an array');\n  // Validate list\n  if (seedlist.length === 0) throw new MongoError('seedlist must contain at least one entry');\n  // Validate entries\n  seedlist.forEach(function(e) {\n    if (typeof e.host !== 'string' || typeof e.port !== 'number')\n      throw new MongoError('seedlist entry must contain a host and port');\n  });\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Get replSet Id\n  this.id = id++;\n\n  // Get the localThresholdMS\n  var localThresholdMS = options.localThresholdMS || 15;\n  // Backward compatibility\n  if (options.acceptableLatency) localThresholdMS = options.acceptableLatency;\n\n  // Create a logger\n  var logger = Logger('ReplSet', options);\n\n  // Internal state\n  this.s = {\n    options: Object.assign({ metadata: makeClientMetadata(options) }, options),\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Factory overrides\n    Cursor: options.cursorFactory || CoreCursor,\n    // Logger instance\n    logger: logger,\n    // Seedlist\n    seedlist: seedlist,\n    // Replicaset state\n    replicaSetState: new ReplSetState({\n      id: this.id,\n      setName: options.setName,\n      acceptableLatency: localThresholdMS,\n      heartbeatFrequencyMS: options.haInterval ? options.haInterval : 10000,\n      logger: logger\n    }),\n    // Current servers we are connecting to\n    connectingServers: [],\n    // Ha interval\n    haInterval: options.haInterval ? options.haInterval : 10000,\n    // Minimum heartbeat frequency used if we detect a server close\n    minHeartbeatFrequencyMS: 500,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Server selection index\n    index: 0,\n    // Connect function options passed in\n    connectOptions: {},\n    // Are we running in debug mode\n    debug: typeof options.debug === 'boolean' ? options.debug : false\n  };\n\n  // Add handler for topology change\n  this.s.replicaSetState.on('topologyDescriptionChanged', function(r) {\n    self.emit('topologyDescriptionChanged', r);\n  });\n\n  // Log info warning if the socketTimeout < haInterval as it will cause\n  // a lot of recycled connections to happen.\n  if (\n    this.s.logger.isWarn() &&\n    this.s.options.socketTimeout !== 0 &&\n    this.s.options.socketTimeout < this.s.haInterval\n  ) {\n    this.s.logger.warn(\n      f(\n        'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts',\n        this.s.options.socketTimeout,\n        this.s.haInterval\n      )\n    );\n  }\n\n  // Add forwarding of events from state handler\n  var types = ['joined', 'left'];\n  types.forEach(function(x) {\n    self.s.replicaSetState.on(x, function(t, s) {\n      self.emit(x, t, s);\n    });\n  });\n\n  // Connect stat\n  this.initialConnectState = {\n    connect: false,\n    fullsetup: false,\n    all: false\n  };\n\n  // Disconnected state\n  this.state = DISCONNECTED;\n  this.haTimeoutId = null;\n  // Last ismaster\n  this.ismaster = null;\n  // Contains the intervalId\n  this.intervalIds = [];\n\n  // Highest clusterTime seen in responses from the current deployment\n  this.clusterTime = null;\n};\n\ninherits(ReplSet, EventEmitter);\nObject.assign(ReplSet.prototype, SessionMixins);\n\nObject.defineProperty(ReplSet.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return 'replset';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    return this.s.replicaSetState.logicalSessionTimeoutMinutes || null;\n  }\n});\n\nfunction rexecuteOperations(self) {\n  // If we have a primary and a disconnect handler, execute\n  // buffered operations\n  if (self.s.replicaSetState.hasPrimaryAndSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute();\n  } else if (self.s.replicaSetState.hasPrimary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executePrimary: true });\n  } else if (self.s.replicaSetState.hasSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executeSecondary: true });\n  }\n}\n\nfunction connectNewServers(self, servers, callback) {\n  // No new servers\n  if (servers.length === 0) {\n    return callback();\n  }\n\n  // Count lefts\n  var count = servers.length;\n  var error = null;\n\n  function done() {\n    count = count - 1;\n    if (count === 0) {\n      callback(error);\n    }\n  }\n\n  // Handle events\n  var _handleEvent = function(self, event) {\n    return function(err) {\n      var _self = this;\n\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        this.destroy({ force: true });\n        return done();\n      }\n\n      if (event === 'connect') {\n        // Update the state\n        var result = self.s.replicaSetState.update(_self);\n        // Update the state with the new server\n        if (result) {\n          // Primary lastIsMaster store it\n          if (_self.lastIsMaster() && _self.lastIsMaster().ismaster) {\n            self.ismaster = _self.lastIsMaster();\n          }\n\n          // Remove the handlers\n          for (let i = 0; i < handlers.length; i++) {\n            _self.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _self.on('error', handleEvent(self, 'error'));\n          _self.on('close', handleEvent(self, 'close'));\n          _self.on('timeout', handleEvent(self, 'timeout'));\n          _self.on('parseError', handleEvent(self, 'parseError'));\n\n          // Enalbe the monitoring of the new server\n          monitorServer(_self.lastIsMaster().me, self, {});\n\n          // Rexecute any stalled operation\n          rexecuteOperations(self);\n        } else {\n          _self.destroy({ force: true });\n        }\n      } else if (event === 'error') {\n        error = err;\n      }\n\n      // Rexecute any stalled operation\n      rexecuteOperations(self);\n      done();\n    };\n  };\n\n  // Execute method\n  function execute(_server, i) {\n    setTimeout(function() {\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      // remove existing connecting server if it's failed to connect, otherwise\n      // wait for that server to connect\n      const existingServerIdx = self.s.connectingServers.findIndex(s => s.name === _server);\n      if (existingServerIdx >= 0) {\n        const connectingServer = self.s.connectingServers[existingServerIdx];\n        connectingServer.destroy({ force: true });\n\n        self.s.connectingServers.splice(existingServerIdx, 1);\n        return done();\n      }\n\n      // Create a new server instance\n      var server = new Server(\n        Object.assign({}, self.s.options, {\n          host: _server.split(':')[0],\n          port: parseInt(_server.split(':')[1], 10),\n          reconnect: false,\n          monitoring: false,\n          parent: self\n        })\n      );\n\n      // Add temp handlers\n      server.once('connect', _handleEvent(self, 'connect'));\n      server.once('close', _handleEvent(self, 'close'));\n      server.once('timeout', _handleEvent(self, 'timeout'));\n      server.once('error', _handleEvent(self, 'error'));\n      server.once('parseError', _handleEvent(self, 'parseError'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      self.s.connectingServers.push(server);\n      server.connect(self.s.connectOptions);\n    }, i);\n  }\n\n  // Create new instances\n  for (var i = 0; i < servers.length; i++) {\n    execute(servers[i], i);\n  }\n}\n\n// Ping the server\nvar pingServer = function(self, server, cb) {\n  // Measure running time\n  var start = new Date().getTime();\n\n  // Emit the server heartbeat start\n  emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: server.name });\n\n  // Execute ismaster\n  // Set the socketTimeout for a monitoring message to a low number\n  // Ensuring ismaster calls are timed out quickly\n  server.command(\n    'admin.$cmd',\n    {\n      ismaster: true\n    },\n    {\n      monitoring: true,\n      socketTimeout: self.s.options.connectionTimeout || 2000\n    },\n    function(err, r) {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        server.destroy({ force: true });\n        return cb(err, r);\n      }\n\n      // Calculate latency\n      var latencyMS = new Date().getTime() - start;\n\n      // Set the last updatedTime\n      server.lastUpdateTime = now();\n\n      // We had an error, remove it from the state\n      if (err) {\n        // Emit the server heartbeat failure\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: server.name\n        });\n\n        // Remove server from the state\n        self.s.replicaSetState.remove(server);\n      } else {\n        // Update the server ismaster\n        server.ismaster = r.result;\n\n        // Check if we have a lastWriteDate convert it to MS\n        // and store on the server instance for later use\n        if (server.ismaster.lastWrite && server.ismaster.lastWrite.lastWriteDate) {\n          server.lastWriteDate = server.ismaster.lastWrite.lastWriteDate.getTime();\n        }\n\n        // Do we have a brand new server\n        if (server.lastIsMasterMS === -1) {\n          server.lastIsMasterMS = latencyMS;\n        } else if (server.lastIsMasterMS) {\n          // After the first measurement, average RTT MUST be computed using an\n          // exponentially-weighted moving average formula, with a weighting factor (alpha) of 0.2.\n          // If the prior average is denoted old_rtt, then the new average (new_rtt) is\n          // computed from a new RTT measurement (x) using the following formula:\n          // alpha = 0.2\n          // new_rtt = alpha * x + (1 - alpha) * old_rtt\n          server.lastIsMasterMS = 0.2 * latencyMS + (1 - 0.2) * server.lastIsMasterMS;\n        }\n\n        if (self.s.replicaSetState.update(server)) {\n          // Primary lastIsMaster store it\n          if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n            self.ismaster = server.lastIsMaster();\n          }\n        }\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: server.name\n        });\n      }\n\n      // Calculate the staleness for this server\n      self.s.replicaSetState.updateServerMaxStaleness(server, self.s.haInterval);\n\n      // Callback\n      cb(err, r);\n    }\n  );\n};\n\n// Each server is monitored in parallel in their own timeout loop\nvar monitorServer = function(host, self, options) {\n  // If this is not the initial scan\n  // Is this server already being monitoried, then skip monitoring\n  if (!options.haInterval) {\n    for (var i = 0; i < self.intervalIds.length; i++) {\n      if (self.intervalIds[i].__host === host) {\n        return;\n      }\n    }\n  }\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  // Create the interval\n  var intervalId = new _process(function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      // clearInterval(intervalId);\n      intervalId.stop();\n      return;\n    }\n\n    // Do we already have server connection available for this host\n    var _server = self.s.replicaSetState.get(host);\n\n    // Check if we have a known server connection and reuse\n    if (_server) {\n      // Ping the server\n      return pingServer(self, _server, function(err) {\n        if (err) {\n          // NOTE: should something happen here?\n          return;\n        }\n\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          intervalId.stop();\n          return;\n        }\n\n        // Filter out all called intervaliIds\n        self.intervalIds = self.intervalIds.filter(function(intervalId) {\n          return intervalId.isRunning();\n        });\n\n        // Initial sweep\n        if (_process === Timeout) {\n          if (\n            self.state === CONNECTING &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            stateTransition(self, CONNECTED);\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('connect', self);\n            });\n\n            // Start topology interval check\n            topologyMonitor(self, {});\n          }\n        } else {\n          if (\n            self.state === DISCONNECTED &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            stateTransition(self, CONNECTED);\n\n            // Rexecute any stalled operation\n            rexecuteOperations(self);\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('reconnect', self);\n            });\n          }\n        }\n\n        if (\n          self.initialConnectState.connect &&\n          !self.initialConnectState.fullsetup &&\n          self.s.replicaSetState.hasPrimaryAndSecondary()\n        ) {\n          // Set initial connect state\n          self.initialConnectState.fullsetup = true;\n          self.initialConnectState.all = true;\n\n          process.nextTick(function() {\n            self.emit('fullsetup', self);\n            self.emit('all', self);\n          });\n        }\n      });\n    }\n  }, _haInterval);\n\n  // Start the interval\n  intervalId.start();\n  // Add the intervalId host name\n  intervalId.__host = host;\n  // Add the intervalId to our list of intervalIds\n  self.intervalIds.push(intervalId);\n};\n\nfunction topologyMonitor(self, options) {\n  if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n  options = options || {};\n\n  // Get the servers\n  var servers = Object.keys(self.s.replicaSetState.set);\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  if (_process === Timeout) {\n    return connectNewServers(self, self.s.replicaSetState.unknownServers, function(err) {\n      // Don't emit errors if the connection was already\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      if (!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no primary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      } else if (\n        !self.s.replicaSetState.hasSecondary() &&\n        self.s.options.secondaryOnlyConnectionAllowed\n      ) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no secondary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      }\n\n      for (var i = 0; i < servers.length; i++) {\n        monitorServer(servers[i], self, options);\n      }\n    });\n  } else {\n    for (var i = 0; i < servers.length; i++) {\n      monitorServer(servers[i], self, options);\n    }\n  }\n\n  // Run the reconnect process\n  function executeReconnect(self) {\n    return function() {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      connectNewServers(self, self.s.replicaSetState.unknownServers, function() {\n        var monitoringFrequencey = self.s.replicaSetState.hasPrimary()\n          ? _haInterval\n          : self.s.minHeartbeatFrequencyMS;\n\n        // Create a timeout\n        self.intervalIds.push(new Timeout(executeReconnect(self), monitoringFrequencey).start());\n      });\n    };\n  }\n\n  // Decide what kind of interval to use\n  var intervalTime = !self.s.replicaSetState.hasPrimary()\n    ? self.s.minHeartbeatFrequencyMS\n    : _haInterval;\n\n  self.intervalIds.push(new Timeout(executeReconnect(self), intervalTime).start());\n}\n\nfunction addServerToList(list, server) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].name.toLowerCase() === server.name.toLowerCase()) return true;\n  }\n\n  list.push(server);\n}\n\nfunction handleEvent(self, event) {\n  return function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f('handleEvent %s from server %s in replset with id %s', event, this.name, self.id)\n      );\n    }\n\n    // Remove from the replicaset state\n    self.s.replicaSetState.remove(this);\n\n    // Are we in a destroyed state return\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n    // If no primary and secondary available\n    if (\n      !self.s.replicaSetState.hasPrimary() &&\n      !self.s.replicaSetState.hasSecondary() &&\n      self.s.options.secondaryOnlyConnectionAllowed\n    ) {\n      stateTransition(self, DISCONNECTED);\n    } else if (!self.s.replicaSetState.hasPrimary()) {\n      stateTransition(self, DISCONNECTED);\n    }\n\n    addServerToList(self.s.connectingServers, this);\n  };\n}\n\nfunction shouldTriggerConnect(self) {\n  const isConnecting = self.state === CONNECTING;\n  const hasPrimary = self.s.replicaSetState.hasPrimary();\n  const hasSecondary = self.s.replicaSetState.hasSecondary();\n  const secondaryOnlyConnectionAllowed = self.s.options.secondaryOnlyConnectionAllowed;\n  const readPreferenceSecondary =\n    self.s.connectOptions.readPreference &&\n    self.s.connectOptions.readPreference.equals(ReadPreference.secondary);\n\n  return (\n    (isConnecting &&\n      ((readPreferenceSecondary && hasSecondary) || (!readPreferenceSecondary && hasPrimary))) ||\n    (hasSecondary && secondaryOnlyConnectionAllowed)\n  );\n}\n\nfunction handleInitialConnectEvent(self, event) {\n  return function() {\n    var _this = this;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f(\n          'handleInitialConnectEvent %s from server %s in replset with id %s',\n          event,\n          this.name,\n          self.id\n        )\n      );\n    }\n\n    // Destroy the instance\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      return this.destroy({ force: true });\n    }\n\n    // Check the type of server\n    if (event === 'connect') {\n      // Update the state\n      var result = self.s.replicaSetState.update(_this);\n      if (result === true) {\n        // Primary lastIsMaster store it\n        if (_this.lastIsMaster() && _this.lastIsMaster().ismaster) {\n          self.ismaster = _this.lastIsMaster();\n        }\n\n        // Debug log\n        if (self.s.logger.isDebug()) {\n          self.s.logger.debug(\n            f(\n              'handleInitialConnectEvent %s from server %s in replset with id %s has state [%s]',\n              event,\n              _this.name,\n              self.id,\n              JSON.stringify(self.s.replicaSetState.set)\n            )\n          );\n        }\n\n        // Remove the handlers\n        for (let i = 0; i < handlers.length; i++) {\n          _this.removeAllListeners(handlers[i]);\n        }\n\n        // Add stable state handlers\n        _this.on('error', handleEvent(self, 'error'));\n        _this.on('close', handleEvent(self, 'close'));\n        _this.on('timeout', handleEvent(self, 'timeout'));\n        _this.on('parseError', handleEvent(self, 'parseError'));\n\n        // Do we have a primary or primaryAndSecondary\n        if (shouldTriggerConnect(self)) {\n          // We are connected\n          stateTransition(self, CONNECTED);\n\n          // Set initial connect state\n          self.initialConnectState.connect = true;\n          // Emit connect event\n          process.nextTick(function() {\n            self.emit('connect', self);\n          });\n\n          topologyMonitor(self, {});\n        }\n      } else if (result instanceof MongoError) {\n        _this.destroy({ force: true });\n        self.destroy({ force: true });\n        return self.emit('error', result);\n      } else {\n        _this.destroy({ force: true });\n      }\n    } else {\n      // Emit failure to connect\n      self.emit('failed', this);\n\n      addServerToList(self.s.connectingServers, this);\n      // Remove from the state\n      self.s.replicaSetState.remove(this);\n    }\n\n    if (\n      self.initialConnectState.connect &&\n      !self.initialConnectState.fullsetup &&\n      self.s.replicaSetState.hasPrimaryAndSecondary()\n    ) {\n      // Set initial connect state\n      self.initialConnectState.fullsetup = true;\n      self.initialConnectState.all = true;\n\n      process.nextTick(function() {\n        self.emit('fullsetup', self);\n        self.emit('all', self);\n      });\n    }\n\n    // Remove from the list from connectingServers\n    for (var i = 0; i < self.s.connectingServers.length; i++) {\n      if (self.s.connectingServers[i].equals(this)) {\n        self.s.connectingServers.splice(i, 1);\n      }\n    }\n\n    // Trigger topologyMonitor\n    if (self.s.connectingServers.length === 0 && self.state === CONNECTING) {\n      topologyMonitor(self, { haInterval: 1 });\n    }\n  };\n}\n\nfunction connectServers(self, servers) {\n  // Update connectingServers\n  self.s.connectingServers = self.s.connectingServers.concat(servers);\n\n  // Index used to interleaf the server connects, avoiding\n  // runtime issues on io constrained vm's\n  var timeoutInterval = 0;\n\n  function connect(server, timeoutInterval) {\n    setTimeout(function() {\n      // Add the server to the state\n      if (self.s.replicaSetState.update(server)) {\n        // Primary lastIsMaster store it\n        if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n          self.ismaster = server.lastIsMaster();\n        }\n      }\n\n      // Add event handlers\n      server.once('close', handleInitialConnectEvent(self, 'close'));\n      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));\n      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));\n      server.once('error', handleInitialConnectEvent(self, 'error'));\n      server.once('connect', handleInitialConnectEvent(self, 'connect'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Start connection\n      server.connect(self.s.connectOptions);\n    }, timeoutInterval);\n  }\n\n  // Start all the servers\n  while (servers.length > 0) {\n    connect(servers.shift(), timeoutInterval++);\n  }\n}\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n/**\n * Initiate server connect\n */\nReplSet.prototype.connect = function(options) {\n  var self = this;\n  // Add any connect level options to the internal state\n  this.s.connectOptions = options || {};\n\n  // Set connecting state\n  stateTransition(this, CONNECTING);\n\n  // Create server instances\n  var servers = this.s.seedlist.map(function(x) {\n    return new Server(\n      Object.assign({}, self.s.options, x, options, {\n        reconnect: false,\n        monitoring: false,\n        parent: self\n      })\n    );\n  });\n\n  // Error out as high availability interval must be < than socketTimeout\n  if (\n    this.s.options.socketTimeout > 0 &&\n    this.s.options.socketTimeout <= this.s.options.haInterval\n  ) {\n    return self.emit(\n      'error',\n      new MongoError(\n        f(\n          'haInterval [%s] MS must be set to less than socketTimeout [%s] MS',\n          this.s.options.haInterval,\n          this.s.options.socketTimeout\n        )\n      )\n    );\n  }\n\n  // Emit the topology opening event\n  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });\n  // Start all server connections\n  connectServers(self, servers);\n};\n\n/**\n * Authenticate the topology.\n * @method\n * @param {MongoCredentials} credentials The credentials for authentication we are using\n * @param {authResultCallback} callback A callback function\n */\nReplSet.prototype.auth = function(credentials, callback) {\n  if (typeof callback === 'function') callback(null, null);\n};\n\n/**\n * Destroy the server connection\n * @param {boolean} [options.force=false] Force destroy the pool\n * @method\n */\nReplSet.prototype.destroy = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  let destroyCount = this.s.connectingServers.length + 1; // +1 for the callback from `replicaSetState.destroy`\n  const serverDestroyed = () => {\n    destroyCount--;\n    if (destroyCount > 0) {\n      return;\n    }\n\n    // Emit toplogy closing event\n    emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });\n\n    if (typeof callback === 'function') {\n      callback(null, null);\n    }\n  };\n\n  if (this.state === DESTROYED) {\n    if (typeof callback === 'function') callback(null, null);\n    return;\n  }\n\n  // Transition state\n  stateTransition(this, DESTROYED);\n\n  // Clear out any monitoring process\n  if (this.haTimeoutId) clearTimeout(this.haTimeoutId);\n\n  // Clear out all monitoring\n  for (var i = 0; i < this.intervalIds.length; i++) {\n    this.intervalIds[i].stop();\n  }\n\n  // Reset list of intervalIds\n  this.intervalIds = [];\n\n  if (destroyCount === 0) {\n    serverDestroyed();\n    return;\n  }\n\n  // Destroy the replicaset\n  this.s.replicaSetState.destroy(options, serverDestroyed);\n\n  // Destroy all connecting servers\n  this.s.connectingServers.forEach(function(x) {\n    x.destroy(options, serverDestroyed);\n  });\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nReplSet.prototype.unref = function() {\n  // Transition state\n  stateTransition(this, UNREFERENCED);\n\n  this.s.replicaSetState.allServers().forEach(function(x) {\n    x.unref();\n  });\n\n  clearTimeout(this.haTimeoutId);\n};\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nReplSet.prototype.lastIsMaster = function() {\n  // If secondaryOnlyConnectionAllowed and no primary but secondary\n  // return the secondaries ismaster result.\n  if (\n    this.s.options.secondaryOnlyConnectionAllowed &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.replicaSetState.hasSecondary()\n  ) {\n    return this.s.replicaSetState.secondaries[0].lastIsMaster();\n  }\n\n  return this.s.replicaSetState.primary\n    ? this.s.replicaSetState.primary.lastIsMaster()\n    : this.ismaster;\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nReplSet.prototype.connections = function() {\n  var servers = this.s.replicaSetState.allServers();\n  var connections = [];\n  for (var i = 0; i < servers.length; i++) {\n    connections = connections.concat(servers[i].connections());\n  }\n\n  return connections;\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {boolean}\n */\nReplSet.prototype.isConnected = function(options) {\n  options = options || {};\n\n  // If we specified a read preference check if we are connected to something\n  // than can satisfy this\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondary)) {\n    return this.s.replicaSetState.hasSecondary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primary)) {\n    return this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (this.s.options.secondaryOnlyConnectionAllowed && this.s.replicaSetState.hasSecondary()) {\n    return true;\n  }\n\n  return this.s.replicaSetState.hasPrimary();\n};\n\n/**\n * Figure out if the replicaset instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nReplSet.prototype.isDestroyed = function() {\n  return this.state === DESTROYED;\n};\n\nconst SERVER_SELECTION_TIMEOUT_MS = 10000; // hardcoded `serverSelectionTimeoutMS` for legacy topology\nconst SERVER_SELECTION_INTERVAL_MS = 1000; // time to wait between selection attempts\n/**\n * Selects a server\n *\n * @method\n * @param {function} selector Unused\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {ClientSession} [options.session] Unused\n * @param {function} callback\n */\nReplSet.prototype.selectServer = function(selector, options, callback) {\n  if (typeof selector === 'function' && typeof callback === 'undefined')\n    (callback = selector), (selector = undefined), (options = {});\n  if (typeof options === 'function') (callback = options), (options = selector);\n  options = options || {};\n\n  let readPreference;\n  if (selector instanceof ReadPreference) {\n    readPreference = selector;\n  } else {\n    readPreference = options.readPreference || ReadPreference.primary;\n  }\n\n  let lastError;\n  const start = now();\n  const _selectServer = () => {\n    if (calculateDurationInMs(start) >= SERVER_SELECTION_TIMEOUT_MS) {\n      if (lastError != null) {\n        callback(lastError, null);\n      } else {\n        callback(new MongoError('Server selection timed out'));\n      }\n\n      return;\n    }\n\n    const server = this.s.replicaSetState.pickServer(readPreference);\n    if (server == null) {\n      setTimeout(_selectServer, SERVER_SELECTION_INTERVAL_MS);\n      return;\n    }\n\n    if (!(server instanceof Server)) {\n      lastError = server;\n      setTimeout(_selectServer, SERVER_SELECTION_INTERVAL_MS);\n      return;\n    }\n\n    if (this.s.debug) this.emit('pickedServer', options.readPreference, server);\n    callback(null, server);\n  };\n\n  _selectServer();\n};\n\n/**\n * Get all connected servers\n * @method\n * @return {Server[]}\n */\nReplSet.prototype.getServers = function() {\n  return this.s.replicaSetState.allServers();\n};\n\n//\n// Execute write operation\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const self = args.self;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = args.ops;\n\n  if (self.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  const willRetryWrite =\n    !args.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction() &&\n    options.explain === undefined;\n\n  if (!self.s.replicaSetState.hasPrimary()) {\n    if (self.s.disconnectHandler) {\n      // Not connected but we have a disconnecthandler\n      return self.s.disconnectHandler.add(op, ns, ops, options, callback);\n    } else if (!willRetryWrite) {\n      // No server returned we had an error\n      return callback(new MongoError('no primary server found'));\n    }\n  }\n\n  const handler = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!legacyIsRetryableWriteError(err, self)) {\n      err = getMMAPError(err);\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newArgs = Object.assign({}, args, { retrying: true });\n      return executeWriteOperation(newArgs, options, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (self.s.replicaSetState.primary) {\n      self.s.replicaSetState.primary.destroy();\n      self.s.replicaSetState.remove(self.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  if (callback.operationId) {\n    handler.operationId = callback.operationId;\n  }\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  self.s.replicaSetState.primary[op](ns, ops, options, handler);\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.insert = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'insert', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.update = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'update', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.remove = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'remove', ns, ops }, options, callback);\n};\n\nconst RETRYABLE_WRITE_OPERATIONS = ['findAndModify', 'insert', 'update', 'delete'];\n\nfunction isWriteCommand(command) {\n  return RETRYABLE_WRITE_OPERATIONS.some(op => command[op]);\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.command = function(ns, cmd, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Establish readPreference\n  var readPreference = options.readPreference ? options.readPreference : ReadPreference.primary;\n\n  // If the readPreference is primary and we have no primary, store it\n  if (\n    readPreference.preference === 'primary' &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference === 'secondary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference !== 'primary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // Pick a server\n  var server = this.s.replicaSetState.pickServer(readPreference);\n  // We received an error, return it\n  if (!(server instanceof Server)) return callback(server);\n  // Emit debug event\n  if (self.s.debug) self.emit('pickedServer', ReadPreference.primary, server);\n\n  // No server returned we had an error\n  if (server == null) {\n    return callback(\n      new MongoError(\n        f('no server found that matches the provided readPreference %s', readPreference)\n      )\n    );\n  }\n\n  const willRetryWrite =\n    !options.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction() &&\n    isWriteCommand(cmd);\n\n  const cb = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!legacyIsRetryableWriteError(err, self)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newOptions = Object.assign({}, options, { retrying: true });\n      return this.command(ns, cmd, newOptions, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (this.s.replicaSetState.primary) {\n      this.s.replicaSetState.primary.destroy();\n      this.s.replicaSetState.remove(this.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  // Execute the command\n  server.command(ns, cmd, options, cb);\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nReplSet.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(topology, ns, cmd, options);\n};\n\n/**\n * A replset connect event, used to verify that the connection is up and running\n *\n * @event ReplSet#connect\n * @type {ReplSet}\n */\n\n/**\n * A replset reconnect event, used to verify that the topology reconnected\n *\n * @event ReplSet#reconnect\n * @type {ReplSet}\n */\n\n/**\n * A replset fullsetup event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#fullsetup\n * @type {ReplSet}\n */\n\n/**\n * A replset all event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#all\n * @type {ReplSet}\n */\n\n/**\n * A replset failed event, used to signal that initial replset connection failed.\n *\n * @event ReplSet#failed\n * @type {ReplSet}\n */\n\n/**\n * A server member left the replicaset\n *\n * @event ReplSet#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the replicaset\n *\n * @event ReplSet#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event ReplSet#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event ReplSet#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event ReplSet#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event ReplSet#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event ReplSet#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event ReplSet#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event ReplSet#serverHeartbeatStarted\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event ReplSet#serverHeartbeatFailed\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event ReplSet#serverHeartbeatSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event ReplSet#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event ReplSet#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event ReplSet#commandFailed\n * @type {object}\n */\n\nmodule.exports = ReplSet;\n","'use strict';\n\nvar inherits = require('util').inherits,\n  f = require('util').format,\n  diff = require('./shared').diff,\n  EventEmitter = require('events').EventEmitter,\n  Logger = require('../connection/logger'),\n  ReadPreference = require('./read_preference'),\n  MongoError = require('../error').MongoError,\n  Buffer = require('safe-buffer').Buffer;\n\nvar TopologyType = {\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown'\n};\n\nvar ServerType = {\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown'\n};\n\nvar ReplSetState = function(options) {\n  options = options || {};\n  // Add event listener\n  EventEmitter.call(this);\n  // Topology state\n  this.topologyType = TopologyType.ReplicaSetNoPrimary;\n  this.setName = options.setName;\n\n  // Server set\n  this.set = {};\n\n  // Unpacked options\n  this.id = options.id;\n  this.setName = options.setName;\n\n  // Replicaset logger\n  this.logger = options.logger || Logger('ReplSet', options);\n\n  // Server selection index\n  this.index = 0;\n  // Acceptable latency\n  this.acceptableLatency = options.acceptableLatency || 15;\n\n  // heartbeatFrequencyMS\n  this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 10000;\n\n  // Server side\n  this.primary = null;\n  this.secondaries = [];\n  this.arbiters = [];\n  this.passives = [];\n  this.ghosts = [];\n  // Current unknown hosts\n  this.unknownServers = [];\n  // In set status\n  this.set = {};\n  // Status\n  this.maxElectionId = null;\n  this.maxSetVersion = 0;\n  // Description of the Replicaset\n  this.replicasetDescription = {\n    topologyType: 'Unknown',\n    servers: []\n  };\n\n  this.logicalSessionTimeoutMinutes = undefined;\n};\n\ninherits(ReplSetState, EventEmitter);\n\nReplSetState.prototype.hasPrimaryAndSecondary = function() {\n  return this.primary != null && this.secondaries.length > 0;\n};\n\nReplSetState.prototype.hasPrimaryOrSecondary = function() {\n  return this.hasPrimary() || this.hasSecondary();\n};\n\nReplSetState.prototype.hasPrimary = function() {\n  return this.primary != null;\n};\n\nReplSetState.prototype.hasSecondary = function() {\n  return this.secondaries.length > 0;\n};\n\nReplSetState.prototype.get = function(host) {\n  var servers = this.allServers();\n\n  for (var i = 0; i < servers.length; i++) {\n    if (servers[i].name.toLowerCase() === host.toLowerCase()) {\n      return servers[i];\n    }\n  }\n\n  return null;\n};\n\nReplSetState.prototype.allServers = function(options) {\n  options = options || {};\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  if (!options.ignoreArbiters) servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n  return servers;\n};\n\nReplSetState.prototype.destroy = function(options, callback) {\n  const serversToDestroy = this.secondaries\n    .concat(this.arbiters)\n    .concat(this.passives)\n    .concat(this.ghosts);\n  if (this.primary) serversToDestroy.push(this.primary);\n\n  let serverCount = serversToDestroy.length;\n  const serverDestroyed = () => {\n    serverCount--;\n    if (serverCount > 0) {\n      return;\n    }\n\n    // Clear out the complete state\n    this.secondaries = [];\n    this.arbiters = [];\n    this.passives = [];\n    this.ghosts = [];\n    this.unknownServers = [];\n    this.set = {};\n    this.primary = null;\n\n    // Emit the topology changed\n    emitTopologyDescriptionChanged(this);\n\n    if (typeof callback === 'function') {\n      callback(null, null);\n    }\n  };\n\n  if (serverCount === 0) {\n    serverDestroyed();\n    return;\n  }\n\n  serversToDestroy.forEach(server => server.destroy(options, serverDestroyed));\n};\n\nReplSetState.prototype.remove = function(server, options) {\n  options = options || {};\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  // Only remove if the current server is not connected\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n\n  // Check if it's active and this is just a failed connection attempt\n  for (var i = 0; i < servers.length; i++) {\n    if (\n      !options.force &&\n      servers[i].equals(server) &&\n      servers[i].isConnected &&\n      servers[i].isConnected()\n    ) {\n      return;\n    }\n  }\n\n  // If we have it in the set remove it\n  if (this.set[serverName]) {\n    this.set[serverName].type = ServerType.Unknown;\n    this.set[serverName].electionId = null;\n    this.set[serverName].setName = null;\n    this.set[serverName].setVersion = null;\n  }\n\n  // Remove type\n  var removeType = null;\n\n  // Remove from any lists\n  if (this.primary && this.primary.equals(server)) {\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    removeType = 'primary';\n  }\n\n  // Remove from any other server lists\n  removeType = removeFrom(server, this.secondaries) ? 'secondary' : removeType;\n  removeType = removeFrom(server, this.arbiters) ? 'arbiter' : removeType;\n  removeType = removeFrom(server, this.passives) ? 'secondary' : removeType;\n  removeFrom(server, this.ghosts);\n  removeFrom(server, this.unknownServers);\n\n  // Push to unknownServers\n  this.unknownServers.push(serverName);\n\n  // Do we have a removeType\n  if (removeType) {\n    this.emit('left', removeType, server);\n  }\n};\n\nconst isArbiter = ismaster => ismaster.arbiterOnly && ismaster.setName;\n\nReplSetState.prototype.update = function(server) {\n  var self = this;\n  // Get the current ismaster\n  var ismaster = server.lastIsMaster();\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  //\n  // Add any hosts\n  //\n  if (ismaster) {\n    // Join all the possible new hosts\n    var hosts = Array.isArray(ismaster.hosts) ? ismaster.hosts : [];\n    hosts = hosts.concat(Array.isArray(ismaster.arbiters) ? ismaster.arbiters : []);\n    hosts = hosts.concat(Array.isArray(ismaster.passives) ? ismaster.passives : []);\n    hosts = hosts.map(function(s) {\n      return s.toLowerCase();\n    });\n\n    // Add all hosts as unknownServers\n    for (var i = 0; i < hosts.length; i++) {\n      // Add to the list of unknown server\n      if (\n        this.unknownServers.indexOf(hosts[i]) === -1 &&\n        (!this.set[hosts[i]] || this.set[hosts[i]].type === ServerType.Unknown)\n      ) {\n        this.unknownServers.push(hosts[i].toLowerCase());\n      }\n\n      if (!this.set[hosts[i]]) {\n        this.set[hosts[i]] = {\n          type: ServerType.Unknown,\n          electionId: null,\n          setName: null,\n          setVersion: null\n        };\n      }\n    }\n  }\n\n  //\n  // Unknown server\n  //\n  if (!ismaster && !inList(ismaster, server, this.unknownServers)) {\n    self.set[serverName] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n    // Update set information about the server instance\n    self.set[serverName].type = ServerType.Unknown;\n    self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n    self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n    self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n\n    if (self.unknownServers.indexOf(server.name) === -1) {\n      self.unknownServers.push(serverName);\n    }\n\n    // Set the topology\n    return false;\n  }\n\n  // Update logicalSessionTimeoutMinutes\n  if (ismaster.logicalSessionTimeoutMinutes !== undefined && !isArbiter(ismaster)) {\n    if (\n      self.logicalSessionTimeoutMinutes === undefined ||\n      ismaster.logicalSessionTimeoutMinutes === null\n    ) {\n      self.logicalSessionTimeoutMinutes = ismaster.logicalSessionTimeoutMinutes;\n    } else {\n      self.logicalSessionTimeoutMinutes = Math.min(\n        self.logicalSessionTimeoutMinutes,\n        ismaster.logicalSessionTimeoutMinutes\n      );\n    }\n  }\n\n  //\n  // Is this a mongos\n  //\n  if (ismaster && ismaster.msg === 'isdbgrid') {\n    if (this.primary && this.primary.name === serverName) {\n      this.primary = null;\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    return false;\n  }\n\n  // A RSGhost instance\n  if (ismaster.isreplicaset) {\n    self.set[serverName] = {\n      type: ServerType.RSGhost,\n      setVersion: null,\n      electionId: null,\n      setName: ismaster.setName\n    };\n\n    if (this.primary && this.primary.name === serverName) {\n      this.primary = null;\n    }\n\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n\n    // Set the topology\n    return false;\n  }\n\n  // A RSOther instance\n  if (\n    (ismaster.setName && ismaster.hidden) ||\n    (ismaster.setName &&\n      !ismaster.ismaster &&\n      !ismaster.secondary &&\n      !ismaster.arbiterOnly &&\n      !ismaster.passive)\n  ) {\n    self.set[serverName] = {\n      type: ServerType.RSOther,\n      setVersion: null,\n      electionId: null,\n      setName: ismaster.setName\n    };\n\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    return false;\n  }\n\n  //\n  // Standalone server, destroy and return\n  //\n  if (ismaster && ismaster.ismaster && !ismaster.setName) {\n    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.Unknown;\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // Server in maintanance mode\n  //\n  if (ismaster && !ismaster.ismaster && !ismaster.secondary && !ismaster.arbiterOnly) {\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // If the .me field does not match the passed in server\n  //\n  if (ismaster.me && ismaster.me.toLowerCase() !== serverName) {\n    if (this.logger.isWarn()) {\n      this.logger.warn(\n        f(\n          'the seedlist server was removed due to its address %s not matching its ismaster.me address %s',\n          server.name,\n          ismaster.me\n        )\n      );\n    }\n\n    // Delete from the set\n    delete this.set[serverName];\n    // Delete unknown servers\n    removeFrom(server, self.unknownServers);\n\n    // Destroy the instance\n    server.destroy({ force: true });\n\n    // Set the type of topology we have\n    if (this.primary && !this.primary.equals(server)) {\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    //\n    // We have a potential primary\n    //\n    if (!this.primary && ismaster.primary) {\n      this.set[ismaster.primary.toLowerCase()] = {\n        type: ServerType.PossiblePrimary,\n        setName: null,\n        electionId: null,\n        setVersion: null\n      };\n    }\n\n    return false;\n  }\n\n  //\n  // Primary handling\n  //\n  if (!this.primary && ismaster.ismaster && ismaster.setName) {\n    var ismasterElectionId = server.lastIsMaster().electionId;\n    if (this.setName && this.setName !== ismaster.setName) {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      return new MongoError(\n        f(\n          'setName from ismaster does not match provided connection setName [%s] != [%s]',\n          ismaster.setName,\n          this.setName\n        )\n      );\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      var result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n      // Get the electionIds\n      var ismasterSetVersion = server.lastIsMaster().setVersion;\n\n      if (result === 1) {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n        return false;\n      } else if (result === 0 && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          this.topologyType = TopologyType.ReplicaSetNoPrimary;\n          return false;\n        }\n      }\n\n      this.maxSetVersion = ismasterSetVersion;\n      this.maxElectionId = ismasterElectionId;\n    }\n\n    // Hande normalization of server names\n    var normalizedHosts = ismaster.hosts.map(function(x) {\n      return x.toLowerCase();\n    });\n    var locationIndex = normalizedHosts.indexOf(serverName);\n\n    // Validate that the server exists in the host list\n    if (locationIndex !== -1) {\n      self.primary = server;\n      self.set[serverName] = {\n        type: ServerType.RSPrimary,\n        setVersion: ismaster.setVersion,\n        electionId: ismaster.electionId,\n        setName: ismaster.setName\n      };\n\n      // Set the topology\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      if (ismaster.setName) this.setName = ismaster.setName;\n      removeFrom(server, self.unknownServers);\n      removeFrom(server, self.secondaries);\n      removeFrom(server, self.passives);\n      self.emit('joined', 'primary', server);\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    emitTopologyDescriptionChanged(self);\n    return true;\n  } else if (ismaster.ismaster && ismaster.setName) {\n    // Get the electionIds\n    var currentElectionId = self.set[self.primary.name.toLowerCase()].electionId;\n    var currentSetVersion = self.set[self.primary.name.toLowerCase()].setVersion;\n    var currentSetName = self.set[self.primary.name.toLowerCase()].setName;\n    ismasterElectionId = server.lastIsMaster().electionId;\n    ismasterSetVersion = server.lastIsMaster().setVersion;\n    var ismasterSetName = server.lastIsMaster().setName;\n\n    // Is it the same server instance\n    if (this.primary.equals(server) && currentSetName === ismasterSetName) {\n      return false;\n    }\n\n    // If we do not have the same rs name\n    if (currentSetName && currentSetName !== ismasterSetName) {\n      if (!this.primary.equals(server)) {\n        this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      } else {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      }\n\n      return false;\n    }\n\n    // Check if we need to replace the server\n    if (currentElectionId && ismasterElectionId) {\n      result = compareObjectIds(currentElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion > ismasterSetVersion) {\n        return false;\n      }\n    } else if (!currentElectionId && ismasterElectionId && ismasterSetVersion) {\n      if (ismasterSetVersion < this.maxSetVersion) {\n        return false;\n      }\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      } else {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      }\n\n      this.maxElectionId = ismasterElectionId;\n      this.maxSetVersion = ismasterSetVersion;\n    } else {\n      this.maxSetVersion = ismasterSetVersion;\n    }\n\n    // Modify the entry to unknown\n    self.set[self.primary.name.toLowerCase()] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n\n    // Signal primary left\n    self.emit('left', 'primary', this.primary);\n    // Destroy the instance\n    self.primary.destroy({ force: true });\n    // Set the new instance\n    self.primary = server;\n    // Set the set information\n    self.set[serverName] = {\n      type: ServerType.RSPrimary,\n      setVersion: ismaster.setVersion,\n      electionId: ismaster.electionId,\n      setName: ismaster.setName\n    };\n\n    // Set the topology\n    this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    removeFrom(server, self.secondaries);\n    removeFrom(server, self.passives);\n    self.emit('joined', 'primary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  // A possible instance\n  if (!this.primary && ismaster.primary) {\n    self.set[ismaster.primary.toLowerCase()] = {\n      type: ServerType.PossiblePrimary,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n  }\n\n  //\n  // Secondary handling\n  //\n  if (\n    ismaster.secondary &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.secondaries) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.secondaries);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy({ force: true });\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    // Emit secondary joined replicaset\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Arbiter handling\n  //\n  if (\n    isArbiter(ismaster) &&\n    !inList(ismaster, server, this.arbiters) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSArbiter, ismaster, server, this.arbiters);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    self.emit('joined', 'arbiter', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Passive handling\n  //\n  if (\n    ismaster.passive &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.passives) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.passives);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy({ force: true });\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Remove the primary\n  //\n  if (this.set[serverName] && this.set[serverName].type === ServerType.RSPrimary) {\n    self.emit('left', 'primary', this.primary);\n    this.primary.destroy({ force: true });\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    return false;\n  }\n\n  this.topologyType = this.primary\n    ? TopologyType.ReplicaSetWithPrimary\n    : TopologyType.ReplicaSetNoPrimary;\n  return false;\n};\n\n/**\n * Recalculate single server max staleness\n * @method\n */\nReplSetState.prototype.updateServerMaxStaleness = function(server, haInterval) {\n  // Locate the max secondary lastwrite\n  var max = 0;\n  // Go over all secondaries\n  for (var i = 0; i < this.secondaries.length; i++) {\n    max = Math.max(max, this.secondaries[i].lastWriteDate);\n  }\n\n  // Perform this servers staleness calculation\n  if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary && this.hasPrimary()) {\n    server.staleness =\n      server.lastUpdateTime -\n      server.lastWriteDate -\n      (this.primary.lastUpdateTime - this.primary.lastWriteDate) +\n      haInterval;\n  } else if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary) {\n    server.staleness = max - server.lastWriteDate + haInterval;\n  }\n};\n\n/**\n * Recalculate all the staleness values for secodaries\n * @method\n */\nReplSetState.prototype.updateSecondariesMaxStaleness = function(haInterval) {\n  for (var i = 0; i < this.secondaries.length; i++) {\n    this.updateServerMaxStaleness(this.secondaries[i], haInterval);\n  }\n};\n\n/**\n * Pick a server by the passed in ReadPreference\n * @method\n * @param {ReadPreference} readPreference The ReadPreference instance to use\n */\nReplSetState.prototype.pickServer = function(readPreference) {\n  // If no read Preference set to primary by default\n  readPreference = readPreference || ReadPreference.primary;\n\n  // maxStalenessSeconds is not allowed with a primary read\n  if (readPreference.preference === 'primary' && readPreference.maxStalenessSeconds != null) {\n    return new MongoError('primary readPreference incompatible with maxStalenessSeconds');\n  }\n\n  // Check if we have any non compatible servers for maxStalenessSeconds\n  var allservers = this.primary ? [this.primary] : [];\n  allservers = allservers.concat(this.secondaries);\n\n  // Does any of the servers not support the right wire protocol version\n  // for maxStalenessSeconds when maxStalenessSeconds specified on readPreference. Then error out\n  if (readPreference.maxStalenessSeconds != null) {\n    for (var i = 0; i < allservers.length; i++) {\n      if (allservers[i].ismaster.maxWireVersion < 5) {\n        return new MongoError(\n          'maxStalenessSeconds not supported by at least one of the replicaset members'\n        );\n      }\n    }\n  }\n\n  // Do we have the nearest readPreference\n  if (readPreference.preference === 'nearest' && readPreference.maxStalenessSeconds == null) {\n    return pickNearest(this, readPreference);\n  } else if (\n    readPreference.preference === 'nearest' &&\n    readPreference.maxStalenessSeconds != null\n  ) {\n    return pickNearestMaxStalenessSeconds(this, readPreference);\n  }\n\n  // Get all the secondaries\n  var secondaries = this.secondaries;\n\n  // Check if we can satisfy and of the basic read Preferences\n  if (readPreference.equals(ReadPreference.secondary) && secondaries.length === 0) {\n    return new MongoError('no secondary server available');\n  }\n\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) &&\n    secondaries.length === 0 &&\n    this.primary == null\n  ) {\n    return new MongoError('no secondary or primary server available');\n  }\n\n  if (readPreference.equals(ReadPreference.primary) && this.primary == null) {\n    return new MongoError('no primary server available');\n  }\n\n  // Secondary preferred or just secondaries\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) ||\n    readPreference.equals(ReadPreference.secondary)\n  ) {\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      // Pick nearest of any other servers available\n      var server = pickNearest(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      // Pick nearest of any other servers available\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    }\n\n    if (readPreference.equals(ReadPreference.secondaryPreferred)) {\n      return this.primary;\n    }\n\n    return null;\n  }\n\n  // Primary preferred\n  if (readPreference.equals(ReadPreference.primaryPreferred)) {\n    server = null;\n\n    // We prefer the primary if it's available\n    if (this.primary) {\n      return this.primary;\n    }\n\n    // Pick a secondary\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      server = pickNearest(this, readPreference);\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n    }\n\n    //  Did we find a server\n    if (server) return server;\n  }\n\n  // Return the primary\n  return this.primary;\n};\n\n//\n// Filter serves by tags\nvar filterByTags = function(readPreference, servers) {\n  if (readPreference.tags == null) return servers;\n  var filteredServers = [];\n  var tagsArray = Array.isArray(readPreference.tags) ? readPreference.tags : [readPreference.tags];\n\n  // Iterate over the tags\n  for (var j = 0; j < tagsArray.length; j++) {\n    var tags = tagsArray[j];\n\n    // Iterate over all the servers\n    for (var i = 0; i < servers.length; i++) {\n      var serverTag = servers[i].lastIsMaster().tags || {};\n\n      // Did we find the a matching server\n      var found = true;\n      // Check if the server is valid\n      for (var name in tags) {\n        if (serverTag[name] !== tags[name]) {\n          found = false;\n        }\n      }\n\n      // Add to candidate list\n      if (found) {\n        filteredServers.push(servers[i]);\n      }\n    }\n  }\n\n  // Returned filtered servers\n  return filteredServers;\n};\n\nfunction pickNearestMaxStalenessSeconds(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Get the maxStalenessMS\n  var maxStalenessMS = readPreference.maxStalenessSeconds * 1000;\n\n  // Check if the maxStalenessMS > 90 seconds\n  if (maxStalenessMS < 90 * 1000) {\n    return new MongoError('maxStalenessSeconds must be set to at least 90 seconds');\n  }\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (self.primary && servers.length === 0 && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.staleness <= maxStalenessMS;\n  });\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    return a.lastIsMasterMS - b.lastIsMasterMS;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction pickNearest(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (servers.length === 0 && self.primary && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    return a.lastIsMasterMS - b.lastIsMasterMS;\n  });\n\n  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)\n  var lowest = servers.length > 0 ? servers[0].lastIsMasterMS : 0;\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.lastIsMasterMS <= lowest + self.acceptableLatency;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction inList(ismaster, server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i] && list[i].name && list[i].name.toLowerCase() === server.name.toLowerCase())\n      return true;\n  }\n\n  return false;\n}\n\nfunction addToList(self, type, ismaster, server, list) {\n  var serverName = server.name.toLowerCase();\n  // Update set information about the server instance\n  self.set[serverName].type = type;\n  self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n  self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n  self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n  // Add to the list\n  list.push(server);\n}\n\nfunction compareObjectIds(id1, id2) {\n  var a = Buffer.from(id1.toHexString(), 'hex');\n  var b = Buffer.from(id2.toHexString(), 'hex');\n\n  if (a === b) {\n    return 0;\n  }\n\n  if (typeof Buffer.compare === 'function') {\n    return Buffer.compare(a, b);\n  }\n\n  var x = a.length;\n  var y = b.length;\n  var len = Math.min(x, y);\n\n  for (var i = 0; i < len; i++) {\n    if (a[i] !== b[i]) {\n      break;\n    }\n  }\n\n  if (i !== len) {\n    x = a[i];\n    y = b[i];\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0;\n}\n\nfunction removeFrom(server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].equals && list[i].equals(server)) {\n      list.splice(i, 1);\n      return true;\n    } else if (typeof list[i] === 'string' && list[i].toLowerCase() === server.name.toLowerCase()) {\n      list.splice(i, 1);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction emitTopologyDescriptionChanged(self) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    var topology = 'Unknown';\n    var setName = self.setName;\n\n    if (self.hasPrimaryAndSecondary()) {\n      topology = 'ReplicaSetWithPrimary';\n    } else if (!self.hasPrimary() && self.hasSecondary()) {\n      topology = 'ReplicaSetNoPrimary';\n    }\n\n    // Generate description\n    var description = {\n      topologyType: topology,\n      setName: setName,\n      servers: []\n    };\n\n    // Add the primary to the list\n    if (self.hasPrimary()) {\n      var desc = self.primary.getDescription();\n      desc.type = 'RSPrimary';\n      description.servers.push(desc);\n    }\n\n    // Add all the secondaries\n    description.servers = description.servers.concat(\n      self.secondaries.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Add all the arbiters\n    description.servers = description.servers.concat(\n      self.arbiters.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSArbiter';\n        return description;\n      })\n    );\n\n    // Add all the passives\n    description.servers = description.servers.concat(\n      self.passives.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Get the diff\n    var diffResult = diff(self.replicasetDescription, description);\n\n    // Create the result\n    var result = {\n      topologyId: self.id,\n      previousDescription: self.replicasetDescription,\n      newDescription: description,\n      diff: diffResult\n    };\n\n    // Emit the topologyDescription change\n    // if(diffResult.servers.length > 0) {\n    self.emit('topologyDescriptionChanged', result);\n    // }\n\n    // Set the new description\n    self.replicasetDescription = description;\n  }\n}\n\nmodule.exports = ReplSetState;\n","'use strict';\n\nvar inherits = require('util').inherits,\n  f = require('util').format,\n  EventEmitter = require('events').EventEmitter,\n  ReadPreference = require('./read_preference'),\n  Logger = require('../connection/logger'),\n  debugOptions = require('../connection/utils').debugOptions,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  Pool = require('../connection/pool'),\n  MongoError = require('../error').MongoError,\n  MongoNetworkError = require('../error').MongoNetworkError,\n  wireProtocol = require('../wireprotocol'),\n  CoreCursor = require('../cursor').CoreCursor,\n  sdam = require('./shared'),\n  createCompressionInfo = require('./shared').createCompressionInfo,\n  resolveClusterTime = require('./shared').resolveClusterTime,\n  SessionMixins = require('./shared').SessionMixins,\n  relayEvents = require('../utils').relayEvents;\n\nconst collationNotSupported = require('../utils').collationNotSupported;\nconst makeClientMetadata = require('../utils').makeClientMetadata;\n\n// Used for filtering out fields for loggin\nvar debugFields = [\n  'reconnect',\n  'reconnectTries',\n  'reconnectInterval',\n  'emitError',\n  'cursorFactory',\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'checkServerIdentity',\n  'socketTimeout',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'key',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'servername'\n];\n\n// Server instance id\nvar id = 0;\nvar serverAccounting = false;\nvar servers = {};\nvar BSON = retrieveBSON();\n\nfunction topologyId(server) {\n  return server.s.parent == null ? server.id : server.s.parent.id;\n}\n\n/**\n * Creates a new Server instance\n * @class\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {number} [options.monitoring=true] Enable the server state monitoring (calling ismaster at monitoringInterval)\n * @param {number} [options.monitoringInterval=5000] The interval of calling ismaster when monitoring is enabled.\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=120000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {string} [options.appname=null] Application name, passed in on ismaster call and logged in mongod server logs. Maximum size 128 bytes.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {Server} A cursor instance\n * @fires Server#connect\n * @fires Server#close\n * @fires Server#error\n * @fires Server#timeout\n * @fires Server#parseError\n * @fires Server#reconnect\n * @fires Server#reconnectFailed\n * @fires Server#serverHeartbeatStarted\n * @fires Server#serverHeartbeatSucceeded\n * @fires Server#serverHeartbeatFailed\n * @fires Server#topologyOpening\n * @fires Server#topologyClosed\n * @fires Server#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar Server = function(options) {\n  options = options || {};\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Server instance id\n  this.id = id++;\n\n  // Internal state\n  this.s = {\n    // Options\n    options: Object.assign({ metadata: makeClientMetadata(options) }, options),\n    // Logger\n    logger: Logger('Server', options),\n    // Factory overrides\n    Cursor: options.cursorFactory || CoreCursor,\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Pool\n    pool: null,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Monitor thread (keeps the connection alive)\n    monitoring: typeof options.monitoring === 'boolean' ? options.monitoring : true,\n    // Is the server in a topology\n    inTopology: !!options.parent,\n    // Monitoring timeout\n    monitoringInterval:\n      typeof options.monitoringInterval === 'number' ? options.monitoringInterval : 5000,\n    compression: { compressors: createCompressionInfo(options) },\n    // Optional parent topology\n    parent: options.parent\n  };\n\n  // If this is a single deployment we need to track the clusterTime here\n  if (!this.s.parent) {\n    this.s.clusterTime = null;\n  }\n\n  // Curent ismaster\n  this.ismaster = null;\n  // Current ping time\n  this.lastIsMasterMS = -1;\n  // The monitoringProcessId\n  this.monitoringProcessId = null;\n  // Initial connection\n  this.initialConnect = true;\n  // Default type\n  this._type = 'server';\n\n  // Max Stalleness values\n  // last time we updated the ismaster state\n  this.lastUpdateTime = 0;\n  // Last write time\n  this.lastWriteDate = 0;\n  // Stalleness\n  this.staleness = 0;\n};\n\ninherits(Server, EventEmitter);\nObject.assign(Server.prototype, SessionMixins);\n\nObject.defineProperty(Server.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return this._type;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(Server.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    if (!this.ismaster) return null;\n    return this.ismaster.logicalSessionTimeoutMinutes || null;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'clientMetadata', {\n  enumerable: true,\n  get: function() {\n    return this.s.options.metadata;\n  }\n});\n\n// In single server deployments we track the clusterTime directly on the topology, however\n// in Mongos and ReplSet deployments we instead need to delegate the clusterTime up to the\n// tracking objects so we can ensure we are gossiping the maximum time received from the\n// server.\nObject.defineProperty(Server.prototype, 'clusterTime', {\n  enumerable: true,\n  set: function(clusterTime) {\n    const settings = this.s.parent ? this.s.parent : this.s;\n    resolveClusterTime(settings, clusterTime);\n  },\n  get: function() {\n    const settings = this.s.parent ? this.s.parent : this.s;\n    return settings.clusterTime || null;\n  }\n});\n\nServer.enableServerAccounting = function() {\n  serverAccounting = true;\n  servers = {};\n};\n\nServer.disableServerAccounting = function() {\n  serverAccounting = false;\n};\n\nServer.servers = function() {\n  return servers;\n};\n\nObject.defineProperty(Server.prototype, 'name', {\n  enumerable: true,\n  get: function() {\n    return this.s.options.host + ':' + this.s.options.port;\n  }\n});\n\nfunction disconnectHandler(self, type, ns, cmd, options, callback) {\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if (\n    !self.s.pool.isConnected() &&\n    self.s.options.reconnect &&\n    self.s.disconnectHandler != null &&\n    !options.monitoring\n  ) {\n    self.s.disconnectHandler.add(type, ns, cmd, options, callback);\n    return true;\n  }\n\n  // If we have no connection error\n  if (!self.s.pool.isConnected()) {\n    callback(new MongoError(f('no connection available to server %s', self.name)));\n    return true;\n  }\n}\n\nfunction monitoringProcess(self) {\n  return function() {\n    // Pool was destroyed do not continue process\n    if (self.s.pool.isDestroyed()) return;\n    // Emit monitoring Process event\n    self.emit('monitoring', self);\n    // Perform ismaster call\n    // Get start time\n    var start = new Date().getTime();\n\n    // Execute the ismaster query\n    self.command(\n      'admin.$cmd',\n      { ismaster: true },\n      {\n        socketTimeout:\n          typeof self.s.options.connectionTimeout !== 'number'\n            ? 2000\n            : self.s.options.connectionTimeout,\n        monitoring: true\n      },\n      (err, result) => {\n        // Set initial lastIsMasterMS\n        self.lastIsMasterMS = new Date().getTime() - start;\n        if (self.s.pool.isDestroyed()) return;\n        // Update the ismaster view if we have a result\n        if (result) {\n          self.ismaster = result.result;\n        }\n        // Re-schedule the monitoring process\n        self.monitoringProcessId = setTimeout(monitoringProcess(self), self.s.monitoringInterval);\n      }\n    );\n  };\n}\n\nvar eventHandler = function(self, event) {\n  return function(err, conn) {\n    // Log information of received information if in info mode\n    if (self.s.logger.isInfo()) {\n      var object = err instanceof MongoError ? JSON.stringify(err) : {};\n      self.s.logger.info(\n        f('server %s fired event %s out with message %s', self.name, event, object)\n      );\n    }\n\n    // Handle connect event\n    if (event === 'connect') {\n      self.initialConnect = false;\n      self.ismaster = conn.ismaster;\n      self.lastIsMasterMS = conn.lastIsMasterMS;\n      if (conn.agreedCompressor) {\n        self.s.pool.options.agreedCompressor = conn.agreedCompressor;\n      }\n\n      if (conn.zlibCompressionLevel) {\n        self.s.pool.options.zlibCompressionLevel = conn.zlibCompressionLevel;\n      }\n\n      if (conn.ismaster.$clusterTime) {\n        const $clusterTime = conn.ismaster.$clusterTime;\n        self.clusterTime = $clusterTime;\n      }\n\n      // It's a proxy change the type so\n      // the wireprotocol will send $readPreference\n      if (self.ismaster.msg === 'isdbgrid') {\n        self._type = 'mongos';\n      }\n\n      // Have we defined self monitoring\n      if (self.s.monitoring) {\n        self.monitoringProcessId = setTimeout(monitoringProcess(self), self.s.monitoringInterval);\n      }\n\n      // Emit server description changed if something listening\n      sdam.emitServerDescriptionChanged(self, {\n        address: self.name,\n        arbiters: [],\n        hosts: [],\n        passives: [],\n        type: sdam.getTopologyType(self)\n      });\n\n      if (!self.s.inTopology) {\n        // Emit topology description changed if something listening\n        sdam.emitTopologyDescriptionChanged(self, {\n          topologyType: 'Single',\n          servers: [\n            {\n              address: self.name,\n              arbiters: [],\n              hosts: [],\n              passives: [],\n              type: sdam.getTopologyType(self)\n            }\n          ]\n        });\n      }\n\n      // Log the ismaster if available\n      if (self.s.logger.isInfo()) {\n        self.s.logger.info(\n          f('server %s connected with ismaster [%s]', self.name, JSON.stringify(self.ismaster))\n        );\n      }\n\n      // Emit connect\n      self.emit('connect', self);\n    } else if (\n      event === 'error' ||\n      event === 'parseError' ||\n      event === 'close' ||\n      event === 'timeout' ||\n      event === 'reconnect' ||\n      event === 'attemptReconnect' ||\n      event === 'reconnectFailed'\n    ) {\n      // Remove server instance from accounting\n      if (\n        serverAccounting &&\n        ['close', 'timeout', 'error', 'parseError', 'reconnectFailed'].indexOf(event) !== -1\n      ) {\n        // Emit toplogy opening event if not in topology\n        if (!self.s.inTopology) {\n          self.emit('topologyOpening', { topologyId: self.id });\n        }\n\n        delete servers[self.id];\n      }\n\n      if (event === 'close') {\n        // Closing emits a server description changed event going to unknown.\n        sdam.emitServerDescriptionChanged(self, {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: 'Unknown'\n        });\n      }\n\n      // Reconnect failed return error\n      if (event === 'reconnectFailed') {\n        self.emit('reconnectFailed', err);\n        // Emit error if any listeners\n        if (self.listeners('error').length > 0) {\n          self.emit('error', err);\n        }\n        // Terminate\n        return;\n      }\n\n      // On first connect fail\n      if (\n        ['disconnected', 'connecting'].indexOf(self.s.pool.state) !== -1 &&\n        self.initialConnect &&\n        ['close', 'timeout', 'error', 'parseError'].indexOf(event) !== -1\n      ) {\n        self.initialConnect = false;\n        return self.emit(\n          'error',\n          new MongoNetworkError(\n            f('failed to connect to server [%s] on first connect [%s]', self.name, err)\n          )\n        );\n      }\n\n      // Reconnect event, emit the server\n      if (event === 'reconnect') {\n        // Reconnecting emits a server description changed event going from unknown to the\n        // current server type.\n        sdam.emitServerDescriptionChanged(self, {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: sdam.getTopologyType(self)\n        });\n        return self.emit(event, self);\n      }\n\n      // Emit the event\n      self.emit(event, err);\n    }\n  };\n};\n\n/**\n * Initiate server connect\n */\nServer.prototype.connect = function(options) {\n  var self = this;\n  options = options || {};\n\n  // Set the connections\n  if (serverAccounting) servers[this.id] = this;\n\n  // Do not allow connect to be called on anything that's not disconnected\n  if (self.s.pool && !self.s.pool.isDisconnected() && !self.s.pool.isDestroyed()) {\n    throw new MongoError(f('server instance in invalid state %s', self.s.pool.state));\n  }\n\n  // Create a pool\n  self.s.pool = new Pool(this, Object.assign(self.s.options, options, { bson: this.s.bson }));\n\n  // Set up listeners\n  self.s.pool.on('close', eventHandler(self, 'close'));\n  self.s.pool.on('error', eventHandler(self, 'error'));\n  self.s.pool.on('timeout', eventHandler(self, 'timeout'));\n  self.s.pool.on('parseError', eventHandler(self, 'parseError'));\n  self.s.pool.on('connect', eventHandler(self, 'connect'));\n  self.s.pool.on('reconnect', eventHandler(self, 'reconnect'));\n  self.s.pool.on('reconnectFailed', eventHandler(self, 'reconnectFailed'));\n\n  // Set up listeners for command monitoring\n  relayEvents(self.s.pool, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n  // Emit toplogy opening event if not in topology\n  if (!self.s.inTopology) {\n    this.emit('topologyOpening', { topologyId: topologyId(self) });\n  }\n\n  // Emit opening server event\n  self.emit('serverOpening', { topologyId: topologyId(self), address: self.name });\n\n  self.s.pool.connect();\n};\n\n/**\n * Authenticate the topology.\n * @method\n * @param {MongoCredentials} credentials The credentials for authentication we are using\n * @param {authResultCallback} callback A callback function\n */\nServer.prototype.auth = function(credentials, callback) {\n  if (typeof callback === 'function') callback(null, null);\n};\n\n/**\n * Get the server description\n * @method\n * @return {object}\n */\nServer.prototype.getDescription = function() {\n  var ismaster = this.ismaster || {};\n  var description = {\n    type: sdam.getTopologyType(this),\n    address: this.name\n  };\n\n  // Add fields if available\n  if (ismaster.hosts) description.hosts = ismaster.hosts;\n  if (ismaster.arbiters) description.arbiters = ismaster.arbiters;\n  if (ismaster.passives) description.passives = ismaster.passives;\n  if (ismaster.setName) description.setName = ismaster.setName;\n  return description;\n};\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nServer.prototype.lastIsMaster = function() {\n  return this.ismaster;\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nServer.prototype.unref = function() {\n  this.s.pool.unref();\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nServer.prototype.isConnected = function() {\n  if (!this.s.pool) return false;\n  return this.s.pool.isConnected();\n};\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nServer.prototype.isDestroyed = function() {\n  if (!this.s.pool) return false;\n  return this.s.pool.isDestroyed();\n};\n\nfunction basicWriteValidations(self) {\n  if (!self.s.pool) return new MongoError('server instance is not connected');\n  if (self.s.pool.isDestroyed()) return new MongoError('server instance pool was destroyed');\n}\n\nfunction basicReadValidations(self, options) {\n  basicWriteValidations(self, options);\n\n  if (options.readPreference && !(options.readPreference instanceof ReadPreference)) {\n    throw new Error('readPreference must be an instance of ReadPreference');\n  }\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.checkKeys=false] Specify if the bson parser should validate keys.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {Boolean} [options.fullResult=false] Return the full envelope instead of just the result document.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.command = function(ns, cmd, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicReadValidations(self, options);\n  if (result) return callback(result);\n\n  // Clone the options\n  options = Object.assign({}, options, { wireProtocolCommand: false });\n\n  // Debug log\n  if (self.s.logger.isDebug())\n    self.s.logger.debug(\n      f(\n        'executing command [%s] against %s',\n        JSON.stringify({\n          ns: ns,\n          cmd: cmd,\n          options: debugOptions(debugFields, options)\n        }),\n        self.name\n      )\n    );\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'command', ns, cmd, options, callback)) return;\n\n  // error if collation not supported\n  if (collationNotSupported(this, cmd)) {\n    return callback(new MongoError(`server ${this.name} does not support collation`));\n  }\n\n  wireProtocol.command(self, ns, cmd, options, callback);\n};\n\n/**\n * Execute a query against the server\n *\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command document for the query\n * @param {object} options Optional settings\n * @param {function} callback\n */\nServer.prototype.query = function(ns, cmd, cursorState, options, callback) {\n  wireProtocol.query(this, ns, cmd, cursorState, options, callback);\n};\n\n/**\n * Execute a `getMore` against the server\n *\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cursorState State data associated with the cursor calling this method\n * @param {object} options Optional settings\n * @param {function} callback\n */\nServer.prototype.getMore = function(ns, cursorState, batchSize, options, callback) {\n  wireProtocol.getMore(this, ns, cursorState, batchSize, options, callback);\n};\n\n/**\n * Execute a `killCursors` command against the server\n *\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cursorState State data associated with the cursor calling this method\n * @param {function} callback\n */\nServer.prototype.killCursors = function(ns, cursorState, callback) {\n  wireProtocol.killCursors(this, ns, cursorState, callback);\n};\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.insert = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'insert', ns, ops, options, callback)) return;\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n\n  // Execute write\n  return wireProtocol.insert(self, ns, ops, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.update = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'update', ns, ops, options, callback)) return;\n\n  // error if collation not supported\n  if (collationNotSupported(this, options)) {\n    return callback(new MongoError(`server ${this.name} does not support collation`));\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return wireProtocol.update(self, ns, ops, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.remove = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'remove', ns, ops, options, callback)) return;\n\n  // error if collation not supported\n  if (collationNotSupported(this, options)) {\n    return callback(new MongoError(`server ${this.name} does not support collation`));\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return wireProtocol.remove(self, ns, ops, options, callback);\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nServer.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(topology, ns, cmd, options);\n};\n\n/**\n * Compare two server instances\n * @method\n * @param {Server} server Server to compare equality against\n * @return {boolean}\n */\nServer.prototype.equals = function(server) {\n  if (typeof server === 'string') return this.name.toLowerCase() === server.toLowerCase();\n  if (server.name) return this.name.toLowerCase() === server.name.toLowerCase();\n  return false;\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nServer.prototype.connections = function() {\n  return this.s.pool.allConnections();\n};\n\n/**\n * Selects a server\n * @method\n * @param {function} selector Unused\n * @param {ReadPreference} [options.readPreference] Unused\n * @param {ClientSession} [options.session] Unused\n * @return {Server}\n */\nServer.prototype.selectServer = function(selector, options, callback) {\n  if (typeof selector === 'function' && typeof callback === 'undefined')\n    (callback = selector), (selector = undefined), (options = {});\n  if (typeof options === 'function')\n    (callback = options), (options = selector), (selector = undefined);\n\n  callback(null, this);\n};\n\nvar listeners = ['close', 'error', 'timeout', 'parseError', 'connect'];\n\n/**\n * Destroy the server connection\n * @method\n * @param {boolean} [options.emitClose=false] Emit close event on destroy\n * @param {boolean} [options.emitDestroy=false] Emit destroy event on destroy\n * @param {boolean} [options.force=false] Force destroy the pool\n */\nServer.prototype.destroy = function(options, callback) {\n  if (this._destroyed) {\n    if (typeof callback === 'function') callback(null, null);\n    return;\n  }\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  var self = this;\n\n  // Set the connections\n  if (serverAccounting) delete servers[this.id];\n\n  // Destroy the monitoring process if any\n  if (this.monitoringProcessId) {\n    clearTimeout(this.monitoringProcessId);\n  }\n\n  // No pool, return\n  if (!self.s.pool || this._destroyed) {\n    this._destroyed = true;\n    if (typeof callback === 'function') callback(null, null);\n    return;\n  }\n\n  this._destroyed = true;\n\n  // Emit close event\n  if (options.emitClose) {\n    self.emit('close', self);\n  }\n\n  // Emit destroy event\n  if (options.emitDestroy) {\n    self.emit('destroy', self);\n  }\n\n  // Remove all listeners\n  listeners.forEach(function(event) {\n    self.s.pool.removeAllListeners(event);\n  });\n\n  // Emit opening server event\n  if (self.listeners('serverClosed').length > 0)\n    self.emit('serverClosed', { topologyId: topologyId(self), address: self.name });\n\n  // Emit toplogy opening event if not in topology\n  if (self.listeners('topologyClosed').length > 0 && !self.s.inTopology) {\n    self.emit('topologyClosed', { topologyId: topologyId(self) });\n  }\n\n  if (self.s.logger.isDebug()) {\n    self.s.logger.debug(f('destroy called on server %s', self.name));\n  }\n\n  // Destroy the pool\n  this.s.pool.destroy(options.force, callback);\n};\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Server#connect\n * @type {Server}\n */\n\n/**\n * A server reconnect event, used to verify that the server topology has reconnected\n *\n * @event Server#reconnect\n * @type {Server}\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event Server#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event Server#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event Server#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event Server#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event Server#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event Server#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * Server reconnect failed\n *\n * @event Server#reconnectFailed\n * @type {Error}\n */\n\n/**\n * Server connection pool closed\n *\n * @event Server#close\n * @type {object}\n */\n\n/**\n * Server connection pool caused an error\n *\n * @event Server#error\n * @type {Error}\n */\n\n/**\n * Server destroyed was called\n *\n * @event Server#destroy\n * @type {Server}\n */\n\nmodule.exports = Server;\n","'use strict';\nconst ReadPreference = require('./read_preference');\nconst TopologyType = require('../sdam/common').TopologyType;\nconst MongoError = require('../error').MongoError;\nconst isRetryableWriteError = require('../error').isRetryableWriteError;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MMAPv1_RETRY_WRITES_ERROR_CODE = 20;\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\nfunction createCompressionInfo(options) {\n  if (!options.compression || !options.compression.compressors) {\n    return [];\n  }\n\n  // Check that all supplied compressors are valid\n  options.compression.compressors.forEach(function(compressor) {\n    if (compressor !== 'snappy' && compressor !== 'zlib') {\n      throw new Error('compressors must be at least one of snappy or zlib');\n    }\n  });\n\n  return options.compression.compressors;\n}\n\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nvar getPreviousDescription = function(self) {\n  if (!self.s.serverDescription) {\n    self.s.serverDescription = {\n      address: self.name,\n      arbiters: [],\n      hosts: [],\n      passives: [],\n      type: 'Unknown'\n    };\n  }\n\n  return self.s.serverDescription;\n};\n\nvar emitServerDescriptionChanged = function(self, description) {\n  if (self.listeners('serverDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('serverDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar getPreviousTopologyDescription = function(self) {\n  if (!self.s.topologyDescription) {\n    self.s.topologyDescription = {\n      topologyType: 'Unknown',\n      servers: [\n        {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: 'Unknown'\n        }\n      ]\n    };\n  }\n\n  return self.s.topologyDescription;\n};\n\nvar emitTopologyDescriptionChanged = function(self, description) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('topologyDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousTopologyDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar changedIsMaster = function(self, currentIsmaster, ismaster) {\n  var currentType = getTopologyType(self, currentIsmaster);\n  var newType = getTopologyType(self, ismaster);\n  if (newType !== currentType) return true;\n  return false;\n};\n\nvar getTopologyType = function(self, ismaster) {\n  if (!ismaster) {\n    ismaster = self.ismaster;\n  }\n\n  if (!ismaster) return 'Unknown';\n  if (ismaster.ismaster && ismaster.msg === 'isdbgrid') return 'Mongos';\n  if (ismaster.ismaster && !ismaster.hosts) return 'Standalone';\n  if (ismaster.ismaster) return 'RSPrimary';\n  if (ismaster.secondary) return 'RSSecondary';\n  if (ismaster.arbiterOnly) return 'RSArbiter';\n  return 'Unknown';\n};\n\nvar inquireServerState = function(self) {\n  return function(callback) {\n    if (self.s.state === 'destroyed') return;\n    // Record response time\n    var start = new Date().getTime();\n\n    // emitSDAMEvent\n    emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: self.name });\n\n    // Attempt to execute ismaster command\n    self.command('admin.$cmd', { ismaster: true }, { monitoring: true }, function(err, r) {\n      if (!err) {\n        // Legacy event sender\n        self.emit('ismaster', r, self);\n\n        // Calculate latencyMS\n        var latencyMS = new Date().getTime() - start;\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: self.name\n        });\n\n        // Did the server change\n        if (changedIsMaster(self, self.s.ismaster, r.result)) {\n          // Emit server description changed if something listening\n          emitServerDescriptionChanged(self, {\n            address: self.name,\n            arbiters: [],\n            hosts: [],\n            passives: [],\n            type: !self.s.inTopology ? 'Standalone' : getTopologyType(self)\n          });\n        }\n\n        // Updat ismaster view\n        self.s.ismaster = r.result;\n\n        // Set server response time\n        self.s.isMasterLatencyMS = latencyMS;\n      } else {\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: self.name\n        });\n      }\n\n      // Peforming an ismaster monitoring callback operation\n      if (typeof callback === 'function') {\n        return callback(err, r);\n      }\n\n      // Perform another sweep\n      self.s.inquireServerStateTimeout = setTimeout(inquireServerState(self), self.s.haInterval);\n    });\n  };\n};\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for (var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n};\n\nfunction Interval(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setInterval(fn, time);\n    }\n\n    return this;\n  };\n\n  this.stop = function() {\n    clearInterval(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    return timer !== false;\n  };\n}\n\nfunction Timeout(fn, time) {\n  var timer = false;\n  var func = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = false;\n\n      fn();\n    }\n  };\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setTimeout(func, time);\n    }\n    return this;\n  };\n\n  this.stop = function() {\n    clearTimeout(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    return timer !== false;\n  };\n}\n\nfunction diff(previous, current) {\n  // Difference document\n  var diff = {\n    servers: []\n  };\n\n  // Previous entry\n  if (!previous) {\n    previous = { servers: [] };\n  }\n\n  // Check if we have any previous servers missing in the current ones\n  for (var i = 0; i < previous.servers.length; i++) {\n    var found = false;\n\n    for (var j = 0; j < current.servers.length; j++) {\n      if (current.servers[j].address.toLowerCase() === previous.servers[i].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      // Add to the diff\n      diff.servers.push({\n        address: previous.servers[i].address,\n        from: previous.servers[i].type,\n        to: 'Unknown'\n      });\n    }\n  }\n\n  // Check if there are any severs that don't exist\n  for (j = 0; j < current.servers.length; j++) {\n    found = false;\n\n    // Go over all the previous servers\n    for (i = 0; i < previous.servers.length; i++) {\n      if (previous.servers[i].address.toLowerCase() === current.servers[j].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    // Add the server to the diff\n    if (!found) {\n      diff.servers.push({\n        address: current.servers[j].address,\n        from: 'Unknown',\n        to: current.servers[j].type\n      });\n    }\n  }\n\n  // Got through all the servers\n  for (i = 0; i < previous.servers.length; i++) {\n    var prevServer = previous.servers[i];\n\n    // Go through all current servers\n    for (j = 0; j < current.servers.length; j++) {\n      var currServer = current.servers[j];\n\n      // Matching server\n      if (prevServer.address.toLowerCase() === currServer.address.toLowerCase()) {\n        // We had a change in state\n        if (prevServer.type !== currServer.type) {\n          diff.servers.push({\n            address: prevServer.address,\n            from: prevServer.type,\n            to: currServer.type\n          });\n        }\n      }\n    }\n  }\n\n  // Return difference\n  return diff;\n}\n\n/**\n * Shared function to determine clusterTime for a given topology\n *\n * @param {*} topology\n * @param {*} clusterTime\n */\nfunction resolveClusterTime(topology, $clusterTime) {\n  if (topology.clusterTime == null) {\n    topology.clusterTime = $clusterTime;\n  } else {\n    if ($clusterTime.clusterTime.greaterThan(topology.clusterTime.clusterTime)) {\n      topology.clusterTime = $clusterTime;\n    }\n  }\n}\n\n// NOTE: this is a temporary move until the topologies can be more formally refactored\n//       to share code.\nconst SessionMixins = {\n  endSessions: function(sessions, callback) {\n    if (!Array.isArray(sessions)) {\n      sessions = [sessions];\n    }\n\n    // TODO:\n    //   When connected to a sharded cluster the endSessions command\n    //   can be sent to any mongos. When connected to a replica set the\n    //   endSessions command MUST be sent to the primary if the primary\n    //   is available, otherwise it MUST be sent to any available secondary.\n    //   Is it enough to use: ReadPreference.primaryPreferred ?\n    this.command(\n      'admin.$cmd',\n      { endSessions: sessions },\n      { readPreference: ReadPreference.primaryPreferred },\n      () => {\n        // intentionally ignored, per spec\n        if (typeof callback === 'function') callback();\n      }\n    );\n  }\n};\n\nfunction topologyType(topology) {\n  if (topology.description) {\n    return topology.description.type;\n  }\n\n  if (topology.type === 'mongos') {\n    return TopologyType.Sharded;\n  } else if (topology.type === 'replset') {\n    return TopologyType.ReplicaSetWithPrimary;\n  }\n\n  return TopologyType.Single;\n}\n\nconst RETRYABLE_WIRE_VERSION = 6;\n\n/**\n * Determines whether the provided topology supports retryable writes\n *\n * @param {Mongos|Replset} topology\n */\nconst isRetryableWritesSupported = function(topology) {\n  const maxWireVersion = topology.lastIsMaster().maxWireVersion;\n  if (maxWireVersion < RETRYABLE_WIRE_VERSION) {\n    return false;\n  }\n\n  if (!topology.logicalSessionTimeoutMinutes) {\n    return false;\n  }\n\n  if (topologyType(topology) === TopologyType.Single) {\n    return false;\n  }\n\n  return true;\n};\n\nconst MMAPv1_RETRY_WRITES_ERROR_MESSAGE =\n  'This MongoDB deployment does not support retryable writes. Please add retryWrites=false to your connection string.';\n\nfunction getMMAPError(err) {\n  if (err.code !== MMAPv1_RETRY_WRITES_ERROR_CODE || !err.errmsg.includes('Transaction numbers')) {\n    return err;\n  }\n\n  // According to the retryable writes spec, we must replace the error message in this case.\n  // We need to replace err.message so the thrown message is correct and we need to replace err.errmsg to meet the spec requirement.\n  const newErr = new MongoError({\n    message: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n    errmsg: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n    originalError: err\n  });\n  return newErr;\n}\n\n// NOTE: only used for legacy topology types\nfunction legacyIsRetryableWriteError(err, topology) {\n  if (!(err instanceof MongoError)) {\n    return false;\n  }\n\n  // if pre-4.4 server, then add error label if its a retryable write error\n  if (\n    isRetryableWritesSupported(topology) &&\n    (err instanceof MongoNetworkError ||\n      (maxWireVersion(topology) < 9 && isRetryableWriteError(err)))\n  ) {\n    err.addErrorLabel('RetryableWriteError');\n  }\n\n  return err.hasErrorLabel('RetryableWriteError');\n}\n\nmodule.exports = {\n  SessionMixins,\n  resolveClusterTime,\n  inquireServerState,\n  getTopologyType,\n  emitServerDescriptionChanged,\n  emitTopologyDescriptionChanged,\n  cloneOptions,\n  createCompressionInfo,\n  clone,\n  diff,\n  Interval,\n  Timeout,\n  isRetryableWritesSupported,\n  getMMAPError,\n  topologyType,\n  legacyIsRetryableWriteError\n};\n","'use strict';\nconst MongoError = require('./error').MongoError;\nconst ReadPreference = require('./topologies/read_preference');\nconst ReadConcern = require('../read_concern');\nconst WriteConcern = require('../write_concern');\n\nlet TxnState;\nlet stateMachine;\n\n(() => {\n  const NO_TRANSACTION = 'NO_TRANSACTION';\n  const STARTING_TRANSACTION = 'STARTING_TRANSACTION';\n  const TRANSACTION_IN_PROGRESS = 'TRANSACTION_IN_PROGRESS';\n  const TRANSACTION_COMMITTED = 'TRANSACTION_COMMITTED';\n  const TRANSACTION_COMMITTED_EMPTY = 'TRANSACTION_COMMITTED_EMPTY';\n  const TRANSACTION_ABORTED = 'TRANSACTION_ABORTED';\n\n  TxnState = {\n    NO_TRANSACTION,\n    STARTING_TRANSACTION,\n    TRANSACTION_IN_PROGRESS,\n    TRANSACTION_COMMITTED,\n    TRANSACTION_COMMITTED_EMPTY,\n    TRANSACTION_ABORTED\n  };\n\n  stateMachine = {\n    [NO_TRANSACTION]: [NO_TRANSACTION, STARTING_TRANSACTION],\n    [STARTING_TRANSACTION]: [\n      TRANSACTION_IN_PROGRESS,\n      TRANSACTION_COMMITTED,\n      TRANSACTION_COMMITTED_EMPTY,\n      TRANSACTION_ABORTED\n    ],\n    [TRANSACTION_IN_PROGRESS]: [\n      TRANSACTION_IN_PROGRESS,\n      TRANSACTION_COMMITTED,\n      TRANSACTION_ABORTED\n    ],\n    [TRANSACTION_COMMITTED]: [\n      TRANSACTION_COMMITTED,\n      TRANSACTION_COMMITTED_EMPTY,\n      STARTING_TRANSACTION,\n      NO_TRANSACTION\n    ],\n    [TRANSACTION_ABORTED]: [STARTING_TRANSACTION, NO_TRANSACTION],\n    [TRANSACTION_COMMITTED_EMPTY]: [TRANSACTION_COMMITTED_EMPTY, NO_TRANSACTION]\n  };\n})();\n\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @typedef {Object} ReadConcern\n * @property {'local'|'available'|'majority'|'linearizable'|'snapshot'} level The readConcern Level\n * @see https://docs.mongodb.com/manual/reference/read-concern/\n */\n\n/**\n * A MongoDB WriteConcern, which describes the level of acknowledgement\n * requested from MongoDB for write operations.\n * @typedef {Object} WriteConcern\n * @property {number|'majority'|string} [w=1] requests acknowledgement that the write operation has\n * propagated to a specified number of mongod hosts\n * @property {boolean} [j=false] requests acknowledgement from MongoDB that the write operation has\n * been written to the journal\n * @property {number} [wtimeout] a time limit, in milliseconds, for the write concern\n * @see https://docs.mongodb.com/manual/reference/write-concern/\n */\n\n/**\n * Configuration options for a transaction.\n * @typedef {Object} TransactionOptions\n * @property {ReadConcern} [readConcern] A default read concern for commands in this transaction\n * @property {WriteConcern} [writeConcern] A default writeConcern for commands in this transaction\n * @property {ReadPreference} [readPreference] A default read preference for commands in this transaction\n */\n\n/**\n * A class maintaining state related to a server transaction. Internal Only\n * @ignore\n */\nclass Transaction {\n  /**\n   * Create a transaction\n   *\n   * @ignore\n   * @param {TransactionOptions} [options] Optional settings\n   */\n  constructor(options) {\n    options = options || {};\n\n    this.state = TxnState.NO_TRANSACTION;\n    this.options = {};\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern) {\n      if (writeConcern.w <= 0) {\n        throw new MongoError('Transactions do not support unacknowledged write concern');\n      }\n\n      this.options.writeConcern = writeConcern;\n    }\n\n    if (options.readConcern) {\n      this.options.readConcern = ReadConcern.fromOptions(options);\n    }\n\n    if (options.readPreference) {\n      this.options.readPreference = ReadPreference.fromOptions(options);\n    }\n\n    if (options.maxCommitTimeMS) {\n      this.options.maxTimeMS = options.maxCommitTimeMS;\n    }\n\n    // TODO: This isn't technically necessary\n    this._pinnedServer = undefined;\n    this._recoveryToken = undefined;\n  }\n\n  get server() {\n    return this._pinnedServer;\n  }\n\n  get recoveryToken() {\n    return this._recoveryToken;\n  }\n\n  get isPinned() {\n    return !!this.server;\n  }\n\n  /**\n   * @ignore\n   * @return Whether this session is presently in a transaction\n   */\n  get isActive() {\n    return (\n      [TxnState.STARTING_TRANSACTION, TxnState.TRANSACTION_IN_PROGRESS].indexOf(this.state) !== -1\n    );\n  }\n\n  /**\n   * Transition the transaction in the state machine\n   * @ignore\n   * @param {TxnState} state The new state to transition to\n   */\n  transition(nextState) {\n    const nextStates = stateMachine[this.state];\n    if (nextStates && nextStates.indexOf(nextState) !== -1) {\n      this.state = nextState;\n      if (this.state === TxnState.NO_TRANSACTION || this.state === TxnState.STARTING_TRANSACTION) {\n        this.unpinServer();\n      }\n      return;\n    }\n\n    throw new MongoError(\n      `Attempted illegal state transition from [${this.state}] to [${nextState}]`\n    );\n  }\n\n  pinServer(server) {\n    if (this.isActive) {\n      this._pinnedServer = server;\n    }\n  }\n\n  unpinServer() {\n    this._pinnedServer = undefined;\n  }\n}\n\nfunction isTransactionCommand(command) {\n  return !!(command.commitTransaction || command.abortTransaction);\n}\n\nmodule.exports = { TxnState, Transaction, isTransactionCommand };\n","'use strict';\nconst URL = require('url');\nconst qs = require('querystring');\nconst dns = require('dns');\nconst MongoParseError = require('./error').MongoParseError;\nconst ReadPreference = require('./topologies/read_preference');\n\n/**\n * The following regular expression validates a connection string and breaks the\n * provide string into the following capture groups: [protocol, username, password, hosts]\n */\nconst HOSTS_RX = /(mongodb(?:\\+srv|)):\\/\\/(?: (?:[^:]*) (?: : ([^@]*) )? @ )?([^/?]*)(?:\\/|)(.*)/;\n\n// Options that reference file paths should not be parsed\nconst FILE_PATH_OPTIONS = new Set(\n  ['sslCA', 'sslCert', 'sslKey', 'tlsCAFile', 'tlsCertificateKeyFile'].map(key => key.toLowerCase())\n);\n\n/**\n * Determines whether a provided address matches the provided parent domain in order\n * to avoid certain attack vectors.\n *\n * @param {String} srvAddress The address to check against a domain\n * @param {String} parentDomain The domain to check the provided address against\n * @return {Boolean} Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(srvAddress, parentDomain) {\n  const regex = /^.*?\\./;\n  const srv = `.${srvAddress.replace(regex, '')}`;\n  const parent = `.${parentDomain.replace(regex, '')}`;\n  return srv.endsWith(parent);\n}\n\n/**\n * Lookup a `mongodb+srv` connection string, combine the parts and reparse it as a normal\n * connection string.\n *\n * @param {string} uri The connection string to parse\n * @param {object} options Optional user provided connection string options\n * @param {function} callback\n */\nfunction parseSrvConnectionString(uri, options, callback) {\n  const result = URL.parse(uri, true);\n\n  if (options.directConnection || options.directconnection) {\n    return callback(new MongoParseError('directConnection not supported with SRV URI'));\n  }\n\n  if (result.hostname.split('.').length < 3) {\n    return callback(new MongoParseError('URI does not have hostname, domain name and tld'));\n  }\n\n  result.domainLength = result.hostname.split('.').length;\n  if (result.pathname && result.pathname.match(',')) {\n    return callback(new MongoParseError('Invalid URI, cannot contain multiple hostnames'));\n  }\n\n  if (result.port) {\n    return callback(new MongoParseError(`Ports not accepted with '${PROTOCOL_MONGODB_SRV}' URIs`));\n  }\n\n  // Resolve the SRV record and use the result as the list of hosts to connect to.\n  const lookupAddress = result.host;\n  dns.resolveSrv(`_mongodb._tcp.${lookupAddress}`, (err, addresses) => {\n    if (err) return callback(err);\n\n    if (addresses.length === 0) {\n      return callback(new MongoParseError('No addresses found at host'));\n    }\n\n    for (let i = 0; i < addresses.length; i++) {\n      if (!matchesParentDomain(addresses[i].name, result.hostname, result.domainLength)) {\n        return callback(\n          new MongoParseError('Server record does not share hostname with parent URI')\n        );\n      }\n    }\n\n    // Convert the original URL to a non-SRV URL.\n    result.protocol = 'mongodb';\n    result.host = addresses.map(address => `${address.name}:${address.port}`).join(',');\n\n    // Default to SSL true if it's not specified.\n    if (\n      !('ssl' in options) &&\n      (!result.search || !('ssl' in result.query) || result.query.ssl === null)\n    ) {\n      result.query.ssl = true;\n    }\n\n    // Resolve TXT record and add options from there if they exist.\n    dns.resolveTxt(lookupAddress, (err, record) => {\n      if (err) {\n        if (err.code !== 'ENODATA' && err.code !== 'ENOTFOUND') {\n          return callback(err);\n        }\n        record = null;\n      }\n\n      if (record) {\n        if (record.length > 1) {\n          return callback(new MongoParseError('Multiple text records not allowed'));\n        }\n\n        record = qs.parse(record[0].join(''));\n        if (Object.keys(record).some(key => key !== 'authSource' && key !== 'replicaSet')) {\n          return callback(\n            new MongoParseError('Text record must only set `authSource` or `replicaSet`')\n          );\n        }\n\n        result.query = Object.assign({}, record, result.query);\n      }\n\n      // Set completed options back into the URL object.\n      result.search = qs.stringify(result.query);\n\n      const finalString = URL.format(result);\n      parseConnectionString(finalString, options, (err, ret) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        callback(null, Object.assign({}, ret, { srvHost: lookupAddress }));\n      });\n    });\n  });\n}\n\n/**\n * Parses a query string item according to the connection string spec\n *\n * @param {string} key The key for the parsed value\n * @param {Array|String} value The value to parse\n * @return {Array|Object|String} The parsed value\n */\nfunction parseQueryStringItemValue(key, value) {\n  if (Array.isArray(value)) {\n    // deduplicate and simplify arrays\n    value = value.filter((v, idx) => value.indexOf(v) === idx);\n    if (value.length === 1) value = value[0];\n  } else if (value.indexOf(':') > 0) {\n    value = value.split(',').reduce((result, pair) => {\n      const parts = pair.split(':');\n      result[parts[0]] = parseQueryStringItemValue(key, parts[1]);\n      return result;\n    }, {});\n  } else if (value.indexOf(',') > 0) {\n    value = value.split(',').map(v => {\n      return parseQueryStringItemValue(key, v);\n    });\n  } else if (value.toLowerCase() === 'true' || value.toLowerCase() === 'false') {\n    value = value.toLowerCase() === 'true';\n  } else if (!Number.isNaN(value) && !STRING_OPTIONS.has(key)) {\n    const numericValue = parseFloat(value);\n    if (!Number.isNaN(numericValue)) {\n      value = parseFloat(value);\n    }\n  }\n\n  return value;\n}\n\n// Options that are known boolean types\nconst BOOLEAN_OPTIONS = new Set([\n  'slaveok',\n  'slave_ok',\n  'sslvalidate',\n  'fsync',\n  'safe',\n  'retrywrites',\n  'j'\n]);\n\n// Known string options, only used to bypass Number coercion in `parseQueryStringItemValue`\nconst STRING_OPTIONS = new Set(['authsource', 'replicaset']);\n\n// Supported text representations of auth mechanisms\n// NOTE: this list exists in native already, if it is merged here we should deduplicate\nconst AUTH_MECHANISMS = new Set([\n  'GSSAPI',\n  'MONGODB-AWS',\n  'MONGODB-X509',\n  'MONGODB-CR',\n  'DEFAULT',\n  'SCRAM-SHA-1',\n  'SCRAM-SHA-256',\n  'PLAIN'\n]);\n\n// Lookup table used to translate normalized (lower-cased) forms of connection string\n// options to their expected camelCase version\nconst CASE_TRANSLATION = {\n  replicaset: 'replicaSet',\n  connecttimeoutms: 'connectTimeoutMS',\n  sockettimeoutms: 'socketTimeoutMS',\n  maxpoolsize: 'maxPoolSize',\n  minpoolsize: 'minPoolSize',\n  maxidletimems: 'maxIdleTimeMS',\n  waitqueuemultiple: 'waitQueueMultiple',\n  waitqueuetimeoutms: 'waitQueueTimeoutMS',\n  wtimeoutms: 'wtimeoutMS',\n  readconcern: 'readConcern',\n  readconcernlevel: 'readConcernLevel',\n  readpreference: 'readPreference',\n  maxstalenessseconds: 'maxStalenessSeconds',\n  readpreferencetags: 'readPreferenceTags',\n  authsource: 'authSource',\n  authmechanism: 'authMechanism',\n  authmechanismproperties: 'authMechanismProperties',\n  gssapiservicename: 'gssapiServiceName',\n  localthresholdms: 'localThresholdMS',\n  serverselectiontimeoutms: 'serverSelectionTimeoutMS',\n  serverselectiontryonce: 'serverSelectionTryOnce',\n  heartbeatfrequencyms: 'heartbeatFrequencyMS',\n  retrywrites: 'retryWrites',\n  uuidrepresentation: 'uuidRepresentation',\n  zlibcompressionlevel: 'zlibCompressionLevel',\n  tlsallowinvalidcertificates: 'tlsAllowInvalidCertificates',\n  tlsallowinvalidhostnames: 'tlsAllowInvalidHostnames',\n  tlsinsecure: 'tlsInsecure',\n  tlscafile: 'tlsCAFile',\n  tlscertificatekeyfile: 'tlsCertificateKeyFile',\n  tlscertificatekeyfilepassword: 'tlsCertificateKeyFilePassword',\n  wtimeout: 'wTimeoutMS',\n  j: 'journal',\n  directconnection: 'directConnection'\n};\n\n/**\n * Sets the value for `key`, allowing for any required translation\n *\n * @param {object} obj The object to set the key on\n * @param {string} key The key to set the value for\n * @param {*} value The value to set\n * @param {object} options The options used for option parsing\n */\nfunction applyConnectionStringOption(obj, key, value, options) {\n  // simple key translation\n  if (key === 'journal') {\n    key = 'j';\n  } else if (key === 'wtimeoutms') {\n    key = 'wtimeout';\n  }\n\n  // more complicated translation\n  if (BOOLEAN_OPTIONS.has(key)) {\n    value = value === 'true' || value === true;\n  } else if (key === 'appname') {\n    value = decodeURIComponent(value);\n  } else if (key === 'readconcernlevel') {\n    obj['readConcernLevel'] = value;\n    key = 'readconcern';\n    value = { level: value };\n  }\n\n  // simple validation\n  if (key === 'compressors') {\n    value = Array.isArray(value) ? value : [value];\n\n    if (!value.every(c => c === 'snappy' || c === 'zlib')) {\n      throw new MongoParseError(\n        'Value for `compressors` must be at least one of: `snappy`, `zlib`'\n      );\n    }\n  }\n\n  if (key === 'authmechanism' && !AUTH_MECHANISMS.has(value)) {\n    throw new MongoParseError(\n      `Value for authMechanism must be one of: ${Array.from(AUTH_MECHANISMS).join(\n        ', '\n      )}, found: ${value}`\n    );\n  }\n\n  if (key === 'readpreference' && !ReadPreference.isValid(value)) {\n    throw new MongoParseError(\n      'Value for `readPreference` must be one of: `primary`, `primaryPreferred`, `secondary`, `secondaryPreferred`, `nearest`'\n    );\n  }\n\n  if (key === 'zlibcompressionlevel' && (value < -1 || value > 9)) {\n    throw new MongoParseError('zlibCompressionLevel must be an integer between -1 and 9');\n  }\n\n  // special cases\n  if (key === 'compressors' || key === 'zlibcompressionlevel') {\n    obj.compression = obj.compression || {};\n    obj = obj.compression;\n  }\n\n  if (key === 'authmechanismproperties') {\n    if (typeof value.SERVICE_NAME === 'string') obj.gssapiServiceName = value.SERVICE_NAME;\n    if (typeof value.SERVICE_REALM === 'string') obj.gssapiServiceRealm = value.SERVICE_REALM;\n    if (typeof value.CANONICALIZE_HOST_NAME !== 'undefined') {\n      obj.gssapiCanonicalizeHostName = value.CANONICALIZE_HOST_NAME;\n    }\n  }\n\n  if (key === 'readpreferencetags') {\n    value = Array.isArray(value) ? splitArrayOfMultipleReadPreferenceTags(value) : [value];\n  }\n\n  // set the actual value\n  if (options.caseTranslate && CASE_TRANSLATION[key]) {\n    obj[CASE_TRANSLATION[key]] = value;\n    return;\n  }\n\n  obj[key] = value;\n}\n\nconst USERNAME_REQUIRED_MECHANISMS = new Set([\n  'GSSAPI',\n  'MONGODB-CR',\n  'PLAIN',\n  'SCRAM-SHA-1',\n  'SCRAM-SHA-256'\n]);\n\nfunction splitArrayOfMultipleReadPreferenceTags(value) {\n  const parsedTags = [];\n\n  for (let i = 0; i < value.length; i++) {\n    parsedTags[i] = {};\n    value[i].split(',').forEach(individualTag => {\n      const splitTag = individualTag.split(':');\n      parsedTags[i][splitTag[0]] = splitTag[1];\n    });\n  }\n\n  return parsedTags;\n}\n\n/**\n * Modifies the parsed connection string object taking into account expectations we\n * have for authentication-related options.\n *\n * @param {object} parsed The parsed connection string result\n * @return The parsed connection string result possibly modified for auth expectations\n */\nfunction applyAuthExpectations(parsed) {\n  if (parsed.options == null) {\n    return;\n  }\n\n  const options = parsed.options;\n  const authSource = options.authsource || options.authSource;\n  if (authSource != null) {\n    parsed.auth = Object.assign({}, parsed.auth, { db: authSource });\n  }\n\n  const authMechanism = options.authmechanism || options.authMechanism;\n  if (authMechanism != null) {\n    if (\n      USERNAME_REQUIRED_MECHANISMS.has(authMechanism) &&\n      (!parsed.auth || parsed.auth.username == null)\n    ) {\n      throw new MongoParseError(`Username required for mechanism \\`${authMechanism}\\``);\n    }\n\n    if (authMechanism === 'GSSAPI') {\n      if (authSource != null && authSource !== '$external') {\n        throw new MongoParseError(\n          `Invalid source \\`${authSource}\\` for mechanism \\`${authMechanism}\\` specified.`\n        );\n      }\n\n      parsed.auth = Object.assign({}, parsed.auth, { db: '$external' });\n    }\n\n    if (authMechanism === 'MONGODB-AWS') {\n      if (authSource != null && authSource !== '$external') {\n        throw new MongoParseError(\n          `Invalid source \\`${authSource}\\` for mechanism \\`${authMechanism}\\` specified.`\n        );\n      }\n\n      parsed.auth = Object.assign({}, parsed.auth, { db: '$external' });\n    }\n\n    if (authMechanism === 'MONGODB-X509') {\n      if (parsed.auth && parsed.auth.password != null) {\n        throw new MongoParseError(`Password not allowed for mechanism \\`${authMechanism}\\``);\n      }\n\n      if (authSource != null && authSource !== '$external') {\n        throw new MongoParseError(\n          `Invalid source \\`${authSource}\\` for mechanism \\`${authMechanism}\\` specified.`\n        );\n      }\n\n      parsed.auth = Object.assign({}, parsed.auth, { db: '$external' });\n    }\n\n    if (authMechanism === 'PLAIN') {\n      if (parsed.auth && parsed.auth.db == null) {\n        parsed.auth = Object.assign({}, parsed.auth, { db: '$external' });\n      }\n    }\n  }\n\n  // default to `admin` if nothing else was resolved\n  if (parsed.auth && parsed.auth.db == null) {\n    parsed.auth = Object.assign({}, parsed.auth, { db: 'admin' });\n  }\n\n  return parsed;\n}\n\n/**\n * Parses a query string according the connection string spec.\n *\n * @param {String} query The query string to parse\n * @param {object} [options] The options used for options parsing\n * @return {Object|Error} The parsed query string as an object, or an error if one was encountered\n */\nfunction parseQueryString(query, options) {\n  const result = {};\n  let parsedQueryString = qs.parse(query);\n\n  checkTLSOptions(parsedQueryString);\n\n  for (const key in parsedQueryString) {\n    const value = parsedQueryString[key];\n    if (value === '' || value == null) {\n      throw new MongoParseError('Incomplete key value pair for option');\n    }\n\n    const normalizedKey = key.toLowerCase();\n    const parsedValue = FILE_PATH_OPTIONS.has(normalizedKey)\n      ? value\n      : parseQueryStringItemValue(normalizedKey, value);\n    applyConnectionStringOption(result, normalizedKey, parsedValue, options);\n  }\n\n  // special cases for known deprecated options\n  if (result.wtimeout && result.wtimeoutms) {\n    delete result.wtimeout;\n    console.warn('Unsupported option `wtimeout` specified');\n  }\n\n  return Object.keys(result).length ? result : null;\n}\n\n/// Adds support for modern `tls` variants of out `ssl` options\nfunction translateTLSOptions(queryString) {\n  if (queryString.tls) {\n    queryString.ssl = queryString.tls;\n  }\n\n  if (queryString.tlsInsecure) {\n    queryString.checkServerIdentity = false;\n    queryString.sslValidate = false;\n  } else {\n    Object.assign(queryString, {\n      checkServerIdentity: queryString.tlsAllowInvalidHostnames ? false : true,\n      sslValidate: queryString.tlsAllowInvalidCertificates ? false : true\n    });\n  }\n\n  if (queryString.tlsCAFile) {\n    queryString.ssl = true;\n    queryString.sslCA = queryString.tlsCAFile;\n  }\n\n  if (queryString.tlsCertificateKeyFile) {\n    queryString.ssl = true;\n    if (queryString.tlsCertificateFile) {\n      queryString.sslCert = queryString.tlsCertificateFile;\n      queryString.sslKey = queryString.tlsCertificateKeyFile;\n    } else {\n      queryString.sslKey = queryString.tlsCertificateKeyFile;\n      queryString.sslCert = queryString.tlsCertificateKeyFile;\n    }\n  }\n\n  if (queryString.tlsCertificateKeyFilePassword) {\n    queryString.ssl = true;\n    queryString.sslPass = queryString.tlsCertificateKeyFilePassword;\n  }\n\n  return queryString;\n}\n\n/**\n * Checks a query string for invalid tls options according to the URI options spec.\n *\n * @param {string} queryString The query string to check\n * @throws {MongoParseError}\n */\nfunction checkTLSOptions(queryString) {\n  const queryStringKeys = Object.keys(queryString);\n  if (\n    queryStringKeys.indexOf('tlsInsecure') !== -1 &&\n    (queryStringKeys.indexOf('tlsAllowInvalidCertificates') !== -1 ||\n      queryStringKeys.indexOf('tlsAllowInvalidHostnames') !== -1)\n  ) {\n    throw new MongoParseError(\n      'The `tlsInsecure` option cannot be used with `tlsAllowInvalidCertificates` or `tlsAllowInvalidHostnames`.'\n    );\n  }\n\n  const tlsValue = assertTlsOptionsAreEqual('tls', queryString, queryStringKeys);\n  const sslValue = assertTlsOptionsAreEqual('ssl', queryString, queryStringKeys);\n\n  if (tlsValue != null && sslValue != null) {\n    if (tlsValue !== sslValue) {\n      throw new MongoParseError('All values of `tls` and `ssl` must be the same.');\n    }\n  }\n}\n\n/**\n * Checks a query string to ensure all tls/ssl options are the same.\n *\n * @param {string} key The key (tls or ssl) to check\n * @param {string} queryString The query string to check\n * @throws {MongoParseError}\n * @return The value of the tls/ssl option\n */\nfunction assertTlsOptionsAreEqual(optionName, queryString, queryStringKeys) {\n  const queryStringHasTLSOption = queryStringKeys.indexOf(optionName) !== -1;\n\n  let optionValue;\n  if (Array.isArray(queryString[optionName])) {\n    optionValue = queryString[optionName][0];\n  } else {\n    optionValue = queryString[optionName];\n  }\n\n  if (queryStringHasTLSOption) {\n    if (Array.isArray(queryString[optionName])) {\n      const firstValue = queryString[optionName][0];\n      queryString[optionName].forEach(tlsValue => {\n        if (tlsValue !== firstValue) {\n          throw new MongoParseError(`All values of ${optionName} must be the same.`);\n        }\n      });\n    }\n  }\n\n  return optionValue;\n}\n\nconst PROTOCOL_MONGODB = 'mongodb';\nconst PROTOCOL_MONGODB_SRV = 'mongodb+srv';\nconst SUPPORTED_PROTOCOLS = [PROTOCOL_MONGODB, PROTOCOL_MONGODB_SRV];\n\n/**\n * Parses a MongoDB connection string\n *\n * @param {*} uri the MongoDB connection string to parse\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.caseTranslate] Whether the parser should translate options back into camelCase after normalization\n * @param {parseCallback} callback\n */\nfunction parseConnectionString(uri, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, { caseTranslate: true }, options);\n\n  // Check for bad uris before we parse\n  try {\n    URL.parse(uri);\n  } catch (e) {\n    return callback(new MongoParseError('URI malformed, cannot be parsed'));\n  }\n\n  const cap = uri.match(HOSTS_RX);\n  if (!cap) {\n    return callback(new MongoParseError('Invalid connection string'));\n  }\n\n  const protocol = cap[1];\n  if (SUPPORTED_PROTOCOLS.indexOf(protocol) === -1) {\n    return callback(new MongoParseError('Invalid protocol provided'));\n  }\n\n  const dbAndQuery = cap[4].split('?');\n  const db = dbAndQuery.length > 0 ? dbAndQuery[0] : null;\n  const query = dbAndQuery.length > 1 ? dbAndQuery[1] : null;\n\n  let parsedOptions;\n  try {\n    parsedOptions = parseQueryString(query, options);\n  } catch (parseError) {\n    return callback(parseError);\n  }\n\n  parsedOptions = Object.assign({}, parsedOptions, options);\n\n  if (protocol === PROTOCOL_MONGODB_SRV) {\n    return parseSrvConnectionString(uri, parsedOptions, callback);\n  }\n\n  const auth = { username: null, password: null, db: db && db !== '' ? qs.unescape(db) : null };\n  if (parsedOptions.auth) {\n    // maintain support for legacy options passed into `MongoClient`\n    if (parsedOptions.auth.username) auth.username = parsedOptions.auth.username;\n    if (parsedOptions.auth.user) auth.username = parsedOptions.auth.user;\n    if (parsedOptions.auth.password) auth.password = parsedOptions.auth.password;\n  } else {\n    if (parsedOptions.username) auth.username = parsedOptions.username;\n    if (parsedOptions.user) auth.username = parsedOptions.user;\n    if (parsedOptions.password) auth.password = parsedOptions.password;\n  }\n\n  if (cap[4].split('?')[0].indexOf('@') !== -1) {\n    return callback(new MongoParseError('Unescaped slash in userinfo section'));\n  }\n\n  const authorityParts = cap[3].split('@');\n  if (authorityParts.length > 2) {\n    return callback(new MongoParseError('Unescaped at-sign in authority section'));\n  }\n\n  if (authorityParts[0] == null || authorityParts[0] === '') {\n    return callback(new MongoParseError('No username provided in authority section'));\n  }\n\n  if (authorityParts.length > 1) {\n    const authParts = authorityParts.shift().split(':');\n    if (authParts.length > 2) {\n      return callback(new MongoParseError('Unescaped colon in authority section'));\n    }\n\n    if (authParts[0] === '') {\n      return callback(new MongoParseError('Invalid empty username provided'));\n    }\n\n    if (!auth.username) auth.username = qs.unescape(authParts[0]);\n    if (!auth.password) auth.password = authParts[1] ? qs.unescape(authParts[1]) : null;\n  }\n\n  let hostParsingError = null;\n  const hosts = authorityParts\n    .shift()\n    .split(',')\n    .map(host => {\n      let parsedHost = URL.parse(`mongodb://${host}`);\n      if (parsedHost.path === '/:') {\n        hostParsingError = new MongoParseError('Double colon in host identifier');\n        return null;\n      }\n\n      // heuristically determine if we're working with a domain socket\n      if (host.match(/\\.sock/)) {\n        parsedHost.hostname = qs.unescape(host);\n        parsedHost.port = null;\n      }\n\n      if (Number.isNaN(parsedHost.port)) {\n        hostParsingError = new MongoParseError('Invalid port (non-numeric string)');\n        return;\n      }\n\n      const result = {\n        host: parsedHost.hostname,\n        port: parsedHost.port ? parseInt(parsedHost.port) : 27017\n      };\n\n      if (result.port === 0) {\n        hostParsingError = new MongoParseError('Invalid port (zero) with hostname');\n        return;\n      }\n\n      if (result.port > 65535) {\n        hostParsingError = new MongoParseError('Invalid port (larger than 65535) with hostname');\n        return;\n      }\n\n      if (result.port < 0) {\n        hostParsingError = new MongoParseError('Invalid port (negative number)');\n        return;\n      }\n\n      return result;\n    })\n    .filter(host => !!host);\n\n  if (hostParsingError) {\n    return callback(hostParsingError);\n  }\n\n  if (hosts.length === 0 || hosts[0].host === '' || hosts[0].host === null) {\n    return callback(new MongoParseError('No hostname or hostnames provided in connection string'));\n  }\n\n  const directConnection = !!parsedOptions.directConnection;\n  if (directConnection && hosts.length !== 1) {\n    // If the option is set to true, the driver MUST validate that there is exactly one host given\n    // in the host list in the URI, and fail client creation otherwise.\n    return callback(new MongoParseError('directConnection option requires exactly one host'));\n  }\n\n  // NOTE: this behavior will go away in v4.0, we will always auto discover there\n  if (\n    parsedOptions.directConnection == null &&\n    hosts.length === 1 &&\n    parsedOptions.replicaSet == null\n  ) {\n    parsedOptions.directConnection = true;\n  }\n\n  const result = {\n    hosts: hosts,\n    auth: auth.db || auth.username ? auth : null,\n    options: Object.keys(parsedOptions).length ? parsedOptions : null\n  };\n\n  if (result.auth && result.auth.db) {\n    result.defaultDatabase = result.auth.db;\n  } else {\n    result.defaultDatabase = 'test';\n  }\n\n  // support modern `tls` variants to SSL options\n  result.options = translateTLSOptions(result.options);\n\n  try {\n    applyAuthExpectations(result);\n  } catch (authError) {\n    return callback(authError);\n  }\n\n  callback(null, result);\n}\n\nmodule.exports = parseConnectionString;\n","'use strict';\nconst os = require('os');\nconst crypto = require('crypto');\nconst requireOptional = require('require_optional');\n\n/**\n * Generate a UUIDv4\n */\nconst uuidV4 = () => {\n  const result = crypto.randomBytes(16);\n  result[6] = (result[6] & 0x0f) | 0x40;\n  result[8] = (result[8] & 0x3f) | 0x80;\n  return result;\n};\n\n/**\n * Relays events for a given listener and emitter\n *\n * @param {EventEmitter} listener the EventEmitter to listen to the events from\n * @param {EventEmitter} emitter the EventEmitter to relay the events to\n */\nfunction relayEvents(listener, emitter, events) {\n  events.forEach(eventName => listener.on(eventName, event => emitter.emit(eventName, event)));\n}\n\nfunction retrieveKerberos() {\n  let kerberos;\n\n  try {\n    kerberos = requireOptional('kerberos');\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      throw new Error('The `kerberos` module was not found. Please install it and try again.');\n    }\n\n    throw err;\n  }\n\n  return kerberos;\n}\n\n// Throw an error if an attempt to use EJSON is made when it is not installed\nconst noEJSONError = function() {\n  throw new Error('The `mongodb-extjson` module was not found. Please install it and try again.');\n};\n\n// Facilitate loading EJSON optionally\nfunction retrieveEJSON() {\n  let EJSON = null;\n  try {\n    EJSON = requireOptional('mongodb-extjson');\n  } catch (error) {} // eslint-disable-line\n  if (!EJSON) {\n    EJSON = {\n      parse: noEJSONError,\n      deserialize: noEJSONError,\n      serialize: noEJSONError,\n      stringify: noEJSONError,\n      setBSONModule: noEJSONError,\n      BSON: noEJSONError\n    };\n  }\n\n  return EJSON;\n}\n\n/**\n * A helper function for determining `maxWireVersion` between legacy and new topology\n * instances\n *\n * @private\n * @param {(Topology|Server)} topologyOrServer\n */\nfunction maxWireVersion(topologyOrServer) {\n  if (topologyOrServer) {\n    if (topologyOrServer.ismaster) {\n      return topologyOrServer.ismaster.maxWireVersion;\n    }\n\n    if (typeof topologyOrServer.lastIsMaster === 'function') {\n      const lastIsMaster = topologyOrServer.lastIsMaster();\n      if (lastIsMaster) {\n        return lastIsMaster.maxWireVersion;\n      }\n    }\n\n    if (topologyOrServer.description) {\n      return topologyOrServer.description.maxWireVersion;\n    }\n  }\n\n  return 0;\n}\n\n/*\n * Checks that collation is supported by server.\n *\n * @param {Server} [server] to check against\n * @param {object} [cmd] object where collation may be specified\n * @param {function} [callback] callback function\n * @return true if server does not support collation\n */\nfunction collationNotSupported(server, cmd) {\n  return cmd && cmd.collation && maxWireVersion(server) < 5;\n}\n\n/**\n * Checks if a given value is a Promise\n *\n * @param {*} maybePromise\n * @return true if the provided value is a Promise\n */\nfunction isPromiseLike(maybePromise) {\n  return maybePromise && typeof maybePromise.then === 'function';\n}\n\n/**\n * Applies the function `eachFn` to each item in `arr`, in parallel.\n *\n * @param {array} arr an array of items to asynchronusly iterate over\n * @param {function} eachFn A function to call on each item of the array. The callback signature is `(item, callback)`, where the callback indicates iteration is complete.\n * @param {function} callback The callback called after every item has been iterated\n */\nfunction eachAsync(arr, eachFn, callback) {\n  arr = arr || [];\n\n  let idx = 0;\n  let awaiting = 0;\n  for (idx = 0; idx < arr.length; ++idx) {\n    awaiting++;\n    eachFn(arr[idx], eachCallback);\n  }\n\n  if (awaiting === 0) {\n    callback();\n    return;\n  }\n\n  function eachCallback(err) {\n    awaiting--;\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (idx === arr.length && awaiting <= 0) {\n      callback();\n    }\n  }\n}\n\nfunction eachAsyncSeries(arr, eachFn, callback) {\n  arr = arr || [];\n\n  let idx = 0;\n  let awaiting = arr.length;\n  if (awaiting === 0) {\n    callback();\n    return;\n  }\n\n  function eachCallback(err) {\n    idx++;\n    awaiting--;\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (idx === arr.length && awaiting <= 0) {\n      callback();\n      return;\n    }\n\n    eachFn(arr[idx], eachCallback);\n  }\n\n  eachFn(arr[idx], eachCallback);\n}\n\nfunction isUnifiedTopology(topology) {\n  return topology.description != null;\n}\n\nfunction arrayStrictEqual(arr, arr2) {\n  if (!Array.isArray(arr) || !Array.isArray(arr2)) {\n    return false;\n  }\n\n  return arr.length === arr2.length && arr.every((elt, idx) => elt === arr2[idx]);\n}\n\nfunction tagsStrictEqual(tags, tags2) {\n  const tagsKeys = Object.keys(tags);\n  const tags2Keys = Object.keys(tags2);\n  return tagsKeys.length === tags2Keys.length && tagsKeys.every(key => tags2[key] === tags[key]);\n}\n\nfunction errorStrictEqual(lhs, rhs) {\n  if (lhs === rhs) {\n    return true;\n  }\n\n  if ((lhs == null && rhs != null) || (lhs != null && rhs == null)) {\n    return false;\n  }\n\n  if (lhs.constructor.name !== rhs.constructor.name) {\n    return false;\n  }\n\n  if (lhs.message !== rhs.message) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction makeStateMachine(stateTable) {\n  return function stateTransition(target, newState) {\n    const legalStates = stateTable[target.s.state];\n    if (legalStates && legalStates.indexOf(newState) < 0) {\n      throw new TypeError(\n        `illegal state transition from [${target.s.state}] => [${newState}], allowed: [${legalStates}]`\n      );\n    }\n\n    target.emit('stateChanged', target.s.state, newState);\n    target.s.state = newState;\n  };\n}\n\nfunction makeClientMetadata(options) {\n  options = options || {};\n\n  const metadata = {\n    driver: {\n      name: 'nodejs',\n      version: require('../../package.json').version\n    },\n    os: {\n      type: os.type(),\n      name: process.platform,\n      architecture: process.arch,\n      version: os.release()\n    },\n    platform: `'Node.js ${process.version}, ${os.endianness} (${\n      options.useUnifiedTopology ? 'unified' : 'legacy'\n    })`\n  };\n\n  // support optionally provided wrapping driver info\n  if (options.driverInfo) {\n    if (options.driverInfo.name) {\n      metadata.driver.name = `${metadata.driver.name}|${options.driverInfo.name}`;\n    }\n\n    if (options.driverInfo.version) {\n      metadata.version = `${metadata.driver.version}|${options.driverInfo.version}`;\n    }\n\n    if (options.driverInfo.platform) {\n      metadata.platform = `${metadata.platform}|${options.driverInfo.platform}`;\n    }\n  }\n\n  if (options.appname) {\n    // MongoDB requires the appname not exceed a byte length of 128\n    const buffer = Buffer.from(options.appname);\n    metadata.application = {\n      name: buffer.length > 128 ? buffer.slice(0, 128).toString('utf8') : options.appname\n    };\n  }\n\n  return metadata;\n}\n\nconst noop = () => {};\n\nmodule.exports = {\n  uuidV4,\n  relayEvents,\n  collationNotSupported,\n  retrieveEJSON,\n  retrieveKerberos,\n  maxWireVersion,\n  isPromiseLike,\n  eachAsync,\n  eachAsyncSeries,\n  isUnifiedTopology,\n  arrayStrictEqual,\n  tagsStrictEqual,\n  errorStrictEqual,\n  makeStateMachine,\n  makeClientMetadata,\n  noop\n};\n","'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst Msg = require('../connection/msg').Msg;\nconst MongoError = require('../error').MongoError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst isSharded = require('./shared').isSharded;\nconst databaseNamespace = require('./shared').databaseNamespace;\nconst isTransactionCommand = require('../transactions').isTransactionCommand;\nconst applySession = require('../sessions').applySession;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst maxWireVersion = require('../utils').maxWireVersion;\n\nfunction isClientEncryptionEnabled(server) {\n  const wireVersion = maxWireVersion(server);\n  return wireVersion && server.autoEncrypter;\n}\n\nfunction command(server, ns, cmd, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  if (!isClientEncryptionEnabled(server)) {\n    _command(server, ns, cmd, options, callback);\n    return;\n  }\n\n  const wireVersion = maxWireVersion(server);\n  if (typeof wireVersion !== 'number' || wireVersion < 8) {\n    callback(new MongoError('Auto-encryption requires a minimum MongoDB version of 4.2'));\n    return;\n  }\n\n  _cryptCommand(server, ns, cmd, options, callback);\n}\n\nfunction _command(server, ns, cmd, options, callback) {\n  const bson = server.s.bson;\n  const pool = server.s.pool;\n  const readPreference = getReadPreference(cmd, options);\n  const shouldUseOpMsg = supportsOpMsg(server);\n  const session = options.session;\n\n  let clusterTime = server.clusterTime;\n  let finalCmd = Object.assign({}, cmd);\n  if (hasSessionSupport(server) && session) {\n    if (\n      session.clusterTime &&\n      session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)\n    ) {\n      clusterTime = session.clusterTime;\n    }\n\n    const err = applySession(session, finalCmd, options);\n    if (err) {\n      return callback(err);\n    }\n  }\n\n  // if we have a known cluster time, gossip it\n  if (clusterTime) {\n    finalCmd.$clusterTime = clusterTime;\n  }\n\n  if (isSharded(server) && !shouldUseOpMsg && readPreference && readPreference.mode !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  const commandOptions = Object.assign(\n    {\n      command: true,\n      numberToSkip: 0,\n      numberToReturn: -1,\n      checkKeys: false\n    },\n    options\n  );\n\n  // This value is not overridable\n  commandOptions.slaveOk = readPreference.slaveOk();\n\n  const cmdNs = `${databaseNamespace(ns)}.$cmd`;\n  const message = shouldUseOpMsg\n    ? new Msg(bson, cmdNs, finalCmd, commandOptions)\n    : new Query(bson, cmdNs, finalCmd, commandOptions);\n\n  const inTransaction = session && (session.inTransaction() || isTransactionCommand(finalCmd));\n  const commandResponseHandler = inTransaction\n    ? function(err) {\n        // We need to add a TransientTransactionError errorLabel, as stated in the transaction spec.\n        if (\n          err &&\n          err instanceof MongoNetworkError &&\n          !err.hasErrorLabel('TransientTransactionError')\n        ) {\n          err.addErrorLabel('TransientTransactionError');\n        }\n\n        if (\n          !cmd.commitTransaction &&\n          err &&\n          err instanceof MongoError &&\n          err.hasErrorLabel('TransientTransactionError')\n        ) {\n          session.transaction.unpinServer();\n        }\n\n        return callback.apply(null, arguments);\n      }\n    : callback;\n\n  try {\n    pool.write(message, commandOptions, commandResponseHandler);\n  } catch (err) {\n    commandResponseHandler(err);\n  }\n}\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n  if (topology.description) {\n    return topology.description.maxWireVersion >= 6;\n  }\n\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\nfunction supportsOpMsg(topologyOrServer) {\n  const description = topologyOrServer.ismaster\n    ? topologyOrServer.ismaster\n    : topologyOrServer.description;\n\n  if (description == null) {\n    return false;\n  }\n\n  return description.maxWireVersion >= 6 && description.__nodejs_mock_server__ == null;\n}\n\nfunction _cryptCommand(server, ns, cmd, options, callback) {\n  const autoEncrypter = server.autoEncrypter;\n  function commandResponseHandler(err, response) {\n    if (err || response == null) {\n      callback(err, response);\n      return;\n    }\n\n    autoEncrypter.decrypt(response.result, options, (err, decrypted) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      response.result = decrypted;\n      response.message.documents = [decrypted];\n      callback(null, response);\n    });\n  }\n\n  autoEncrypter.encrypt(ns, cmd, options, (err, encrypted) => {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    _command(server, ns, encrypted, options, commandResponseHandler);\n  });\n}\n\nmodule.exports = command;\n","'use strict';\n\nconst Snappy = require('../connection/utils').retrieveSnappy();\nconst zlib = require('zlib');\n\nconst compressorIDs = {\n  snappy: 1,\n  zlib: 2\n};\n\nconst uncompressibleCommands = new Set([\n  'ismaster',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'authenticate',\n  'createUser',\n  'updateUser',\n  'copydbSaslStart',\n  'copydbgetnonce',\n  'copydb'\n]);\n\n// Facilitate compressing a message using an agreed compressor\nfunction compress(self, dataToBeCompressed, callback) {\n  switch (self.options.agreedCompressor) {\n    case 'snappy':\n      Snappy.compress(dataToBeCompressed, callback);\n      break;\n    case 'zlib':\n      // Determine zlibCompressionLevel\n      var zlibOptions = {};\n      if (self.options.zlibCompressionLevel) {\n        zlibOptions.level = self.options.zlibCompressionLevel;\n      }\n      zlib.deflate(dataToBeCompressed, zlibOptions, callback);\n      break;\n    default:\n      throw new Error(\n        'Attempt to compress message using unknown compressor \"' +\n          self.options.agreedCompressor +\n          '\".'\n      );\n  }\n}\n\n// Decompress a message using the given compressor\nfunction decompress(compressorID, compressedData, callback) {\n  if (compressorID < 0 || compressorID > compressorIDs.length) {\n    throw new Error(\n      'Server sent message compressed using an unsupported compressor. (Received compressor ID ' +\n        compressorID +\n        ')'\n    );\n  }\n  switch (compressorID) {\n    case compressorIDs.snappy:\n      Snappy.uncompress(compressedData, callback);\n      break;\n    case compressorIDs.zlib:\n      zlib.inflate(compressedData, callback);\n      break;\n    default:\n      callback(null, compressedData);\n  }\n}\n\nmodule.exports = {\n  compressorIDs,\n  uncompressibleCommands,\n  compress,\n  decompress\n};\n","'use strict';\n\nconst MIN_SUPPORTED_SERVER_VERSION = '2.6';\nconst MAX_SUPPORTED_SERVER_VERSION = '4.4';\nconst MIN_SUPPORTED_WIRE_VERSION = 2;\nconst MAX_SUPPORTED_WIRE_VERSION = 9;\n\nmodule.exports = {\n  MIN_SUPPORTED_SERVER_VERSION,\n  MAX_SUPPORTED_SERVER_VERSION,\n  MIN_SUPPORTED_WIRE_VERSION,\n  MAX_SUPPORTED_WIRE_VERSION\n};\n","'use strict';\n\nconst GetMore = require('../connection/commands').GetMore;\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\nconst command = require('./command');\n\nfunction getMore(server, ns, cursorState, batchSize, options, callback) {\n  options = options || {};\n\n  const wireVersion = maxWireVersion(server);\n  function queryCallback(err, result) {\n    if (err) return callback(err);\n    const response = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if (response.cursorNotFound) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (wireVersion < 4) {\n      const cursorId =\n        typeof response.cursorId === 'number'\n          ? Long.fromNumber(response.cursorId)\n          : response.cursorId;\n\n      cursorState.documents = response.documents;\n      cursorState.cursorId = cursorId;\n\n      callback(null, null, response.connection);\n      return;\n    }\n\n    // We have an error detected\n    if (response.documents[0].ok === 0) {\n      return callback(new MongoError(response.documents[0]));\n    }\n\n    // Ensure we have a Long valid cursor id\n    const cursorId =\n      typeof response.documents[0].cursor.id === 'number'\n        ? Long.fromNumber(response.documents[0].cursor.id)\n        : response.documents[0].cursor.id;\n\n    cursorState.documents = response.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n\n    callback(null, response.documents[0], response.connection);\n  }\n\n  if (wireVersion < 4) {\n    const bson = server.s.bson;\n    const getMoreOp = new GetMore(bson, ns, cursorState.cursorId, { numberToReturn: batchSize });\n    const queryOptions = applyCommonQueryOptions({}, cursorState);\n    server.s.pool.write(getMoreOp, queryOptions, queryCallback);\n    return;\n  }\n\n  const cursorId =\n    cursorState.cursorId instanceof Long\n      ? cursorState.cursorId\n      : Long.fromNumber(cursorState.cursorId);\n\n  const getMoreCmd = {\n    getMore: cursorId,\n    collection: collectionNamespace(ns),\n    batchSize: Math.abs(batchSize)\n  };\n\n  if (cursorState.cmd.tailable && typeof cursorState.cmd.maxAwaitTimeMS === 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  const commandOptions = Object.assign(\n    {\n      returnFieldSelector: null,\n      documentsReturnedIn: 'nextBatch'\n    },\n    options\n  );\n\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n\n  command(server, ns, getMoreCmd, commandOptions, queryCallback);\n}\n\nmodule.exports = getMore;\n","'use strict';\nconst writeCommand = require('./write_command');\n\nmodule.exports = {\n  insert: function insert(server, ns, ops, options, callback) {\n    writeCommand(server, 'insert', 'documents', ns, ops, options, callback);\n  },\n  update: function update(server, ns, ops, options, callback) {\n    writeCommand(server, 'update', 'updates', ns, ops, options, callback);\n  },\n  remove: function remove(server, ns, ops, options, callback) {\n    writeCommand(server, 'delete', 'deletes', ns, ops, options, callback);\n  },\n  killCursors: require('./kill_cursors'),\n  getMore: require('./get_more'),\n  query: require('./query'),\n  command: require('./command')\n};\n","'use strict';\n\nconst KillCursor = require('../connection/commands').KillCursor;\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst command = require('./command');\n\nfunction killCursors(server, ns, cursorState, callback) {\n  callback = typeof callback === 'function' ? callback : () => {};\n  const cursorId = cursorState.cursorId;\n\n  if (maxWireVersion(server) < 4) {\n    const bson = server.s.bson;\n    const pool = server.s.pool;\n    const killCursor = new KillCursor(bson, ns, [cursorId]);\n    const options = {\n      immediateRelease: true,\n      noResponse: true\n    };\n\n    if (typeof cursorState.session === 'object') {\n      options.session = cursorState.session;\n    }\n\n    if (pool && pool.isConnected()) {\n      try {\n        pool.write(killCursor, options, callback);\n      } catch (err) {\n        if (typeof callback === 'function') {\n          callback(err, null);\n        } else {\n          console.warn(err);\n        }\n      }\n    }\n\n    return;\n  }\n\n  const killCursorCmd = {\n    killCursors: collectionNamespace(ns),\n    cursors: [cursorId]\n  };\n\n  const options = {};\n  if (typeof cursorState.session === 'object') options.session = cursorState.session;\n\n  command(server, ns, killCursorCmd, options, (err, result) => {\n    if (err) {\n      return callback(err);\n    }\n\n    const response = result.message;\n    if (response.cursorNotFound) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (!Array.isArray(response.documents) || response.documents.length === 0) {\n      return callback(\n        new MongoError(`invalid killCursors result returned for cursor id ${cursorId}`)\n      );\n    }\n\n    callback(null, response.documents[0]);\n  });\n}\n\nmodule.exports = killCursors;\n","'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst MongoError = require('../error').MongoError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst isSharded = require('./shared').isSharded;\nconst maxWireVersion = require('../utils').maxWireVersion;\nconst applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\nconst command = require('./command');\nconst decorateWithExplain = require('../../utils').decorateWithExplain;\nconst Explain = require('../../explain').Explain;\n\nfunction query(server, ns, cmd, cursorState, options, callback) {\n  options = options || {};\n  if (cursorState.cursorId != null) {\n    return callback();\n  }\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  if (maxWireVersion(server) < 4) {\n    const query = prepareLegacyFindQuery(server, ns, cmd, cursorState, options);\n    const queryOptions = applyCommonQueryOptions({}, cursorState);\n    if (typeof query.documentsReturnedIn === 'string') {\n      queryOptions.documentsReturnedIn = query.documentsReturnedIn;\n    }\n\n    server.s.pool.write(query, queryOptions, callback);\n    return;\n  }\n\n  const readPreference = getReadPreference(cmd, options);\n  let findCmd = prepareFindCommand(server, ns, cmd, cursorState, options);\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  const explain = Explain.fromOptions(options);\n  if (explain) {\n    findCmd = decorateWithExplain(findCmd, explain);\n  }\n\n  // NOTE: This actually modifies the passed in cmd, and our code _depends_ on this\n  //       side-effect. Change this ASAP\n  cmd.virtual = false;\n\n  const commandOptions = Object.assign(\n    {\n      documentsReturnedIn: 'firstBatch',\n      numberToReturn: 1,\n      slaveOk: readPreference.slaveOk()\n    },\n    options\n  );\n\n  if (cmd.readPreference) {\n    commandOptions.readPreference = readPreference;\n  }\n\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n\n  command(server, ns, findCmd, commandOptions, callback);\n}\n\nfunction prepareFindCommand(server, ns, cmd, cursorState) {\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  const findCmd = {\n    find: collectionNamespace(ns)\n  };\n\n  if (cmd.query) {\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n\n  let sortValue = cmd.sort;\n  if (Array.isArray(sortValue)) {\n    const sortObject = {};\n\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      let sortDirection = sortValue[1];\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (let i = 0; i < sortValue.length; i++) {\n        let sortDirection = sortValue[i][1];\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  }\n\n  if (typeof cmd.allowDiskUse === 'boolean') {\n    findCmd.allowDiskUse = cmd.allowDiskUse;\n  }\n\n  if (cmd.sort) findCmd.sort = sortValue;\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  if (cmd.limit) findCmd.limit = cmd.limit;\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n\n      findCmd.singleBatch = true;\n    }\n\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n\n  if (cmd.comment) findCmd.comment = cmd.comment;\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n  if (cmd.min) findCmd.min = cmd.min;\n  if (cmd.max) findCmd.max = cmd.max;\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n  if (cmd.partial) findCmd.partial = cmd.partial;\n  if (cmd.collation) findCmd.collation = cmd.collation;\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n\n  return findCmd;\n}\n\nfunction prepareLegacyFindQuery(server, ns, cmd, cursorState, options) {\n  options = options || {};\n  const bson = server.s.bson;\n  const readPreference = getReadPreference(cmd, options);\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n\n  let numberToReturn = 0;\n  if (\n    cursorState.limit < 0 ||\n    (cursorState.limit !== 0 && cursorState.limit < cursorState.batchSize) ||\n    (cursorState.limit > 0 && cursorState.batchSize === 0)\n  ) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  const numberToSkip = cursorState.skip || 0;\n\n  const findCmd = {};\n  if (isSharded(server) && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n  if (options.explain !== undefined) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n\n  findCmd['$query'] = cmd.query;\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      `server find command does not support a readConcern level of ${cmd.readConcern.level}`\n    );\n  }\n\n  if (cmd.readConcern) {\n    cmd = Object.assign({}, cmd);\n    delete cmd['readConcern'];\n  }\n\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  const query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  if (typeof cmd.tailable === 'boolean') query.tailable = cmd.tailable;\n  if (typeof cmd.oplogReplay === 'boolean') query.oplogReplay = cmd.oplogReplay;\n  if (typeof cmd.noCursorTimeout === 'boolean') query.noCursorTimeout = cmd.noCursorTimeout;\n  if (typeof cmd.awaitData === 'boolean') query.awaitData = cmd.awaitData;\n  if (typeof cmd.partial === 'boolean') query.partial = cmd.partial;\n\n  query.slaveOk = readPreference.slaveOk();\n  return query;\n}\n\nmodule.exports = query;\n","'use strict';\n\nconst ReadPreference = require('../topologies/read_preference');\nconst MongoError = require('../error').MongoError;\nconst ServerType = require('../sdam/common').ServerType;\nconst TopologyDescription = require('../sdam/topology_description').TopologyDescription;\n\nconst MESSAGE_HEADER_SIZE = 16;\nconst COMPRESSION_DETAILS_SIZE = 9; // originalOpcode + uncompressedSize, compressorID\n\n// OPCODE Numbers\n// Defined at https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#request-opcodes\nvar opcodes = {\n  OP_REPLY: 1,\n  OP_UPDATE: 2001,\n  OP_INSERT: 2002,\n  OP_QUERY: 2004,\n  OP_GETMORE: 2005,\n  OP_DELETE: 2006,\n  OP_KILL_CURSORS: 2007,\n  OP_COMPRESSED: 2012,\n  OP_MSG: 2013\n};\n\nvar getReadPreference = function(cmd, options) {\n  // Default to command version of the readPreference\n  var readPreference = cmd.readPreference || new ReadPreference('primary');\n  // If we have an option readPreference override the command one\n  if (options.readPreference) {\n    readPreference = options.readPreference;\n  }\n\n  if (typeof readPreference === 'string') {\n    readPreference = new ReadPreference(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoError('read preference must be a ReadPreference instance');\n  }\n\n  return readPreference;\n};\n\n// Parses the header of a wire protocol message\nvar parseHeader = function(message) {\n  return {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n};\n\nfunction applyCommonQueryOptions(queryOptions, options) {\n  Object.assign(queryOptions, {\n    raw: typeof options.raw === 'boolean' ? options.raw : false,\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    monitoring: typeof options.monitoring === 'boolean' ? options.monitoring : false,\n    fullResult: typeof options.fullResult === 'boolean' ? options.fullResult : false\n  });\n\n  if (typeof options.socketTimeout === 'number') {\n    queryOptions.socketTimeout = options.socketTimeout;\n  }\n\n  if (options.session) {\n    queryOptions.session = options.session;\n  }\n\n  if (typeof options.documentsReturnedIn === 'string') {\n    queryOptions.documentsReturnedIn = options.documentsReturnedIn;\n  }\n\n  return queryOptions;\n}\n\nfunction isSharded(topologyOrServer) {\n  if (topologyOrServer.type === 'mongos') return true;\n  if (topologyOrServer.description && topologyOrServer.description.type === ServerType.Mongos) {\n    return true;\n  }\n\n  // NOTE: This is incredibly inefficient, and should be removed once command construction\n  //       happens based on `Server` not `Topology`.\n  if (topologyOrServer.description && topologyOrServer.description instanceof TopologyDescription) {\n    const servers = Array.from(topologyOrServer.description.servers.values());\n    return servers.some(server => server.type === ServerType.Mongos);\n  }\n\n  return false;\n}\n\nfunction databaseNamespace(ns) {\n  return ns.split('.')[0];\n}\nfunction collectionNamespace(ns) {\n  return ns\n    .split('.')\n    .slice(1)\n    .join('.');\n}\n\nmodule.exports = {\n  getReadPreference,\n  MESSAGE_HEADER_SIZE,\n  COMPRESSION_DETAILS_SIZE,\n  opcodes,\n  parseHeader,\n  applyCommonQueryOptions,\n  isSharded,\n  databaseNamespace,\n  collectionNamespace\n};\n","'use strict';\n\nconst MongoError = require('../error').MongoError;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst command = require('./command');\nconst decorateWithExplain = require('../../utils').decorateWithExplain;\nconst Explain = require('../../explain').Explain;\n\nfunction writeCommand(server, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError(`${type} must contain at least one document`);\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const writeConcern = options.writeConcern;\n\n  let writeCommand = {};\n  writeCommand[type] = collectionNamespace(ns);\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  if (options.collation) {\n    for (let i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // If a command is to be explained, we need to reformat the command after\n  // the other command properties are specified.\n  const explain = Explain.fromOptions(options);\n  if (explain) {\n    writeCommand = decorateWithExplain(writeCommand, explain);\n  }\n\n  const commandOptions = Object.assign(\n    {\n      checkKeys: type === 'insert',\n      numberToReturn: 1\n    },\n    options\n  );\n\n  command(server, ns, writeCommand, commandOptions, callback);\n}\n\nmodule.exports = writeCommand;\n","'use strict';\n\nconst Transform = require('stream').Transform;\nconst PassThrough = require('stream').PassThrough;\nconst deprecate = require('util').deprecate;\nconst handleCallback = require('./utils').handleCallback;\nconst ReadPreference = require('./core').ReadPreference;\nconst MongoError = require('./core').MongoError;\nconst CoreCursor = require('./core/cursor').CoreCursor;\nconst CursorState = require('./core/cursor').CursorState;\nconst Map = require('./core').BSON.Map;\nconst maybePromise = require('./utils').maybePromise;\nconst executeOperation = require('./operations/execute_operation');\nconst formattedOrderClause = require('./utils').formattedOrderClause;\nconst Explain = require('./explain').Explain;\nconst Aspect = require('./operations/operation').Aspect;\n\nconst each = require('./operations/cursor_ops').each;\nconst CountOperation = require('./operations/count');\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n *\n * **CURSORS Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // Show that duplicate records got dropped\n *     col.find({}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the code module\n * @external CoreCursor\n * @external Readable\n */\n\n// Flags allowed for cursor\nconst flags = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];\nconst fields = ['numberOfRetries', 'tailableRetryInterval'];\n\n/**\n * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class Cursor\n * @extends external:CoreCursor\n * @extends external:Readable\n * @property {string} sortValue Cursor query sort setting.\n * @property {boolean} timeout Is Cursor able to time out.\n * @property {ReadPreference} readPreference Get cursor ReadPreference.\n * @fires Cursor#data\n * @fires Cursor#end\n * @fires Cursor#close\n * @fires Cursor#readable\n * @return {Cursor} a Cursor instance.\n * @example\n * Cursor cursor options.\n *\n * collection.find({}).project({a:1})                             // Create a projection of field a\n * collection.find({}).skip(1).limit(10)                          // Skip 1 and limit 10\n * collection.find({}).batchSize(5)                               // Set batchSize on cursor to 5\n * collection.find({}).filter({a:1})                              // Set query on the cursor\n * collection.find({}).comment('add a comment')                   // Add a comment to the query, allowing to correlate queries\n * collection.find({}).addCursorFlag('tailable', true)            // Set cursor as tailable\n * collection.find({}).addCursorFlag('noCursorTimeout', true)     // Set cursor as noCursorTimeout\n * collection.find({}).addCursorFlag('awaitData', true)           // Set cursor as awaitData\n * collection.find({}).addCursorFlag('partial', true)             // Set cursor as partial\n * collection.find({}).addQueryModifier('$orderby', {a:1})        // Set $orderby {a:1}\n * collection.find({}).max(10)                                    // Set the cursor max\n * collection.find({}).maxTimeMS(1000)                            // Set the cursor maxTimeMS\n * collection.find({}).min(100)                                   // Set the cursor min\n * collection.find({}).returnKey(true)                            // Set the cursor returnKey\n * collection.find({}).setReadPreference(ReadPreference.PRIMARY)  // Set the cursor readPreference\n * collection.find({}).showRecordId(true)                         // Set the cursor showRecordId\n * collection.find({}).sort([['a', 1]])                           // Sets the sort order of the cursor query\n * collection.find({}).hint('a_1')                                // Set the cursor hint\n *\n * All options are chainable, so one can do the following.\n *\n * collection.find({}).maxTimeMS(1000).maxScan(100).skip(1).toArray(..)\n */\nclass Cursor extends CoreCursor {\n  constructor(topology, ns, cmd, options) {\n    super(topology, ns, cmd, options);\n    if (this.operation) {\n      options = this.operation.options;\n    }\n\n    // Tailable cursor options\n    const numberOfRetries = options.numberOfRetries || 5;\n    const tailableRetryInterval = options.tailableRetryInterval || 500;\n    const currentNumberOfRetries = numberOfRetries;\n\n    // Get the promiseLibrary\n    const promiseLibrary = options.promiseLibrary || Promise;\n\n    // Internal cursor state\n    this.s = {\n      // Tailable cursor options\n      numberOfRetries: numberOfRetries,\n      tailableRetryInterval: tailableRetryInterval,\n      currentNumberOfRetries: currentNumberOfRetries,\n      // State\n      state: CursorState.INIT,\n      // Promise library\n      promiseLibrary,\n      // explicitlyIgnoreSession\n      explicitlyIgnoreSession: !!options.explicitlyIgnoreSession\n    };\n\n    // Optional ClientSession\n    if (!options.explicitlyIgnoreSession && options.session) {\n      this.cursorState.session = options.session;\n    }\n\n    // Translate correctly\n    if (this.options.noCursorTimeout === true) {\n      this.addCursorFlag('noCursorTimeout', true);\n    }\n\n    // Get the batchSize\n    let batchSize = 1000;\n    if (this.cmd.cursor && this.cmd.cursor.batchSize) {\n      batchSize = this.cmd.cursor.batchSize;\n    } else if (options.cursor && options.cursor.batchSize) {\n      batchSize = options.cursor.batchSize;\n    } else if (typeof options.batchSize === 'number') {\n      batchSize = options.batchSize;\n    }\n\n    // Set the batchSize\n    this.setCursorBatchSize(batchSize);\n  }\n\n  get readPreference() {\n    if (this.operation) {\n      return this.operation.readPreference;\n    }\n\n    return this.options.readPreference;\n  }\n\n  get sortValue() {\n    return this.cmd.sort;\n  }\n\n  _initializeCursor(callback) {\n    if (this.operation && this.operation.session != null) {\n      this.cursorState.session = this.operation.session;\n    } else {\n      // implicitly create a session if one has not been provided\n      if (\n        !this.s.explicitlyIgnoreSession &&\n        !this.cursorState.session &&\n        this.topology.hasSessionSupport()\n      ) {\n        this.cursorState.session = this.topology.startSession({ owner: this });\n\n        if (this.operation) {\n          this.operation.session = this.cursorState.session;\n        }\n      }\n    }\n\n    super._initializeCursor(callback);\n  }\n\n  /**\n   * Check if there is any document still available in the cursor\n   * @method\n   * @param {Cursor~resultCallback} [callback] The result callback.\n   * @throws {MongoError}\n   * @return {Promise} returns Promise if no callback passed\n   */\n  hasNext(callback) {\n    if (this.s.state === CursorState.CLOSED || (this.isDead && this.isDead())) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    return maybePromise(this, callback, cb => {\n      const cursor = this;\n      if (cursor.isNotified()) {\n        return cb(null, false);\n      }\n\n      cursor._next((err, doc) => {\n        if (err) return cb(err);\n        if (doc == null || cursor.s.state === Cursor.CLOSED || cursor.isDead()) {\n          return cb(null, false);\n        }\n\n        cursor.s.state = CursorState.OPEN;\n\n        // NODE-2482: merge this into the core cursor implementation\n        cursor.cursorState.cursorIndex--;\n        if (cursor.cursorState.limit > 0) {\n          cursor.cursorState.currentLimit--;\n        }\n\n        cb(null, true);\n      });\n    });\n  }\n\n  /**\n   * Get the next available document from the cursor, returns null if no more documents are available.\n   * @method\n   * @param {Cursor~resultCallback} [callback] The result callback.\n   * @throws {MongoError}\n   * @return {Promise} returns Promise if no callback passed\n   */\n  next(callback) {\n    return maybePromise(this, callback, cb => {\n      const cursor = this;\n      if (cursor.s.state === CursorState.CLOSED || (cursor.isDead && cursor.isDead())) {\n        cb(MongoError.create({ message: 'Cursor is closed', driver: true }));\n        return;\n      }\n\n      if (cursor.s.state === CursorState.INIT && cursor.cmd.sort) {\n        try {\n          cursor.cmd.sort = formattedOrderClause(cursor.cmd.sort);\n        } catch (err) {\n          return cb(err);\n        }\n      }\n\n      cursor._next((err, doc) => {\n        if (err) return cb(err);\n        cursor.s.state = CursorState.OPEN;\n        cb(null, doc);\n      });\n    });\n  }\n\n  /**\n   * Set the cursor query\n   * @method\n   * @param {object} filter The filter object used for the cursor.\n   * @return {Cursor}\n   */\n  filter(filter) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.query = filter;\n    return this;\n  }\n\n  /**\n   * Set the cursor maxScan\n   * @method\n   * @param {object} maxScan Constrains the query to only scan the specified number of documents when fulfilling the query\n   * @deprecated as of MongoDB 4.0\n   * @return {Cursor}\n   */\n  maxScan(maxScan) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.maxScan = maxScan;\n    return this;\n  }\n\n  /**\n   * Set the cursor hint\n   * @method\n   * @param {object} hint If specified, then the query system will only consider plans using the hinted index.\n   * @return {Cursor}\n   */\n  hint(hint) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.hint = hint;\n    return this;\n  }\n\n  /**\n   * Set the cursor min\n   * @method\n   * @param {object} min Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n   * @return {Cursor}\n   */\n  min(min) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.min = min;\n    return this;\n  }\n\n  /**\n   * Set the cursor max\n   * @method\n   * @param {object} max Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n   * @return {Cursor}\n   */\n  max(max) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.max = max;\n    return this;\n  }\n\n  /**\n   * Set the cursor returnKey. If set to true, modifies the cursor to only return the index field or fields for the results of the query, rather than documents. If set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields.\n   * @method\n   * @param {bool} returnKey the returnKey value.\n   * @return {Cursor}\n   */\n  returnKey(value) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.returnKey = value;\n    return this;\n  }\n\n  /**\n   * Set the cursor showRecordId\n   * @method\n   * @param {object} showRecordId The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n   * @return {Cursor}\n   */\n  showRecordId(value) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.showDiskLoc = value;\n    return this;\n  }\n\n  /**\n   * Set the cursor snapshot\n   * @method\n   * @param {object} snapshot The $snapshot operator prevents the cursor from returning a document more than once because an intervening write operation results in a move of the document.\n   * @deprecated as of MongoDB 4.0\n   * @return {Cursor}\n   */\n  snapshot(value) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.snapshot = value;\n    return this;\n  }\n\n  /**\n   * Set a node.js specific cursor option\n   * @method\n   * @param {string} field The cursor option to set ['numberOfRetries', 'tailableRetryInterval'].\n   * @param {object} value The field value.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  setCursorOption(field, value) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (fields.indexOf(field) === -1) {\n      throw MongoError.create({\n        message: `option ${field} is not a supported option ${fields}`,\n        driver: true\n      });\n    }\n\n    this.s[field] = value;\n    if (field === 'numberOfRetries') this.s.currentNumberOfRetries = value;\n    return this;\n  }\n\n  /**\n   * Add a cursor flag to the cursor\n   * @method\n   * @param {string} flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial'].\n   * @param {boolean} value The flag boolean value.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  addCursorFlag(flag, value) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (flags.indexOf(flag) === -1) {\n      throw MongoError.create({\n        message: `flag ${flag} is not a supported flag ${flags}`,\n        driver: true\n      });\n    }\n\n    if (typeof value !== 'boolean') {\n      throw MongoError.create({ message: `flag ${flag} must be a boolean value`, driver: true });\n    }\n\n    this.cmd[flag] = value;\n    return this;\n  }\n\n  /**\n   * Add a query modifier to the cursor query\n   * @method\n   * @param {string} name The query modifier (must start with $, such as $orderby etc)\n   * @param {string|boolean|number} value The modifier value.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  addQueryModifier(name, value) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (name[0] !== '$') {\n      throw MongoError.create({ message: `${name} is not a valid query modifier`, driver: true });\n    }\n\n    // Strip of the $\n    const field = name.substr(1);\n    // Set on the command\n    this.cmd[field] = value;\n    // Deal with the special case for sort\n    if (field === 'orderby') this.cmd.sort = this.cmd[field];\n    return this;\n  }\n\n  /**\n   * Add a comment to the cursor query allowing for tracking the comment in the log.\n   * @method\n   * @param {string} value The comment attached to this query.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  comment(value) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.comment = value;\n    return this;\n  }\n\n  /**\n   * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n   * @method\n   * @param {number} value Number of milliseconds to wait before aborting the tailed query.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  maxAwaitTimeMS(value) {\n    if (typeof value !== 'number') {\n      throw MongoError.create({ message: 'maxAwaitTimeMS must be a number', driver: true });\n    }\n\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.maxAwaitTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n   * @method\n   * @param {number} value Number of milliseconds to wait before aborting the query.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  maxTimeMS(value) {\n    if (typeof value !== 'number') {\n      throw MongoError.create({ message: 'maxTimeMS must be a number', driver: true });\n    }\n\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.maxTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Sets a field projection for the query.\n   * @method\n   * @param {object} value The field projection object.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  project(value) {\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    this.cmd.fields = value;\n    return this;\n  }\n\n  /**\n   * Sets the sort order of the cursor query.\n   * @method\n   * @param {(string|array|object)} keyOrList The key or keys set for the sort.\n   * @param {number} [direction] The direction of the sorting (1 or -1).\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  sort(keyOrList, direction) {\n    if (this.options.tailable) {\n      throw MongoError.create({ message: \"Tailable cursor doesn't support sorting\", driver: true });\n    }\n\n    if (this.s.state === CursorState.CLOSED || this.s.state === CursorState.OPEN || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    let order = keyOrList;\n\n    // We have an array of arrays, we need to preserve the order of the sort\n    // so we will us a Map\n    if (Array.isArray(order) && Array.isArray(order[0])) {\n      order = new Map(\n        order.map(x => {\n          const value = [x[0], null];\n          if (x[1] === 'asc') {\n            value[1] = 1;\n          } else if (x[1] === 'desc') {\n            value[1] = -1;\n          } else if (x[1] === 1 || x[1] === -1 || x[1].$meta) {\n            value[1] = x[1];\n          } else {\n            throw new MongoError(\n              \"Illegal sort clause, must be of the form [['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\"\n            );\n          }\n\n          return value;\n        })\n      );\n    }\n\n    if (direction != null) {\n      order = [[keyOrList, direction]];\n    }\n\n    this.cmd.sort = order;\n    return this;\n  }\n\n  /**\n   * Set the batch size for the cursor.\n   * @method\n   * @param {number} value The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/find/|find command documentation}.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  batchSize(value) {\n    if (this.options.tailable) {\n      throw MongoError.create({\n        message: \"Tailable cursor doesn't support batchSize\",\n        driver: true\n      });\n    }\n\n    if (this.s.state === CursorState.CLOSED || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (typeof value !== 'number') {\n      throw MongoError.create({ message: 'batchSize requires an integer', driver: true });\n    }\n\n    this.cmd.batchSize = value;\n    this.setCursorBatchSize(value);\n    return this;\n  }\n\n  /**\n   * Set the collation options for the cursor.\n   * @method\n   * @param {object} value The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  collation(value) {\n    this.cmd.collation = value;\n    return this;\n  }\n\n  /**\n   * Set the limit for the cursor.\n   * @method\n   * @param {number} value The limit for the cursor query.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  limit(value) {\n    if (this.options.tailable) {\n      throw MongoError.create({ message: \"Tailable cursor doesn't support limit\", driver: true });\n    }\n\n    if (this.s.state === CursorState.OPEN || this.s.state === CursorState.CLOSED || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (typeof value !== 'number') {\n      throw MongoError.create({ message: 'limit requires an integer', driver: true });\n    }\n\n    this.cmd.limit = value;\n    this.setCursorLimit(value);\n    return this;\n  }\n\n  /**\n   * Set the skip for the cursor.\n   * @method\n   * @param {number} value The skip for the cursor query.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  skip(value) {\n    if (this.options.tailable) {\n      throw MongoError.create({ message: \"Tailable cursor doesn't support skip\", driver: true });\n    }\n\n    if (this.s.state === CursorState.OPEN || this.s.state === CursorState.CLOSED || this.isDead()) {\n      throw MongoError.create({ message: 'Cursor is closed', driver: true });\n    }\n\n    if (typeof value !== 'number') {\n      throw MongoError.create({ message: 'skip requires an integer', driver: true });\n    }\n\n    this.cmd.skip = value;\n    this.setCursorSkip(value);\n    return this;\n  }\n\n  /**\n   * The callback format for results\n   * @callback Cursor~resultCallback\n   * @param {MongoError} error An error instance representing the error during the execution.\n   * @param {(object|null|boolean)} result The result object if the command was executed successfully.\n   */\n\n  /**\n   * Clone the cursor\n   * @function external:CoreCursor#clone\n   * @return {Cursor}\n   */\n\n  /**\n   * Resets the cursor\n   * @function external:CoreCursor#rewind\n   * @return {null}\n   */\n\n  /**\n   * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n   * not all of the elements will be iterated if this cursor had been previously accessed.\n   * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n   * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n   * at any given time if batch size is specified. Otherwise, the caller is responsible\n   * for making sure that the entire result can fit the memory.\n   * @method\n   * @deprecated\n   * @param {Cursor~resultCallback} callback The result callback.\n   * @throws {MongoError}\n   * @return {null}\n   */\n  each(callback) {\n    // Rewind cursor state\n    this.rewind();\n    // Set current cursor to INIT\n    this.s.state = CursorState.INIT;\n    // Run the query\n    each(this, callback);\n  }\n\n  /**\n   * The callback format for the forEach iterator method\n   * @callback Cursor~iteratorCallback\n   * @param {Object} doc An emitted document for the iterator\n   */\n\n  /**\n   * The callback error format for the forEach iterator method\n   * @callback Cursor~endCallback\n   * @param {MongoError} error An error instance representing the error during the execution.\n   */\n\n  /**\n   * Iterates over all the documents for this cursor using the iterator, callback pattern.\n   * @method\n   * @param {Cursor~iteratorCallback} iterator The iteration callback.\n   * @param {Cursor~endCallback} callback The end callback.\n   * @throws {MongoError}\n   * @return {Promise} if no callback supplied\n   */\n  forEach(iterator, callback) {\n    // Rewind cursor state\n    this.rewind();\n\n    // Set current cursor to INIT\n    this.s.state = CursorState.INIT;\n\n    if (typeof callback === 'function') {\n      each(this, (err, doc) => {\n        if (err) {\n          callback(err);\n          return false;\n        }\n        if (doc != null) {\n          iterator(doc);\n          return true;\n        }\n        if (doc == null && callback) {\n          const internalCallback = callback;\n          callback = null;\n          internalCallback(null);\n          return false;\n        }\n      });\n    } else {\n      return new this.s.promiseLibrary((fulfill, reject) => {\n        each(this, (err, doc) => {\n          if (err) {\n            reject(err);\n            return false;\n          } else if (doc == null) {\n            fulfill(null);\n            return false;\n          } else {\n            iterator(doc);\n            return true;\n          }\n        });\n      });\n    }\n  }\n\n  /**\n   * Set the ReadPreference for the cursor.\n   * @method\n   * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n   * @throws {MongoError}\n   * @return {Cursor}\n   */\n  setReadPreference(readPreference) {\n    if (this.s.state !== CursorState.INIT) {\n      throw MongoError.create({\n        message: 'cannot change cursor readPreference after cursor has been accessed',\n        driver: true\n      });\n    }\n\n    if (readPreference instanceof ReadPreference) {\n      this.options.readPreference = readPreference;\n    } else if (typeof readPreference === 'string') {\n      this.options.readPreference = new ReadPreference(readPreference);\n    } else {\n      throw new TypeError('Invalid read preference: ' + readPreference);\n    }\n\n    return this;\n  }\n\n  /**\n   * The callback format for results\n   * @callback Cursor~toArrayResultCallback\n   * @param {MongoError} error An error instance representing the error during the execution.\n   * @param {object[]} documents All the documents the satisfy the cursor.\n   */\n\n  /**\n   * Returns an array of documents. The caller is responsible for making sure that there\n   * is enough memory to store the results. Note that the array only contains partial\n   * results when this cursor had been previously accessed. In that case,\n   * cursor.rewind() can be used to reset the cursor.\n   * @method\n   * @param {Cursor~toArrayResultCallback} [callback] The result callback.\n   * @throws {MongoError}\n   * @return {Promise} returns Promise if no callback passed\n   */\n  toArray(callback) {\n    if (this.options.tailable) {\n      throw MongoError.create({\n        message: 'Tailable cursor cannot be converted to array',\n        driver: true\n      });\n    }\n\n    return maybePromise(this, callback, cb => {\n      const cursor = this;\n      const items = [];\n\n      // Reset cursor\n      cursor.rewind();\n      cursor.s.state = CursorState.INIT;\n\n      // Fetch all the documents\n      const fetchDocs = () => {\n        cursor._next((err, doc) => {\n          if (err) {\n            return handleCallback(cb, err);\n          }\n\n          if (doc == null) {\n            return cursor.close({ skipKillCursors: true }, () => handleCallback(cb, null, items));\n          }\n\n          // Add doc to items\n          items.push(doc);\n\n          // Get all buffered objects\n          if (cursor.bufferedCount() > 0) {\n            let docs = cursor.readBufferedDocuments(cursor.bufferedCount());\n            Array.prototype.push.apply(items, docs);\n          }\n\n          // Attempt a fetch\n          fetchDocs();\n        });\n      };\n\n      fetchDocs();\n    });\n  }\n\n  /**\n   * The callback format for results\n   * @callback Cursor~countResultCallback\n   * @param {MongoError} error An error instance representing the error during the execution.\n   * @param {number} count The count of documents.\n   */\n\n  /**\n   * Get the count of documents for this cursor\n   * @method\n   * @param {boolean} [applySkipLimit=true] Should the count command apply limit and skip settings on the cursor or in the passed in options.\n   * @param {object} [options] Optional settings.\n   * @param {number} [options.skip] The number of documents to skip.\n   * @param {number} [options.limit] The maximum amounts to count before aborting.\n   * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n   * @param {string} [options.hint] An index name hint for the query.\n   * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n   * @param {Cursor~countResultCallback} [callback] The result callback.\n   * @return {Promise} returns Promise if no callback passed\n   */\n  count(applySkipLimit, opts, callback) {\n    if (this.cmd.query == null)\n      throw MongoError.create({\n        message: 'count can only be used with find command',\n        driver: true\n      });\n    if (typeof opts === 'function') (callback = opts), (opts = {});\n    opts = opts || {};\n\n    if (typeof applySkipLimit === 'function') {\n      callback = applySkipLimit;\n      applySkipLimit = true;\n    }\n\n    if (this.cursorState.session) {\n      opts = Object.assign({}, opts, { session: this.cursorState.session });\n    }\n\n    const countOperation = new CountOperation(this, applySkipLimit, opts);\n\n    return executeOperation(this.topology, countOperation, callback);\n  }\n\n  /**\n   * Close the cursor, sending a KillCursor command and emitting close.\n   * @method\n   * @param {object} [options] Optional settings.\n   * @param {boolean} [options.skipKillCursors] Bypass calling killCursors when closing the cursor.\n   * @param {Cursor~resultCallback} [callback] The result callback.\n   * @return {Promise} returns Promise if no callback passed\n   */\n  close(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = Object.assign({}, { skipKillCursors: false }, options);\n\n    return maybePromise(this, callback, cb => {\n      this.s.state = CursorState.CLOSED;\n      if (!options.skipKillCursors) {\n        // Kill the cursor\n        this.kill();\n      }\n\n      this._endSession(() => {\n        this.emit('close');\n        cb(null, this);\n      });\n    });\n  }\n\n  /**\n   * Map all documents using the provided function\n   * @method\n   * @param {function} [transform] The mapping transformation method.\n   * @return {Cursor}\n   */\n  map(transform) {\n    if (this.cursorState.transforms && this.cursorState.transforms.doc) {\n      const oldTransform = this.cursorState.transforms.doc;\n      this.cursorState.transforms.doc = doc => {\n        return transform(oldTransform(doc));\n      };\n    } else {\n      this.cursorState.transforms = { doc: transform };\n    }\n\n    return this;\n  }\n\n  /**\n   * Is the cursor closed\n   * @method\n   * @return {boolean}\n   */\n  isClosed() {\n    return this.isDead();\n  }\n\n  destroy(err) {\n    if (err) this.emit('error', err);\n    this.pause();\n    this.close();\n  }\n\n  /**\n   * Return a modified Readable stream including a possible transform method.\n   * @method\n   * @param {object} [options] Optional settings.\n   * @param {function} [options.transform] A transformation method applied to each document emitted by the stream.\n   * @return {Cursor}\n   * TODO: replace this method with transformStream in next major release\n   */\n  stream(options) {\n    this.cursorState.streamOptions = options || {};\n    return this;\n  }\n\n  /**\n   * Return a modified Readable stream that applies a given transform function, if supplied. If none supplied,\n   * returns a stream of unmodified docs.\n   * @method\n   * @param {object} [options] Optional settings.\n   * @param {function} [options.transform] A transformation method applied to each document emitted by the stream.\n   * @return {stream}\n   */\n  transformStream(options) {\n    const streamOptions = options || {};\n    if (typeof streamOptions.transform === 'function') {\n      const stream = new Transform({\n        objectMode: true,\n        transform: function(chunk, encoding, callback) {\n          this.push(streamOptions.transform(chunk));\n          callback();\n        }\n      });\n\n      return this.pipe(stream);\n    }\n\n    return this.pipe(new PassThrough({ objectMode: true }));\n  }\n\n  /**\n   * Execute the explain for the cursor\n   *\n   * For backwards compatibility, a verbosity of true is interpreted as \"allPlansExecution\"\n   * and false as \"queryPlanner\". Prior to server version 3.6, aggregate()\n   * ignores the verbosity parameter and executes in \"queryPlanner\".\n   *\n   * @method\n   * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [verbosity=true] - An optional mode in which to run the explain.\n   * @param {Cursor~resultCallback} [callback] The result callback.\n   * @return {Promise} returns Promise if no callback passed\n   */\n  explain(verbosity, callback) {\n    if (typeof verbosity === 'function') (callback = verbosity), (verbosity = true);\n    if (verbosity === undefined) verbosity = true;\n\n    if (!this.operation || !this.operation.hasAspect(Aspect.EXPLAINABLE)) {\n      throw new MongoError('This command cannot be explained');\n    }\n    this.operation.explain = new Explain(verbosity);\n\n    return maybePromise(this, callback, cb => {\n      CoreCursor.prototype._next.apply(this, [cb]);\n    });\n  }\n\n  /**\n   * Return the cursor logger\n   * @method\n   * @return {Logger} return the cursor logger\n   * @ignore\n   */\n  getLogger() {\n    return this.logger;\n  }\n}\n\n/**\n * Cursor stream data event, fired for each document in the cursor.\n *\n * @event Cursor#data\n * @type {object}\n */\n\n/**\n * Cursor stream end event\n *\n * @event Cursor#end\n * @type {null}\n */\n\n/**\n * Cursor stream close event\n *\n * @event Cursor#close\n * @type {null}\n */\n\n/**\n * Cursor stream readable event\n *\n * @event Cursor#readable\n * @type {null}\n */\n\n// aliases\nCursor.prototype.maxTimeMs = Cursor.prototype.maxTimeMS;\n\n// deprecated methods\ndeprecate(Cursor.prototype.each, 'Cursor.each is deprecated. Use Cursor.forEach instead.');\ndeprecate(\n  Cursor.prototype.maxScan,\n  'Cursor.maxScan is deprecated, and will be removed in a later version'\n);\n\ndeprecate(\n  Cursor.prototype.snapshot,\n  'Cursor Snapshot is deprecated, and will be removed in a later version'\n);\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Readable#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Readable#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Readable#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Readable#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Readable#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Readable#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Readable#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Readable#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\nmodule.exports = Cursor;\n","'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst inherits = require('util').inherits;\nconst getSingleProperty = require('./utils').getSingleProperty;\nconst CommandCursor = require('./command_cursor');\nconst handleCallback = require('./utils').handleCallback;\nconst filterOptions = require('./utils').filterOptions;\nconst toError = require('./utils').toError;\nconst ReadPreference = require('./core').ReadPreference;\nconst MongoError = require('./core').MongoError;\nconst ObjectID = require('./core').ObjectID;\nconst Logger = require('./core').Logger;\nconst Collection = require('./collection');\nconst mergeOptionsAndWriteConcern = require('./utils').mergeOptionsAndWriteConcern;\nconst executeLegacyOperation = require('./utils').executeLegacyOperation;\nconst ChangeStream = require('./change_stream');\nconst deprecate = require('util').deprecate;\nconst deprecateOptions = require('./utils').deprecateOptions;\nconst MongoDBNamespace = require('./utils').MongoDBNamespace;\nconst CONSTANTS = require('./constants');\nconst WriteConcern = require('./write_concern');\nconst ReadConcern = require('./read_concern');\nconst AggregationCursor = require('./aggregation_cursor');\n\n// Operations\nconst createListener = require('./operations/db_ops').createListener;\nconst ensureIndex = require('./operations/db_ops').ensureIndex;\nconst evaluate = require('./operations/db_ops').evaluate;\nconst profilingInfo = require('./operations/db_ops').profilingInfo;\nconst validateDatabaseName = require('./operations/db_ops').validateDatabaseName;\n\nconst AggregateOperation = require('./operations/aggregate');\nconst AddUserOperation = require('./operations/add_user');\nconst CollectionsOperation = require('./operations/collections');\nconst CommandOperation = require('./operations/command');\nconst RunCommandOperation = require('./operations/run_command');\nconst CreateCollectionOperation = require('./operations/create_collection');\nconst CreateIndexesOperation = require('./operations/create_indexes');\nconst DropCollectionOperation = require('./operations/drop').DropCollectionOperation;\nconst DropDatabaseOperation = require('./operations/drop').DropDatabaseOperation;\nconst ExecuteDbAdminCommandOperation = require('./operations/execute_db_admin_command');\nconst IndexInformationOperation = require('./operations/index_information');\nconst ListCollectionsOperation = require('./operations/list_collections');\nconst ProfilingLevelOperation = require('./operations/profiling_level');\nconst RemoveUserOperation = require('./operations/remove_user');\nconst RenameOperation = require('./operations/rename');\nconst SetProfilingLevelOperation = require('./operations/set_profiling_level');\n\nconst executeOperation = require('./operations/execute_operation');\n\n/**\n * @fileOverview The **Db** class is a class that represents a MongoDB Database.\n *\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Select the database by name\n *   const testDb = client.db(dbName);\n *   client.close();\n * });\n */\n\n// Allowed parameters\nconst legalOptionNames = [\n  'w',\n  'wtimeout',\n  'fsync',\n  'j',\n  'writeConcern',\n  'readPreference',\n  'readPreferenceTags',\n  'native_parser',\n  'forceServerObjectId',\n  'pkFactory',\n  'serializeFunctions',\n  'raw',\n  'bufferMaxEntries',\n  'authSource',\n  'ignoreUndefined',\n  'promoteLongs',\n  'promiseLibrary',\n  'readConcern',\n  'retryMiliSeconds',\n  'numberOfRetries',\n  'parentDb',\n  'noListener',\n  'loggerLevel',\n  'logger',\n  'promoteBuffers',\n  'promoteLongs',\n  'promoteValues',\n  'compression',\n  'retryWrites'\n];\n\n/**\n * Creates a new Db instance\n * @class\n * @param {string} databaseName The name of the database this instance represents.\n * @param {(Server|ReplSet|Mongos)} topology The server topology for the database.\n * @param {object} [options] Optional settings.\n * @param {string} [options.authSource] If the database authentication is dependent on another databaseName.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys.\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {ReadConcernLevel} [options.readConcern.level='local'] Specify a read concern level for the collection operations (only MongoDB 3.2 or higher supported)\n * @property {(Server|ReplSet|Mongos)} serverConfig Get the current db topology.\n * @property {number} bufferMaxEntries Current bufferMaxEntries value for the database\n * @property {string} databaseName The name of the database this instance represents.\n * @property {object} options The options associated with the db instance.\n * @property {boolean} native_parser The current value of the parameter native_parser.\n * @property {boolean} slaveOk The current slaveOk value for the db instance.\n * @property {object} writeConcern The current write concern values.\n * @property {object} topology Access the topology object (single server, replicaset or mongos).\n * @fires Db#close\n * @fires Db#reconnect\n * @fires Db#error\n * @fires Db#timeout\n * @fires Db#parseError\n * @fires Db#fullsetup\n * @return {Db} a Db instance.\n */\nfunction Db(databaseName, topology, options) {\n  options = options || {};\n  if (!(this instanceof Db)) return new Db(databaseName, topology, options);\n  EventEmitter.call(this);\n\n  // Get the promiseLibrary\n  const promiseLibrary = options.promiseLibrary || Promise;\n\n  // Filter the options\n  options = filterOptions(options, legalOptionNames);\n\n  // Ensure we put the promiseLib in the options\n  options.promiseLibrary = promiseLibrary;\n\n  // Internal state of the db object\n  this.s = {\n    // DbCache\n    dbCache: {},\n    // Children db's\n    children: [],\n    // Topology\n    topology: topology,\n    // Options\n    options: options,\n    // Logger instance\n    logger: Logger('Db', options),\n    // Get the bson parser\n    bson: topology ? topology.bson : null,\n    // Unpack read preference\n    readPreference: ReadPreference.fromOptions(options),\n    // Set buffermaxEntries\n    bufferMaxEntries: typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : -1,\n    // Parent db (if chained)\n    parentDb: options.parentDb || null,\n    // Set up the primary key factory or fallback to ObjectID\n    pkFactory: options.pkFactory || ObjectID,\n    // Get native parser\n    nativeParser: options.nativeParser || options.native_parser,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // No listener\n    noListener: typeof options.noListener === 'boolean' ? options.noListener : false,\n    // ReadConcern\n    readConcern: ReadConcern.fromOptions(options),\n    writeConcern: WriteConcern.fromOptions(options),\n    // Namespace\n    namespace: new MongoDBNamespace(databaseName)\n  };\n\n  // Ensure we have a valid db name\n  validateDatabaseName(databaseName);\n\n  // Add a read Only property\n  getSingleProperty(this, 'serverConfig', this.s.topology);\n  getSingleProperty(this, 'bufferMaxEntries', this.s.bufferMaxEntries);\n  getSingleProperty(this, 'databaseName', this.s.namespace.db);\n\n  // This is a child db, do not register any listeners\n  if (options.parentDb) return;\n  if (this.s.noListener) return;\n\n  // Add listeners\n  topology.on('error', createListener(this, 'error', this));\n  topology.on('timeout', createListener(this, 'timeout', this));\n  topology.on('close', createListener(this, 'close', this));\n  topology.on('parseError', createListener(this, 'parseError', this));\n  topology.once('open', createListener(this, 'open', this));\n  topology.once('fullsetup', createListener(this, 'fullsetup', this));\n  topology.once('all', createListener(this, 'all', this));\n  topology.on('reconnect', createListener(this, 'reconnect', this));\n}\n\ninherits(Db, EventEmitter);\n\nDb.prototype.on = deprecate(function() {\n  return Db.super_.prototype.on.apply(this, arguments);\n}, 'Listening to events on the Db class has been deprecated and will be removed in the next major version.');\n\nDb.prototype.once = deprecate(function() {\n  return Db.super_.prototype.once.apply(this, arguments);\n}, 'Listening to events on the Db class has been deprecated and will be removed in the next major version.');\n\n// Topology\nObject.defineProperty(Db.prototype, 'topology', {\n  enumerable: true,\n  get: function() {\n    return this.s.topology;\n  }\n});\n\n// Options\nObject.defineProperty(Db.prototype, 'options', {\n  enumerable: true,\n  get: function() {\n    return this.s.options;\n  }\n});\n\n// slaveOk specified\nObject.defineProperty(Db.prototype, 'slaveOk', {\n  enumerable: true,\n  get: function() {\n    if (\n      this.s.options.readPreference != null &&\n      (this.s.options.readPreference !== 'primary' ||\n        this.s.options.readPreference.mode !== 'primary')\n    ) {\n      return true;\n    }\n    return false;\n  }\n});\n\nObject.defineProperty(Db.prototype, 'readConcern', {\n  enumerable: true,\n  get: function() {\n    return this.s.readConcern;\n  }\n});\n\nObject.defineProperty(Db.prototype, 'readPreference', {\n  enumerable: true,\n  get: function() {\n    if (this.s.readPreference == null) {\n      // TODO: check client\n      return ReadPreference.primary;\n    }\n\n    return this.s.readPreference;\n  }\n});\n\n// get the write Concern\nObject.defineProperty(Db.prototype, 'writeConcern', {\n  enumerable: true,\n  get: function() {\n    return this.s.writeConcern;\n  }\n});\n\nObject.defineProperty(Db.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    return this.s.namespace.toString();\n  }\n});\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.command = function(command, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  const commandOperation = new RunCommandOperation(this, command, options);\n\n  return executeOperation(this.s.topology, commandOperation, callback);\n};\n\n/**\n * Execute an aggregation framework pipeline against the database, needs MongoDB >= 3.6\n * @method\n * @param {object} [pipeline=[]] Array containing all the aggregation framework commands for the execution.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.cursor] Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n * @param {number} [options.cursor.batchSize=1000] Deprecated. Use `options.batchSize`\n * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output.\n * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).\n * @param {number} [options.maxTimeMS] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {string} [options.comment] Add a comment to an aggregation command\n * @param {string|object} [options.hint] Add an index selection hint to an aggregation command\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Database~aggregationCallback} callback The command result callback\n * @return {(null|AggregationCursor)}\n */\nDb.prototype.aggregate = function(pipeline, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // If we have no options or callback we are doing\n  // a cursor based aggregation\n  if (options == null && callback == null) {\n    options = {};\n  }\n\n  const cursor = new AggregationCursor(\n    this.s.topology,\n    new AggregateOperation(this, pipeline, options),\n    options\n  );\n\n  // TODO: remove this when NODE-2074 is resolved\n  if (typeof callback === 'function') {\n    callback(null, cursor);\n    return;\n  }\n\n  return cursor;\n};\n\n/**\n * Return the Admin db instance\n * @method\n * @return {Admin} return the new Admin db instance\n */\nDb.prototype.admin = function() {\n  const Admin = require('./admin');\n\n  return new Admin(this, this.s.topology, this.s.promiseLibrary);\n};\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Db~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * The callback format for an aggregation call\n * @callback Database~aggregationCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {AggregationCursor} cursor The cursor if the aggregation command was executed successfully.\n */\n\nconst collectionKeys = [\n  'pkFactory',\n  'readPreference',\n  'serializeFunctions',\n  'strict',\n  'readConcern',\n  'ignoreUndefined',\n  'promoteValues',\n  'promoteBuffers',\n  'promoteLongs'\n];\n\n/**\n * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you\n * can use it without a callback in the following way: `const collection = db.collection('mycollection');`\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {object} [options.readConcern] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {ReadConcernLevel} [options.readConcern.level='local'] Specify a read concern level for the collection operations (only MongoDB 3.2 or higher supported)\n * @param {Db~collectionResultCallback} [callback] The collection result callback\n * @return {Collection} return the new Collection instance if not in strict mode\n */\nDb.prototype.collection = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  options = Object.assign({}, options);\n\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // If we have not set a collection level readConcern set the db level one\n  options.readConcern = options.readConcern\n    ? new ReadConcern(options.readConcern.level)\n    : this.readConcern;\n\n  // Do we have ignoreUndefined set\n  if (this.s.options.ignoreUndefined) {\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Merge in all needed options and ensure correct writeConcern merging from db level\n  options = mergeOptionsAndWriteConcern(options, this.s.options, collectionKeys, true);\n\n  // Execute\n  if (options == null || !options.strict) {\n    try {\n      const collection = new Collection(\n        this,\n        this.s.topology,\n        this.databaseName,\n        name,\n        this.s.pkFactory,\n        options\n      );\n      if (callback) callback(null, collection);\n      return collection;\n    } catch (err) {\n      if (err instanceof MongoError && callback) return callback(err);\n      throw err;\n    }\n  }\n\n  // Strict mode\n  if (typeof callback !== 'function') {\n    throw toError(`A callback is required in strict mode. While getting collection ${name}`);\n  }\n\n  // Did the user destroy the topology\n  if (this.serverConfig && this.serverConfig.isDestroyed()) {\n    return callback(new MongoError('topology was destroyed'));\n  }\n\n  const listCollectionOptions = Object.assign({}, options, { nameOnly: true });\n\n  // Strict mode\n  this.listCollections({ name: name }, listCollectionOptions).toArray((err, collections) => {\n    if (err != null) return handleCallback(callback, err, null);\n    if (collections.length === 0)\n      return handleCallback(\n        callback,\n        toError(`Collection ${name} does not exist. Currently in strict mode.`),\n        null\n      );\n\n    try {\n      return handleCallback(\n        callback,\n        null,\n        new Collection(this, this.s.topology, this.databaseName, name, this.s.pkFactory, options)\n      );\n    } catch (err) {\n      return handleCallback(callback, err, null);\n    }\n  });\n};\n\n/**\n * Create a new collection on a server with the specified options. Use this to create capped collections.\n * More information about command options available at https://docs.mongodb.com/manual/reference/command/create/\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] DEPRECATED: Returns an error if the collection does not exist\n * @param {boolean} [options.capped=false] Create a capped collection.\n * @param {boolean} [options.autoIndexId=true] DEPRECATED: Create an index on the _id field of the document, True by default on MongoDB 2.6 - 3.0\n * @param {number} [options.size] The size of the capped collection in bytes.\n * @param {number} [options.max] The maximum number of documents in the capped collection.\n * @param {number} [options.flags] Optional. Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag.\n * @param {object} [options.storageEngine] Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection on MongoDB 3.0 or higher.\n * @param {object} [options.validator] Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation on MongoDB 3.2 or higher.\n * @param {string} [options.validationLevel] Determines how strictly MongoDB applies the validation rules to existing documents during an update on MongoDB 3.2 or higher.\n * @param {string} [options.validationAction] Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted on MongoDB 3.2 or higher.\n * @param {object} [options.indexOptionDefaults] Allows users to specify a default configuration for indexes when creating a collection on MongoDB 3.2 or higher.\n * @param {string} [options.viewOn] The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create on MongoDB 3.4 or higher.\n * @param {array} [options.pipeline] An array that consists of the aggregation pipeline stage. Creates the view by applying the specified pipeline to the viewOn collection or view on MongoDB 3.4 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createCollection = deprecateOptions(\n  {\n    name: 'Db.createCollection',\n    deprecatedOptions: ['autoIndexId', 'strict', 'w', 'wtimeout', 'j'],\n    optionsIndex: 1\n  },\n  function(name, options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n    options.promiseLibrary = options.promiseLibrary || this.s.promiseLibrary;\n    options.readConcern = options.readConcern\n      ? new ReadConcern(options.readConcern.level)\n      : this.readConcern;\n    const createCollectionOperation = new CreateCollectionOperation(this, name, options);\n\n    return executeOperation(this.s.topology, createCollectionOperation, callback);\n  }\n);\n\n/**\n * Get all the db statistics.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {number} [options.scale] Divide the returned sizes by scale value.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.stats = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Build command object\n  const commandObject = { dbStats: true };\n  // Check if we have the scale value\n  if (options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  // If we have a readPreference set\n  if (options.readPreference == null && this.s.readPreference) {\n    options.readPreference = this.s.readPreference;\n  }\n\n  const statsOperation = new CommandOperation(this, options, null, commandObject);\n\n  // Execute the command\n  return executeOperation(this.s.topology, statsOperation, callback);\n};\n\n/**\n * Get the list of all collection information for the specified db.\n *\n * @method\n * @param {object} [filter={}] Query to filter collections by\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.nameOnly=false] Since 4.0: If true, will only return the collection name in the response, and will omit additional info\n * @param {number} [options.batchSize=1000] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {CommandCursor}\n */\nDb.prototype.listCollections = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  return new CommandCursor(\n    this.s.topology,\n    new ListCollectionsOperation(this, filter, options),\n    options\n  );\n};\n\n/**\n * Evaluate JavaScript on the server\n *\n * @method\n * @param {Code} code JavaScript to execute on server.\n * @param {(object|array)} parameters The parameters for the call.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.nolock=false] Tell MongoDB not to block on the evaluation of the javascript.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @deprecated Eval is deprecated on MongoDB 3.2 and forward\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.eval = deprecate(function(code, parameters, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  parameters = args.length ? args.shift() : parameters;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeLegacyOperation(this.s.topology, evaluate, [\n    this,\n    code,\n    parameters,\n    options,\n    callback\n  ]);\n}, 'Db.eval is deprecated as of MongoDB version 3.2');\n\n/**\n * Rename a collection.\n *\n * @method\n * @param {string} fromCollection Name of current collection to rename.\n * @param {string} toCollection New name of of the collection.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options, { readPreference: ReadPreference.PRIMARY });\n\n  // Add return new collection\n  options.new_collection = true;\n\n  const renameOperation = new RenameOperation(\n    this.collection(fromCollection),\n    toCollection,\n    options\n  );\n\n  return executeOperation(this.s.topology, renameOperation, callback);\n};\n\n/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {string} name Name of collection to drop\n * @param {Object} [options] Optional settings\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropCollection = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const dropCollectionOperation = new DropCollectionOperation(this, name, options);\n\n  return executeOperation(this.s.topology, dropCollectionOperation, callback);\n};\n\n/**\n * Drop a database, removing it permanently from the server.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropDatabase = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const dropDatabaseOperation = new DropDatabaseOperation(this, options);\n\n  return executeOperation(this.s.topology, dropDatabaseOperation, callback);\n};\n\n/**\n * Fetch all collections for the current db.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionsResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.collections = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const collectionsOperation = new CollectionsOperation(this, options);\n\n  return executeOperation(this.s.topology, collectionsOperation, callback);\n};\n\n/**\n * Runs a command on the database as admin.\n * @method\n * @param {object} command The command hash\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.executeDbAdminCommand = function(selector, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  options.readPreference = ReadPreference.resolve(this, options);\n\n  const executeDbAdminCommandOperation = new ExecuteDbAdminCommandOperation(\n    this,\n    selector,\n    options\n  );\n\n  return executeOperation(this.s.topology, executeDbAdminCommandOperation, callback);\n};\n\n/**\n * Creates an index on the db and collection.\n * @method\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {string} [options.name] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {(number|string)} [options.commitQuorum] (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createIndex = function(name, fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? Object.assign({}, options) : {};\n\n  const createIndexesOperation = new CreateIndexesOperation(this, name, fieldOrSpec, options);\n\n  return executeOperation(this.s.topology, createIndexesOperation, callback);\n};\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated since version 2.0\n * @param {string} name The index name\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.ensureIndex = deprecate(function(name, fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.s.topology, ensureIndex, [\n    this,\n    name,\n    fieldOrSpec,\n    options,\n    callback\n  ]);\n}, 'Db.ensureIndex is deprecated as of MongoDB version 3.0 / driver version 2.0');\n\nDb.prototype.addChild = function(db) {\n  if (this.s.parentDb) return this.s.parentDb.addChild(db);\n  this.s.children.push(db);\n};\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {object} [options.customData] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.addUser = function(username, password, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Special case where there is no password ($external users)\n  if (typeof username === 'string' && password != null && typeof password === 'object') {\n    options = password;\n    password = null;\n  }\n\n  const addUserOperation = new AddUserOperation(this, username, password, options);\n\n  return executeOperation(this.s.topology, addUserOperation, callback);\n};\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.removeUser = function(username, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const removeUserOperation = new RemoveUserOperation(this, username, options);\n\n  return executeOperation(this.s.topology, removeUserOperation, callback);\n};\n\n/**\n * Set the current profiling level of MongoDB\n *\n * @param {string} level The new profiling level (off, slow_only, all).\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.setProfilingLevel = function(level, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const setProfilingLevelOperation = new SetProfilingLevelOperation(this, level, options);\n\n  return executeOperation(this.s.topology, setProfilingLevelOperation, callback);\n};\n\n/**\n * Retrieve the current profiling information for MongoDB\n *\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Query the system.profile collection directly.\n */\nDb.prototype.profilingInfo = deprecate(function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.s.topology, profilingInfo, [this, options, callback]);\n}, 'Db.profilingInfo is deprecated. Query the system.profile collection directly.');\n\n/**\n * Retrieve the current profiling Level for MongoDB\n *\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.profilingLevel = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const profilingLevelOperation = new ProfilingLevelOperation(this, options);\n\n  return executeOperation(this.s.topology, profilingLevelOperation, callback);\n};\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {string} name The name of the collection.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.indexInformation = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const indexInformationOperation = new IndexInformationOperation(this, name, options);\n\n  return executeOperation(this.s.topology, indexInformationOperation, callback);\n};\n\n/**\n * Unref all sockets\n * @method\n */\nDb.prototype.unref = function() {\n  this.s.topology.unref();\n};\n\n/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this database. Will ignore all changes to system collections.\n * @method\n * @since 3.1.0\n * @param {Array} [pipeline] An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n * @param {object} [options] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {object} [options.resumeAfter] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {number} [options.batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference] The read preference. Defaults to the read preference of the database. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @param {Timestamp} [options.startAtOperationTime] receive change events that occur after the specified timestamp\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {ChangeStream} a ChangeStream instance.\n */\nDb.prototype.watch = function(pipeline, options) {\n  pipeline = pipeline || [];\n  options = options || {};\n\n  // Allow optionally not specifying a pipeline\n  if (!Array.isArray(pipeline)) {\n    options = pipeline;\n    pipeline = [];\n  }\n\n  return new ChangeStream(this, pipeline, options);\n};\n\n/**\n * Return the db logger\n * @method\n * @return {Logger} return the db logger\n * @ignore\n */\nDb.prototype.getLogger = function() {\n  return this.s.logger;\n};\n\n/**\n * Db close event\n *\n * Emitted after a socket closed against a single server or mongos proxy.\n *\n * @event Db#close\n * @type {MongoError}\n */\n\n/**\n * Db reconnect event\n *\n *  * Server: Emitted when the driver has reconnected and re-authenticated.\n *  * ReplicaSet: N/A\n *  * Mongos: Emitted when the driver reconnects and re-authenticates successfully against a Mongos.\n *\n * @event Db#reconnect\n * @type {object}\n */\n\n/**\n * Db error event\n *\n * Emitted after an error occurred against a single server or mongos proxy.\n *\n * @event Db#error\n * @type {MongoError}\n */\n\n/**\n * Db timeout event\n *\n * Emitted after a socket timeout occurred against a single server or mongos proxy.\n *\n * @event Db#timeout\n * @type {MongoError}\n */\n\n/**\n * Db parseError event\n *\n * The parseError event is emitted if the driver detects illegal or corrupt BSON being received from the server.\n *\n * @event Db#parseError\n * @type {MongoError}\n */\n\n/**\n * Db fullsetup event, emitted when all servers in the topology have been connected to at start up time.\n *\n * * Server: Emitted when the driver has connected to the single server and has authenticated.\n * * ReplSet: Emitted after the driver has attempted to connect to all replicaset members.\n * * Mongos: Emitted after the driver has attempted to connect to all mongos proxies.\n *\n * @event Db#fullsetup\n * @type {Db}\n */\n\n// Constants\nDb.SYSTEM_NAMESPACE_COLLECTION = CONSTANTS.SYSTEM_NAMESPACE_COLLECTION;\nDb.SYSTEM_INDEX_COLLECTION = CONSTANTS.SYSTEM_INDEX_COLLECTION;\nDb.SYSTEM_PROFILE_COLLECTION = CONSTANTS.SYSTEM_PROFILE_COLLECTION;\nDb.SYSTEM_USER_COLLECTION = CONSTANTS.SYSTEM_USER_COLLECTION;\nDb.SYSTEM_COMMAND_COLLECTION = CONSTANTS.SYSTEM_COMMAND_COLLECTION;\nDb.SYSTEM_JS_COLLECTION = CONSTANTS.SYSTEM_JS_COLLECTION;\n\nmodule.exports = Db;\n","'use strict';\n\nlet collection;\nlet cursor;\nlet db;\n\nfunction loadCollection() {\n  if (!collection) {\n    collection = require('./collection');\n  }\n  return collection;\n}\n\nfunction loadCursor() {\n  if (!cursor) {\n    cursor = require('./cursor');\n  }\n  return cursor;\n}\n\nfunction loadDb() {\n  if (!db) {\n    db = require('./db');\n  }\n  return db;\n}\n\nmodule.exports = {\n  loadCollection,\n  loadCursor,\n  loadDb\n};\n","'use strict';\n\nconst MongoNetworkError = require('./core').MongoNetworkError;\n\n// From spec@https://github.com/mongodb/specifications/blob/f93d78191f3db2898a59013a7ed5650352ef6da8/source/change-streams/change-streams.rst#resumable-error\nconst GET_MORE_RESUMABLE_CODES = new Set([\n  6, // HostUnreachable\n  7, // HostNotFound\n  89, // NetworkTimeout\n  91, // ShutdownInProgress\n  189, // PrimarySteppedDown\n  262, // ExceededTimeLimit\n  9001, // SocketException\n  10107, // NotMaster\n  11600, // InterruptedAtShutdown\n  11602, // InterruptedDueToReplStateChange\n  13435, // NotMasterNoSlaveOk\n  13436, // NotMasterOrSecondary\n  63, // StaleShardVersion\n  150, // StaleEpoch\n  13388, // StaleConfig\n  234, // RetryChangeStream\n  133, // FailedToSatisfyReadPreference\n  43 // CursorNotFound\n]);\n\nfunction isResumableError(error, wireVersion) {\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  if (wireVersion >= 9) {\n    // DRIVERS-1308: For 4.4 drivers running against 4.4 servers, drivers will add a special case to treat the CursorNotFound error code as resumable\n    if (error.code === 43) {\n      return true;\n    }\n    return error.hasErrorLabel('ResumableChangeStreamError');\n  }\n\n  return GET_MORE_RESUMABLE_CODES.has(error.code);\n}\n\nmodule.exports = { GET_MORE_RESUMABLE_CODES, isResumableError };\n","'use strict';\n\nconst MongoError = require('./core/error').MongoError;\n\nconst ExplainVerbosity = {\n  queryPlanner: 'queryPlanner',\n  queryPlannerExtended: 'queryPlannerExtended',\n  executionStats: 'executionStats',\n  allPlansExecution: 'allPlansExecution'\n};\n\n/**\n * @class\n * @property {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'} verbosity The verbosity mode for the explain output.\n */\nclass Explain {\n  /**\n   * Constructs an Explain from the explain verbosity.\n   *\n   * For backwards compatibility, true is interpreted as \"allPlansExecution\"\n   * and false as \"queryPlanner\". Prior to server version 3.6, aggregate()\n   * ignores the verbosity parameter and executes in \"queryPlanner\".\n   *\n   * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [verbosity] The verbosity mode for the explain output.\n   */\n  constructor(verbosity) {\n    if (typeof verbosity === 'boolean') {\n      this.verbosity = verbosity ? 'allPlansExecution' : 'queryPlanner';\n    } else {\n      this.verbosity = verbosity;\n    }\n  }\n\n  /**\n   * Construct an Explain given an options object.\n   *\n   * @param {object} [options] The options object from which to extract the explain.\n   * @param {'queryPlanner'|'queryPlannerExtended'|'executionStats'|'allPlansExecution'|boolean} [options.explain] The verbosity mode for the explain output\n   * @return {Explain}\n   */\n  static fromOptions(options) {\n    if (options == null || options.explain === undefined) {\n      return;\n    }\n\n    const explain = options.explain;\n    if (typeof explain === 'boolean' || explain in ExplainVerbosity) {\n      return new Explain(options.explain);\n    }\n\n    throw new MongoError(`explain must be one of ${Object.keys(ExplainVerbosity)} or a boolean`);\n  }\n}\n\nmodule.exports = { Explain };\n","'use strict';\n\nvar stream = require('stream'),\n  util = require('util');\n\nmodule.exports = GridFSBucketReadStream;\n\n/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n *\n * @class\n * @extends external:Readable\n * @param {Collection} chunks Handle for chunks collection\n * @param {Collection} files Handle for files collection\n * @param {Object} readPreference The read preference to use\n * @param {Object} filter The query to use to find the file document\n * @param {Object} [options] Optional settings.\n * @param {Number} [options.sort] Optional sort for the file find query\n * @param {Number} [options.skip] Optional skip for the file find query\n * @param {Number} [options.start] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end] Optional 0-based offset in bytes to stop streaming before\n * @fires GridFSBucketReadStream#error\n * @fires GridFSBucketReadStream#file\n */\nfunction GridFSBucketReadStream(chunks, files, readPreference, filter, options) {\n  this.s = {\n    bytesRead: 0,\n    chunks: chunks,\n    cursor: null,\n    expected: 0,\n    files: files,\n    filter: filter,\n    init: false,\n    expectedEnd: 0,\n    file: null,\n    options: options,\n    readPreference: readPreference\n  };\n\n  stream.Readable.call(this);\n}\n\nutil.inherits(GridFSBucketReadStream, stream.Readable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketReadStream#error\n * @type {Error}\n */\n\n/**\n * Fires when the stream loaded the file document corresponding to the\n * provided id.\n *\n * @event GridFSBucketReadStream#file\n * @type {object}\n */\n\n/**\n * Emitted when a chunk of data is available to be consumed.\n *\n * @event GridFSBucketReadStream#data\n * @type {object}\n */\n\n/**\n * Fired when the stream is exhausted (no more data events).\n *\n * @event GridFSBucketReadStream#end\n * @type {object}\n */\n\n/**\n * Fired when the stream is exhausted and the underlying cursor is killed\n *\n * @event GridFSBucketReadStream#close\n * @type {object}\n */\n\n/**\n * Reads from the cursor and pushes to the stream.\n * Private Impl, do not call directly\n * @ignore\n * @method\n */\n\nGridFSBucketReadStream.prototype._read = function() {\n  var _this = this;\n  if (this.destroyed) {\n    return;\n  }\n\n  waitForFile(_this, function() {\n    doRead(_this);\n  });\n};\n\n/**\n * Sets the 0-based offset in bytes to start streaming from. Throws\n * an error if this stream has entered flowing mode\n * (e.g. if you've already called `on('data')`)\n * @method\n * @param {Number} start Offset in bytes to start reading at\n * @return {GridFSBucketReadStream} Reference to Self\n */\n\nGridFSBucketReadStream.prototype.start = function(start) {\n  throwIfInitialized(this);\n  this.s.options.start = start;\n  return this;\n};\n\n/**\n * Sets the 0-based offset in bytes to start streaming from. Throws\n * an error if this stream has entered flowing mode\n * (e.g. if you've already called `on('data')`)\n * @method\n * @param {Number} end Offset in bytes to stop reading at\n * @return {GridFSBucketReadStream} Reference to self\n */\n\nGridFSBucketReadStream.prototype.end = function(end) {\n  throwIfInitialized(this);\n  this.s.options.end = end;\n  return this;\n};\n\n/**\n * Marks this stream as aborted (will never push another `data` event)\n * and kills the underlying cursor. Will emit the 'end' event, and then\n * the 'close' event once the cursor is successfully killed.\n *\n * @method\n * @param {GridFSBucket~errorCallback} [callback] called when the cursor is successfully closed or an error occurred.\n * @fires GridFSBucketWriteStream#close\n * @fires GridFSBucketWriteStream#end\n */\n\nGridFSBucketReadStream.prototype.abort = function(callback) {\n  var _this = this;\n  this.push(null);\n  this.destroyed = true;\n  if (this.s.cursor) {\n    this.s.cursor.close(function(error) {\n      _this.emit('close');\n      callback && callback(error);\n    });\n  } else {\n    if (!this.s.init) {\n      // If not initialized, fire close event because we will never\n      // get a cursor\n      _this.emit('close');\n    }\n    callback && callback();\n  }\n};\n\n/**\n * @ignore\n */\n\nfunction throwIfInitialized(self) {\n  if (self.s.init) {\n    throw new Error('You cannot change options after the stream has entered' + 'flowing mode!');\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction doRead(_this) {\n  if (_this.destroyed) {\n    return;\n  }\n\n  _this.s.cursor.next(function(error, doc) {\n    if (_this.destroyed) {\n      return;\n    }\n    if (error) {\n      return __handleError(_this, error);\n    }\n    if (!doc) {\n      _this.push(null);\n\n      process.nextTick(() => {\n        _this.s.cursor.close(function(error) {\n          if (error) {\n            __handleError(_this, error);\n            return;\n          }\n\n          _this.emit('close');\n        });\n      });\n\n      return;\n    }\n\n    var bytesRemaining = _this.s.file.length - _this.s.bytesRead;\n    var expectedN = _this.s.expected++;\n    var expectedLength = Math.min(_this.s.file.chunkSize, bytesRemaining);\n\n    if (doc.n > expectedN) {\n      var errmsg = 'ChunkIsMissing: Got unexpected n: ' + doc.n + ', expected: ' + expectedN;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    if (doc.n < expectedN) {\n      errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n + ', expected: ' + expectedN;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    var buf = Buffer.isBuffer(doc.data) ? doc.data : doc.data.buffer;\n\n    if (buf.length !== expectedLength) {\n      if (bytesRemaining <= 0) {\n        errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n;\n        return __handleError(_this, new Error(errmsg));\n      }\n\n      errmsg =\n        'ChunkIsWrongSize: Got unexpected length: ' + buf.length + ', expected: ' + expectedLength;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    _this.s.bytesRead += buf.length;\n\n    if (buf.length === 0) {\n      return _this.push(null);\n    }\n\n    var sliceStart = null;\n    var sliceEnd = null;\n\n    if (_this.s.bytesToSkip != null) {\n      sliceStart = _this.s.bytesToSkip;\n      _this.s.bytesToSkip = 0;\n    }\n\n    const atEndOfStream = expectedN === _this.s.expectedEnd - 1;\n    const bytesLeftToRead = _this.s.options.end - _this.s.bytesToSkip;\n    if (atEndOfStream && _this.s.bytesToTrim != null) {\n      sliceEnd = _this.s.file.chunkSize - _this.s.bytesToTrim;\n    } else if (_this.s.options.end && bytesLeftToRead < doc.data.length()) {\n      sliceEnd = bytesLeftToRead;\n    }\n\n    if (sliceStart != null || sliceEnd != null) {\n      buf = buf.slice(sliceStart || 0, sliceEnd || buf.length);\n    }\n\n    _this.push(buf);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction init(self) {\n  var findOneOptions = {};\n  if (self.s.readPreference) {\n    findOneOptions.readPreference = self.s.readPreference;\n  }\n  if (self.s.options && self.s.options.sort) {\n    findOneOptions.sort = self.s.options.sort;\n  }\n  if (self.s.options && self.s.options.skip) {\n    findOneOptions.skip = self.s.options.skip;\n  }\n\n  self.s.files.findOne(self.s.filter, findOneOptions, function(error, doc) {\n    if (error) {\n      return __handleError(self, error);\n    }\n\n    if (!doc) {\n      var identifier = self.s.filter._id ? self.s.filter._id.toString() : self.s.filter.filename;\n      var errmsg = 'FileNotFound: file ' + identifier + ' was not found';\n      var err = new Error(errmsg);\n      err.code = 'ENOENT';\n      return __handleError(self, err);\n    }\n\n    // If document is empty, kill the stream immediately and don't\n    // execute any reads\n    if (doc.length <= 0) {\n      self.push(null);\n      return;\n    }\n\n    if (self.destroyed) {\n      // If user destroys the stream before we have a cursor, wait\n      // until the query is done to say we're 'closed' because we can't\n      // cancel a query.\n      self.emit('close');\n      return;\n    }\n\n    try {\n      self.s.bytesToSkip = handleStartOption(self, doc, self.s.options);\n    } catch (error) {\n      return __handleError(self, error);\n    }\n\n    var filter = { files_id: doc._id };\n\n    // Currently (MongoDB 3.4.4) skip function does not support the index,\n    // it needs to retrieve all the documents first and then skip them. (CS-25811)\n    // As work around we use $gte on the \"n\" field.\n    if (self.s.options && self.s.options.start != null) {\n      var skip = Math.floor(self.s.options.start / doc.chunkSize);\n      if (skip > 0) {\n        filter['n'] = { $gte: skip };\n      }\n    }\n    self.s.cursor = self.s.chunks.find(filter).sort({ n: 1 });\n\n    if (self.s.readPreference) {\n      self.s.cursor.setReadPreference(self.s.readPreference);\n    }\n\n    self.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);\n    self.s.file = doc;\n\n    try {\n      self.s.bytesToTrim = handleEndOption(self, doc, self.s.cursor, self.s.options);\n    } catch (error) {\n      return __handleError(self, error);\n    }\n\n    self.emit('file', doc);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction waitForFile(_this, callback) {\n  if (_this.s.file) {\n    return callback();\n  }\n\n  if (!_this.s.init) {\n    init(_this);\n    _this.s.init = true;\n  }\n\n  _this.once('file', function() {\n    callback();\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction handleStartOption(stream, doc, options) {\n  if (options && options.start != null) {\n    if (options.start > doc.length) {\n      throw new Error(\n        'Stream start (' +\n          options.start +\n          ') must not be ' +\n          'more than the length of the file (' +\n          doc.length +\n          ')'\n      );\n    }\n    if (options.start < 0) {\n      throw new Error('Stream start (' + options.start + ') must not be ' + 'negative');\n    }\n    if (options.end != null && options.end < options.start) {\n      throw new Error(\n        'Stream start (' +\n          options.start +\n          ') must not be ' +\n          'greater than stream end (' +\n          options.end +\n          ')'\n      );\n    }\n\n    stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) * doc.chunkSize;\n    stream.s.expected = Math.floor(options.start / doc.chunkSize);\n\n    return options.start - stream.s.bytesRead;\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction handleEndOption(stream, doc, cursor, options) {\n  if (options && options.end != null) {\n    if (options.end > doc.length) {\n      throw new Error(\n        'Stream end (' +\n          options.end +\n          ') must not be ' +\n          'more than the length of the file (' +\n          doc.length +\n          ')'\n      );\n    }\n    if (options.start < 0) {\n      throw new Error('Stream end (' + options.end + ') must not be ' + 'negative');\n    }\n\n    var start = options.start != null ? Math.floor(options.start / doc.chunkSize) : 0;\n\n    cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);\n\n    stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);\n\n    return Math.ceil(options.end / doc.chunkSize) * doc.chunkSize - options.end;\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error) {\n  _this.emit('error', error);\n}\n","'use strict';\n\nvar Emitter = require('events').EventEmitter;\nvar GridFSBucketReadStream = require('./download');\nvar GridFSBucketWriteStream = require('./upload');\nvar shallowClone = require('../utils').shallowClone;\nvar toError = require('../utils').toError;\nvar util = require('util');\nvar executeLegacyOperation = require('../utils').executeLegacyOperation;\n\nvar DEFAULT_GRIDFS_BUCKET_OPTIONS = {\n  bucketName: 'fs',\n  chunkSizeBytes: 255 * 1024\n};\n\nmodule.exports = GridFSBucket;\n\n/**\n * Constructor for a streaming GridFS interface\n * @class\n * @extends external:EventEmitter\n * @param {Db} db A db handle\n * @param {object} [options] Optional settings.\n * @param {string} [options.bucketName=\"fs\"] The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot.\n * @param {number} [options.chunkSizeBytes=255 * 1024] Number of bytes stored in each chunk. Defaults to 255KB\n * @param {object} [options.writeConcern] Optional write concern to be passed to write operations, for instance `{ w: 1 }`\n * @param {object} [options.readPreference] Optional read preference to be passed to read operations\n * @fires GridFSBucketWriteStream#index\n */\n\nfunction GridFSBucket(db, options) {\n  Emitter.apply(this);\n  this.setMaxListeners(0);\n\n  if (options && typeof options === 'object') {\n    options = shallowClone(options);\n    var keys = Object.keys(DEFAULT_GRIDFS_BUCKET_OPTIONS);\n    for (var i = 0; i < keys.length; ++i) {\n      if (!options[keys[i]]) {\n        options[keys[i]] = DEFAULT_GRIDFS_BUCKET_OPTIONS[keys[i]];\n      }\n    }\n  } else {\n    options = DEFAULT_GRIDFS_BUCKET_OPTIONS;\n  }\n\n  this.s = {\n    db: db,\n    options: options,\n    _chunksCollection: db.collection(options.bucketName + '.chunks'),\n    _filesCollection: db.collection(options.bucketName + '.files'),\n    checkedIndexes: false,\n    calledOpenUploadStream: false,\n    promiseLibrary: db.s.promiseLibrary || Promise\n  };\n}\n\nutil.inherits(GridFSBucket, Emitter);\n\n/**\n * When the first call to openUploadStream is made, the upload stream will\n * check to see if it needs to create the proper indexes on the chunks and\n * files collections. This event is fired either when 1) it determines that\n * no index creation is necessary, 2) when it successfully creates the\n * necessary indexes.\n *\n * @event GridFSBucket#index\n * @type {Error}\n */\n\n/**\n * Returns a writable stream (GridFSBucketWriteStream) for writing\n * buffers to GridFS. The stream's 'id' property contains the resulting\n * file's id.\n * @method\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options] Optional settings.\n * @param {number} [options.chunkSizeBytes] Optional overwrite this bucket's chunkSizeBytes for this file\n * @param {object} [options.metadata] Optional object to store in the file document's `metadata` field\n * @param {string} [options.contentType] Optional string to store in the file document's `contentType` field\n * @param {array} [options.aliases] Optional array of strings to store in the file document's `aliases` field\n * @param {boolean} [options.disableMD5=false] If true, disables adding an md5 field to file data\n * @return {GridFSBucketWriteStream}\n */\n\nGridFSBucket.prototype.openUploadStream = function(filename, options) {\n  if (options) {\n    options = shallowClone(options);\n  } else {\n    options = {};\n  }\n  if (!options.chunkSizeBytes) {\n    options.chunkSizeBytes = this.s.options.chunkSizeBytes;\n  }\n  return new GridFSBucketWriteStream(this, filename, options);\n};\n\n/**\n * Returns a writable stream (GridFSBucketWriteStream) for writing\n * buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting\n * file's id.\n * @method\n * @param {string|number|object} id A custom id used to identify the file\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options] Optional settings.\n * @param {number} [options.chunkSizeBytes] Optional overwrite this bucket's chunkSizeBytes for this file\n * @param {object} [options.metadata] Optional object to store in the file document's `metadata` field\n * @param {string} [options.contentType] Optional string to store in the file document's `contentType` field\n * @param {array} [options.aliases] Optional array of strings to store in the file document's `aliases` field\n * @param {boolean} [options.disableMD5=false] If true, disables adding an md5 field to file data\n * @return {GridFSBucketWriteStream}\n */\n\nGridFSBucket.prototype.openUploadStreamWithId = function(id, filename, options) {\n  if (options) {\n    options = shallowClone(options);\n  } else {\n    options = {};\n  }\n\n  if (!options.chunkSizeBytes) {\n    options.chunkSizeBytes = this.s.options.chunkSizeBytes;\n  }\n\n  options.id = id;\n\n  return new GridFSBucketWriteStream(this, filename, options);\n};\n\n/**\n * Returns a readable stream (GridFSBucketReadStream) for streaming file\n * data from GridFS.\n * @method\n * @param {ObjectId} id The id of the file doc\n * @param {Object} [options] Optional settings.\n * @param {Number} [options.start] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end] Optional 0-based offset in bytes to stop streaming before\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucket.prototype.openDownloadStream = function(id, options) {\n  var filter = { _id: id };\n  options = {\n    start: options && options.start,\n    end: options && options.end\n  };\n\n  return new GridFSBucketReadStream(\n    this.s._chunksCollection,\n    this.s._filesCollection,\n    this.s.options.readPreference,\n    filter,\n    options\n  );\n};\n\n/**\n * Deletes a file with the given id\n * @method\n * @param {ObjectId} id The id of the file doc\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.delete = function(id, callback) {\n  return executeLegacyOperation(this.s.db.s.topology, _delete, [this, id, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction _delete(_this, id, callback) {\n  _this.s._filesCollection.deleteOne({ _id: id }, function(error, res) {\n    if (error) {\n      return callback(error);\n    }\n\n    _this.s._chunksCollection.deleteMany({ files_id: id }, function(error) {\n      if (error) {\n        return callback(error);\n      }\n\n      // Delete orphaned chunks before returning FileNotFound\n      if (!res.result.n) {\n        var errmsg = 'FileNotFound: no file with id ' + id + ' found';\n        return callback(new Error(errmsg));\n      }\n\n      callback();\n    });\n  });\n}\n\n/**\n * Convenience wrapper around find on the files collection\n * @method\n * @param {Object} filter\n * @param {Object} [options] Optional settings for cursor\n * @param {number} [options.batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/find|find command documentation}.\n * @param {number} [options.limit] Optional limit for cursor\n * @param {number} [options.maxTimeMS] Optional maxTimeMS for cursor\n * @param {boolean} [options.noCursorTimeout] Optionally set cursor's `noCursorTimeout` flag\n * @param {number} [options.skip] Optional skip for cursor\n * @param {object} [options.sort] Optional sort for cursor\n * @return {Cursor}\n */\n\nGridFSBucket.prototype.find = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  var cursor = this.s._filesCollection.find(filter);\n\n  if (options.batchSize != null) {\n    cursor.batchSize(options.batchSize);\n  }\n  if (options.limit != null) {\n    cursor.limit(options.limit);\n  }\n  if (options.maxTimeMS != null) {\n    cursor.maxTimeMS(options.maxTimeMS);\n  }\n  if (options.noCursorTimeout != null) {\n    cursor.addCursorFlag('noCursorTimeout', options.noCursorTimeout);\n  }\n  if (options.skip != null) {\n    cursor.skip(options.skip);\n  }\n  if (options.sort != null) {\n    cursor.sort(options.sort);\n  }\n\n  return cursor;\n};\n\n/**\n * Returns a readable stream (GridFSBucketReadStream) for streaming the\n * file with the given name from GridFS. If there are multiple files with\n * the same name, this will stream the most recent file with the given name\n * (as determined by the `uploadDate` field). You can set the `revision`\n * option to change this behavior.\n * @method\n * @param {String} filename The name of the file to stream\n * @param {Object} [options] Optional settings\n * @param {number} [options.revision=-1] The revision number relative to the oldest file with the given filename. 0 gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the newest.\n * @param {Number} [options.start] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end] Optional 0-based offset in bytes to stop streaming before\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucket.prototype.openDownloadStreamByName = function(filename, options) {\n  var sort = { uploadDate: -1 };\n  var skip = null;\n  if (options && options.revision != null) {\n    if (options.revision >= 0) {\n      sort = { uploadDate: 1 };\n      skip = options.revision;\n    } else {\n      skip = -options.revision - 1;\n    }\n  }\n\n  var filter = { filename: filename };\n  options = {\n    sort: sort,\n    skip: skip,\n    start: options && options.start,\n    end: options && options.end\n  };\n  return new GridFSBucketReadStream(\n    this.s._chunksCollection,\n    this.s._filesCollection,\n    this.s.options.readPreference,\n    filter,\n    options\n  );\n};\n\n/**\n * Renames the file with the given _id to the given string\n * @method\n * @param {ObjectId} id the id of the file to rename\n * @param {String} filename new name for the file\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.rename = function(id, filename, callback) {\n  return executeLegacyOperation(this.s.db.s.topology, _rename, [this, id, filename, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction _rename(_this, id, filename, callback) {\n  var filter = { _id: id };\n  var update = { $set: { filename: filename } };\n  _this.s._filesCollection.updateOne(filter, update, function(error, res) {\n    if (error) {\n      return callback(error);\n    }\n    if (!res.result.n) {\n      return callback(toError('File with id ' + id + ' not found'));\n    }\n    callback();\n  });\n}\n\n/**\n * Removes this bucket's files collection, followed by its chunks collection.\n * @method\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.drop = function(callback) {\n  return executeLegacyOperation(this.s.db.s.topology, _drop, [this, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * Return the db logger\n * @method\n * @return {Logger} return the db logger\n * @ignore\n */\nGridFSBucket.prototype.getLogger = function() {\n  return this.s.db.s.logger;\n};\n\n/**\n * @ignore\n */\n\nfunction _drop(_this, callback) {\n  _this.s._filesCollection.drop(function(error) {\n    if (error) {\n      return callback(error);\n    }\n    _this.s._chunksCollection.drop(function(error) {\n      if (error) {\n        return callback(error);\n      }\n\n      return callback();\n    });\n  });\n}\n\n/**\n * Callback format for all GridFSBucket methods that can accept a callback.\n * @callback GridFSBucket~errorCallback\n * @param {MongoError|undefined} error If present, an error instance representing any errors that occurred\n * @param {*} result If present, a returned result for the method\n */\n","'use strict';\n\nvar core = require('../core');\nvar crypto = require('crypto');\nvar stream = require('stream');\nvar util = require('util');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar ERROR_NAMESPACE_NOT_FOUND = 26;\n\nmodule.exports = GridFSBucketWriteStream;\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n *\n * @class\n * @extends external:Writable\n * @param {GridFSBucket} bucket Handle for this stream's corresponding bucket\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options] Optional settings.\n * @param {string|number|object} [options.id] Custom file id for the GridFS file.\n * @param {number} [options.chunkSizeBytes] The chunk size to use, in bytes\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.disableMD5=false] If true, disables adding an md5 field to file data\n * @fires GridFSBucketWriteStream#error\n * @fires GridFSBucketWriteStream#finish\n */\n\nfunction GridFSBucketWriteStream(bucket, filename, options) {\n  options = options || {};\n  stream.Writable.call(this, options);\n  this.bucket = bucket;\n  this.chunks = bucket.s._chunksCollection;\n  this.filename = filename;\n  this.files = bucket.s._filesCollection;\n  this.options = options;\n  // Signals the write is all done\n  this.done = false;\n\n  this.id = options.id ? options.id : core.BSON.ObjectId();\n  this.chunkSizeBytes = this.options.chunkSizeBytes;\n  this.bufToStore = Buffer.alloc(this.chunkSizeBytes);\n  this.length = 0;\n  this.md5 = !options.disableMD5 && crypto.createHash('md5');\n  this.n = 0;\n  this.pos = 0;\n  this.state = {\n    streamEnd: false,\n    outstandingRequests: 0,\n    errored: false,\n    aborted: false,\n    promiseLibrary: this.bucket.s.promiseLibrary\n  };\n\n  if (!this.bucket.s.calledOpenUploadStream) {\n    this.bucket.s.calledOpenUploadStream = true;\n\n    var _this = this;\n    checkIndexes(this, function() {\n      _this.bucket.s.checkedIndexes = true;\n      _this.bucket.emit('index');\n    });\n  }\n}\n\nutil.inherits(GridFSBucketWriteStream, stream.Writable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketWriteStream#error\n * @type {Error}\n */\n\n/**\n * `end()` was called and the write stream successfully wrote the file\n * metadata and all the chunks to MongoDB.\n *\n * @event GridFSBucketWriteStream#finish\n * @type {object}\n */\n\n/**\n * Write a buffer to the stream.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {GridFSBucket~errorCallback} callback Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n * @return {Boolean} False if this write required flushing a chunk to MongoDB. True otherwise.\n */\n\nGridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) {\n  var _this = this;\n  return waitForIndexes(this, function() {\n    return doWrite(_this, chunk, encoding, callback);\n  });\n};\n\n/**\n * Places this write stream into an aborted state (all future writes fail)\n * and deletes all chunks that have already been written.\n *\n * @method\n * @param {GridFSBucket~errorCallback} callback called when chunks are successfully removed or error occurred\n * @return {Promise} if no callback specified\n */\n\nGridFSBucketWriteStream.prototype.abort = function(callback) {\n  if (this.state.streamEnd) {\n    var error = new Error('Cannot abort a stream that has already completed');\n    if (typeof callback === 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  if (this.state.aborted) {\n    error = new Error('Cannot call abort() on a stream twice');\n    if (typeof callback === 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  this.state.aborted = true;\n  this.chunks.deleteMany({ files_id: this.id }, function(error) {\n    if (typeof callback === 'function') callback(error);\n  });\n};\n\n/**\n * Tells the stream that no more data will be coming in. The stream will\n * persist the remaining data to MongoDB, write the files document, and\n * then emit a 'finish' event.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {GridFSBucket~errorCallback} callback Function to call when all files and chunks have been persisted to MongoDB\n */\n\nGridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) {\n  var _this = this;\n  if (typeof chunk === 'function') {\n    (callback = chunk), (chunk = null), (encoding = null);\n  } else if (typeof encoding === 'function') {\n    (callback = encoding), (encoding = null);\n  }\n\n  if (checkAborted(this, callback)) {\n    return;\n  }\n  this.state.streamEnd = true;\n\n  if (callback) {\n    this.once('finish', function(result) {\n      callback(null, result);\n    });\n  }\n\n  if (!chunk) {\n    waitForIndexes(this, function() {\n      writeRemnant(_this);\n    });\n    return;\n  }\n\n  this.write(chunk, encoding, function() {\n    writeRemnant(_this);\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error, callback) {\n  if (_this.state.errored) {\n    return;\n  }\n  _this.state.errored = true;\n  if (callback) {\n    return callback(error);\n  }\n  _this.emit('error', error);\n}\n\n/**\n * @ignore\n */\n\nfunction createChunkDoc(filesId, n, data) {\n  return {\n    _id: core.BSON.ObjectId(),\n    files_id: filesId,\n    n: n,\n    data: data\n  };\n}\n\n/**\n * @ignore\n */\n\nfunction checkChunksIndex(_this, callback) {\n  _this.chunks.listIndexes().toArray(function(error, indexes) {\n    if (error) {\n      // Collection doesn't exist so create index\n      if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n        var index = { files_id: 1, n: 1 };\n        _this.chunks.createIndex(index, { background: false, unique: true }, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          callback();\n        });\n        return;\n      }\n      return callback(error);\n    }\n\n    var hasChunksIndex = false;\n    indexes.forEach(function(index) {\n      if (index.key) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.files_id === 1 && index.key.n === 1) {\n          hasChunksIndex = true;\n        }\n      }\n    });\n\n    if (hasChunksIndex) {\n      callback();\n    } else {\n      index = { files_id: 1, n: 1 };\n      var indexOptions = getWriteOptions(_this);\n\n      indexOptions.background = false;\n      indexOptions.unique = true;\n\n      _this.chunks.createIndex(index, indexOptions, function(error) {\n        if (error) {\n          return callback(error);\n        }\n\n        callback();\n      });\n    }\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkDone(_this, callback) {\n  if (_this.done) return true;\n  if (_this.state.streamEnd && _this.state.outstandingRequests === 0 && !_this.state.errored) {\n    // Set done so we dont' trigger duplicate createFilesDoc\n    _this.done = true;\n    // Create a new files doc\n    var filesDoc = createFilesDoc(\n      _this.id,\n      _this.length,\n      _this.chunkSizeBytes,\n      _this.md5 && _this.md5.digest('hex'),\n      _this.filename,\n      _this.options.contentType,\n      _this.options.aliases,\n      _this.options.metadata\n    );\n\n    if (checkAborted(_this, callback)) {\n      return false;\n    }\n\n    _this.files.insertOne(filesDoc, getWriteOptions(_this), function(error) {\n      if (error) {\n        return __handleError(_this, error, callback);\n      }\n      _this.emit('finish', filesDoc);\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction checkIndexes(_this, callback) {\n  _this.files.findOne({}, { _id: 1 }, function(error, doc) {\n    if (error) {\n      return callback(error);\n    }\n    if (doc) {\n      return callback();\n    }\n\n    _this.files.listIndexes().toArray(function(error, indexes) {\n      if (error) {\n        // Collection doesn't exist so create index\n        if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n          var index = { filename: 1, uploadDate: 1 };\n          _this.files.createIndex(index, { background: false }, function(error) {\n            if (error) {\n              return callback(error);\n            }\n\n            checkChunksIndex(_this, callback);\n          });\n          return;\n        }\n        return callback(error);\n      }\n\n      var hasFileIndex = false;\n      indexes.forEach(function(index) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.filename === 1 && index.key.uploadDate === 1) {\n          hasFileIndex = true;\n        }\n      });\n\n      if (hasFileIndex) {\n        checkChunksIndex(_this, callback);\n      } else {\n        index = { filename: 1, uploadDate: 1 };\n\n        var indexOptions = getWriteOptions(_this);\n\n        indexOptions.background = false;\n\n        _this.files.createIndex(index, indexOptions, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          checkChunksIndex(_this, callback);\n        });\n      }\n    });\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction createFilesDoc(_id, length, chunkSize, md5, filename, contentType, aliases, metadata) {\n  var ret = {\n    _id: _id,\n    length: length,\n    chunkSize: chunkSize,\n    uploadDate: new Date(),\n    filename: filename\n  };\n\n  if (md5) {\n    ret.md5 = md5;\n  }\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\n/**\n * @ignore\n */\n\nfunction doWrite(_this, chunk, encoding, callback) {\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  var inputBuf = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding);\n\n  _this.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (_this.pos + inputBuf.length < _this.chunkSizeBytes) {\n    inputBuf.copy(_this.bufToStore, _this.pos);\n    _this.pos += inputBuf.length;\n\n    callback && callback();\n\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // True means client can keep writing.\n    return true;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  var inputBufRemaining = inputBuf.length;\n  var spaceRemaining = _this.chunkSizeBytes - _this.pos;\n  var numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  var outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    var inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(_this.bufToStore, _this.pos, inputBufPos, inputBufPos + numToCopy);\n    _this.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    if (spaceRemaining === 0) {\n      if (_this.md5) {\n        _this.md5.update(_this.bufToStore);\n      }\n      var doc = createChunkDoc(_this.id, _this.n, Buffer.from(_this.bufToStore));\n      ++_this.state.outstandingRequests;\n      ++outstandingRequests;\n\n      if (checkAborted(_this, callback)) {\n        return false;\n      }\n\n      _this.chunks.insertOne(doc, getWriteOptions(_this), function(error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        --_this.state.outstandingRequests;\n        --outstandingRequests;\n\n        if (!outstandingRequests) {\n          _this.emit('drain', doc);\n          callback && callback();\n          checkDone(_this);\n        }\n      });\n\n      spaceRemaining = _this.chunkSizeBytes;\n      _this.pos = 0;\n      ++_this.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n\n  // Note that we reverse the typical semantics of write's return value\n  // to be compatible with node's `.pipe()` function.\n  // False means the client should wait for the 'drain' event.\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction getWriteOptions(_this) {\n  var obj = {};\n  if (_this.options.writeConcern) {\n    obj.w = _this.options.writeConcern.w;\n    obj.wtimeout = _this.options.writeConcern.wtimeout;\n    obj.j = _this.options.writeConcern.j;\n  }\n  return obj;\n}\n\n/**\n * @ignore\n */\n\nfunction waitForIndexes(_this, callback) {\n  if (_this.bucket.s.checkedIndexes) {\n    return callback(false);\n  }\n\n  _this.bucket.once('index', function() {\n    callback(true);\n  });\n\n  return true;\n}\n\n/**\n * @ignore\n */\n\nfunction writeRemnant(_this, callback) {\n  // Buffer is empty, so don't bother to insert\n  if (_this.pos === 0) {\n    return checkDone(_this, callback);\n  }\n\n  ++_this.state.outstandingRequests;\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  var remnant = Buffer.alloc(_this.pos);\n  _this.bufToStore.copy(remnant, 0, 0, _this.pos);\n  if (_this.md5) {\n    _this.md5.update(remnant);\n  }\n  var doc = createChunkDoc(_this.id, _this.n, remnant);\n\n  // If the stream was aborted, do not write remnant\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  _this.chunks.insertOne(doc, getWriteOptions(_this), function(error) {\n    if (error) {\n      return __handleError(_this, error);\n    }\n    --_this.state.outstandingRequests;\n    checkDone(_this);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkAborted(_this, callback) {\n  if (_this.state.aborted) {\n    if (typeof callback === 'function') {\n      callback(new Error('this stream has been aborted'));\n    }\n    return true;\n  }\n  return false;\n}\n","'use strict';\n\nvar Binary = require('../core').BSON.Binary,\n  ObjectID = require('../core').BSON.ObjectID;\n\nvar Buffer = require('safe-buffer').Buffer;\n\n/**\n * Class for representing a single chunk in GridFS.\n *\n * @class\n *\n * @param file {GridStore} The {@link GridStore} object holding this chunk.\n * @param mongoObject {object} The mongo object representation of this chunk.\n *\n * @throws Error when the type of data field for {@link mongoObject} is not\n *     supported. Currently supported types for data field are instances of\n *     {@link String}, {@link Array}, {@link Binary} and {@link Binary}\n *     from the bson module\n *\n * @see Chunk#buildMongoObject\n */\nvar Chunk = function(file, mongoObject, writeConcern) {\n  if (!(this instanceof Chunk)) return new Chunk(file, mongoObject);\n\n  this.file = file;\n  var mongoObjectFinal = mongoObject == null ? {} : mongoObject;\n  this.writeConcern = writeConcern || { w: 1 };\n  this.objectId = mongoObjectFinal._id == null ? new ObjectID() : mongoObjectFinal._id;\n  this.chunkNumber = mongoObjectFinal.n == null ? 0 : mongoObjectFinal.n;\n  this.data = new Binary();\n\n  if (typeof mongoObjectFinal.data === 'string') {\n    var buffer = Buffer.alloc(mongoObjectFinal.data.length);\n    buffer.write(mongoObjectFinal.data, 0, mongoObjectFinal.data.length, 'binary');\n    this.data = new Binary(buffer);\n  } else if (Array.isArray(mongoObjectFinal.data)) {\n    buffer = Buffer.alloc(mongoObjectFinal.data.length);\n    var data = mongoObjectFinal.data.join('');\n    buffer.write(data, 0, data.length, 'binary');\n    this.data = new Binary(buffer);\n  } else if (mongoObjectFinal.data && mongoObjectFinal.data._bsontype === 'Binary') {\n    this.data = mongoObjectFinal.data;\n  } else if (!Buffer.isBuffer(mongoObjectFinal.data) && !(mongoObjectFinal.data == null)) {\n    throw Error('Illegal chunk format');\n  }\n\n  // Update position\n  this.internalPosition = 0;\n};\n\n/**\n * Writes a data to this object and advance the read/write head.\n *\n * @param data {string} the data to write\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.write = function(data, callback) {\n  this.data.write(data, this.internalPosition, data.length, 'binary');\n  this.internalPosition = this.data.length();\n  if (callback != null) return callback(null, this);\n  return this;\n};\n\n/**\n * Reads data and advances the read/write head.\n *\n * @param length {number} The length of data to read.\n *\n * @return {string} The data read if the given length will not exceed the end of\n *     the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.read = function(length) {\n  // Default to full read if no index defined\n  length = length == null || length === 0 ? this.length() : length;\n\n  if (this.length() - this.internalPosition + 1 >= length) {\n    var data = this.data.read(this.internalPosition, length);\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return '';\n  }\n};\n\nChunk.prototype.readSlice = function(length) {\n  if (this.length() - this.internalPosition >= length) {\n    var data = null;\n    if (this.data.buffer != null) {\n      //Pure BSON\n      data = this.data.buffer.slice(this.internalPosition, this.internalPosition + length);\n    } else {\n      //Native BSON\n      data = Buffer.alloc(length);\n      length = this.data.readInto(data, this.internalPosition);\n    }\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return null;\n  }\n};\n\n/**\n * Checks if the read/write head is at the end.\n *\n * @return {boolean} Whether the read/write head has reached the end of this\n *     chunk.\n */\nChunk.prototype.eof = function() {\n  return this.internalPosition === this.length() ? true : false;\n};\n\n/**\n * Reads one character from the data of this chunk and advances the read/write\n * head.\n *\n * @return {string} a single character data read if the the read/write head is\n *     not at the end of the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.getc = function() {\n  return this.read(1);\n};\n\n/**\n * Clears the contents of the data in this chunk and resets the read/write head\n * to the initial position.\n */\nChunk.prototype.rewind = function() {\n  this.internalPosition = 0;\n  this.data = new Binary();\n};\n\n/**\n * Saves this chunk to the database. Also overwrites existing entries having the\n * same id as this chunk.\n *\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.save = function(options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  self.file.chunkCollection(function(err, collection) {\n    if (err) return callback(err);\n\n    // Merge the options\n    var writeOptions = { upsert: true };\n    for (var name in options) writeOptions[name] = options[name];\n    for (name in self.writeConcern) writeOptions[name] = self.writeConcern[name];\n\n    if (self.data.length() > 0) {\n      self.buildMongoObject(function(mongoObject) {\n        var options = { forceServerObjectId: true };\n        for (var name in self.writeConcern) {\n          options[name] = self.writeConcern[name];\n        }\n\n        collection.replaceOne({ _id: self.objectId }, mongoObject, writeOptions, function(err) {\n          callback(err, self);\n        });\n      });\n    } else {\n      callback(null, self);\n    }\n    // });\n  });\n};\n\n/**\n * Creates a mongoDB object representation of this chunk.\n *\n * @param callback {function(Object)} This will be called after executing this\n *     method. The object will be passed to the first parameter and will have\n *     the structure:\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this chunk\n *          'files_id' : , // {number} foreign key to the file collection\n *          'n' : , // {number} chunk number\n *          'data' : , // {bson#Binary} the chunk data itself\n *        }\n *        </code></pre>\n *\n * @see <a href=\"http://www.mongodb.org/display/DOCS/GridFS+Specification#GridFSSpecification-{{chunks}}\">MongoDB GridFS Chunk Object Structure</a>\n */\nChunk.prototype.buildMongoObject = function(callback) {\n  var mongoObject = {\n    files_id: this.file.fileId,\n    n: this.chunkNumber,\n    data: this.data\n  };\n  // If we are saving using a specific ObjectId\n  if (this.objectId != null) mongoObject._id = this.objectId;\n\n  callback(mongoObject);\n};\n\n/**\n * @return {number} the length of the data\n */\nChunk.prototype.length = function() {\n  return this.data.length();\n};\n\n/**\n * The position of the read/write head\n * @name position\n * @lends Chunk#\n * @field\n */\nObject.defineProperty(Chunk.prototype, 'position', {\n  enumerable: true,\n  get: function() {\n    return this.internalPosition;\n  },\n  set: function(value) {\n    this.internalPosition = value;\n  }\n});\n\n/**\n * The default chunk size\n * @constant\n */\nChunk.DEFAULT_CHUNK_SIZE = 1024 * 255;\n\nmodule.exports = Chunk;\n","'use strict';\n\n/**\n * @fileOverview GridFS is a tool for MongoDB to store files to the database.\n * Because of the restrictions of the object size the database can hold, a\n * facility to split a file into several chunks is needed. The {@link GridStore}\n * class offers a simplified api to interact with files while managing the\n * chunks of split files behind the scenes. More information about GridFS can be\n * found <a href=\"http://www.mongodb.org/display/DOCS/GridFS\">here</a>.\n *\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const GridStore = require('mongodb').GridStore;\n * const ObjectID = require('mongodb').ObjectID;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   const gridStore = new GridStore(db, null, \"w\");\n *   gridStore.open(function(err, gridStore) {\n *     gridStore.write(\"hello world!\", function(err, gridStore) {\n *       gridStore.close(function(err, result) {\n *         // Let's read the file using object Id\n *         GridStore.read(db, result._id, function(err, data) {\n *           test.equal('hello world!', data);\n *           client.close();\n *           test.done();\n *         });\n *       });\n *     });\n *   });\n * });\n */\nconst Chunk = require('./chunk');\nconst ObjectID = require('../core').BSON.ObjectID;\nconst ReadPreference = require('../core').ReadPreference;\nconst Buffer = require('safe-buffer').Buffer;\nconst fs = require('fs');\nconst f = require('util').format;\nconst util = require('util');\nconst MongoError = require('../core').MongoError;\nconst inherits = util.inherits;\nconst Duplex = require('stream').Duplex;\nconst shallowClone = require('../utils').shallowClone;\nconst executeLegacyOperation = require('../utils').executeLegacyOperation;\nconst deprecate = require('util').deprecate;\n\nvar REFERENCE_BY_FILENAME = 0,\n  REFERENCE_BY_ID = 1;\n\nconst deprecationFn = deprecate(() => {},\n'GridStore is deprecated, and will be removed in a future version. Please use GridFSBucket instead');\n\n/**\n * Namespace provided by the core module\n * @external Duplex\n */\n\n/**\n * Create a new GridStore instance\n *\n * Modes\n *  - **\"r\"** - read only. This is the default mode.\n *  - **\"w\"** - write in truncate mode. Existing data will be overwritten.\n *\n * @class\n * @param {Db} db A database instance to interact with.\n * @param {object} [id] optional unique id for this file\n * @param {string} [filename] optional filename for this file, no unique constrain on the field\n * @param {string} mode set the mode for this file.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {boolean} [options.fsync=false] **Deprecated** Specify a file sync write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {string} [options.root] Root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {string} [options.content_type] MIME type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n * @param {number} [options.chunk_size=261120] Size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n * @param {object} [options.metadata] Arbitrary data the user wants to store.\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @property {number} chunkSize Get the gridstore chunk size.\n * @property {number} md5 The md5 checksum for this file.\n * @property {number} chunkNumber The current chunk number the gridstore has materialized into memory\n * @return {GridStore} a GridStore instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStore = function GridStore(db, id, filename, mode, options) {\n  deprecationFn();\n  if (!(this instanceof GridStore)) return new GridStore(db, id, filename, mode, options);\n  this.db = db;\n\n  // Handle options\n  if (typeof options === 'undefined') options = {};\n  // Handle mode\n  if (typeof mode === 'undefined') {\n    mode = filename;\n    filename = undefined;\n  } else if (typeof mode === 'object') {\n    options = mode;\n    mode = filename;\n    filename = undefined;\n  }\n\n  if (id && id._bsontype === 'ObjectID') {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  } else if (typeof filename === 'undefined') {\n    this.referenceBy = REFERENCE_BY_FILENAME;\n    this.filename = id;\n    if (mode.indexOf('w') != null) {\n      this.fileId = new ObjectID();\n    }\n  } else {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  }\n\n  // Set up the rest\n  this.mode = mode == null ? 'r' : mode;\n  this.options = options || {};\n\n  // Opened\n  this.isOpen = false;\n\n  // Set the root if overridden\n  this.root =\n    this.options['root'] == null ? GridStore.DEFAULT_ROOT_COLLECTION : this.options['root'];\n  this.position = 0;\n  this.readPreference =\n    this.options.readPreference || db.options.readPreference || ReadPreference.primary;\n  this.writeConcern = _getWriteConcern(db, this.options);\n  // Set default chunk size\n  this.internalChunkSize =\n    this.options['chunkSize'] == null ? Chunk.DEFAULT_CHUNK_SIZE : this.options['chunkSize'];\n\n  // Get the promiseLibrary\n  var promiseLibrary = this.options.promiseLibrary || Promise;\n\n  // Set the promiseLibrary\n  this.promiseLibrary = promiseLibrary;\n\n  Object.defineProperty(this, 'chunkSize', {\n    enumerable: true,\n    get: function() {\n      return this.internalChunkSize;\n    },\n    set: function(value) {\n      if (!(this.mode[0] === 'w' && this.position === 0 && this.uploadDate == null)) {\n        // eslint-disable-next-line no-self-assign\n        this.internalChunkSize = this.internalChunkSize;\n      } else {\n        this.internalChunkSize = value;\n      }\n    }\n  });\n\n  Object.defineProperty(this, 'md5', {\n    enumerable: true,\n    get: function() {\n      return this.internalMd5;\n    }\n  });\n\n  Object.defineProperty(this, 'chunkNumber', {\n    enumerable: true,\n    get: function() {\n      return this.currentChunk && this.currentChunk.chunkNumber\n        ? this.currentChunk.chunkNumber\n        : null;\n    }\n  });\n};\n\n/**\n * The callback format for the Gridstore.open method\n * @callback GridStore~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The GridStore instance if the open method was successful.\n */\n\n/**\n * Opens the file from the database and initialize this object. Also creates a\n * new one if file does not exist.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~openCallback} [callback] this will be called after executing this method\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.open = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (this.mode !== 'w' && this.mode !== 'w+' && this.mode !== 'r') {\n    throw MongoError.create({ message: 'Illegal mode ' + this.mode, driver: true });\n  }\n\n  return executeLegacyOperation(this.db.s.topology, open, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar open = function(self, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(self.db, self.options);\n\n  // If we are writing we need to ensure we have the right indexes for md5's\n  if (self.mode === 'w' || self.mode === 'w+') {\n    // Get files collection\n    var collection = self.collection();\n    // Put index on filename\n    collection.ensureIndex([['filename', 1]], writeConcern, function() {\n      // Get chunk collection\n      var chunkCollection = self.chunkCollection();\n      // Make an unique index for compatibility with mongo-cxx-driver:legacy\n      var chunkIndexOptions = shallowClone(writeConcern);\n      chunkIndexOptions.unique = true;\n      // Ensure index on chunk collection\n      chunkCollection.ensureIndex(\n        [\n          ['files_id', 1],\n          ['n', 1]\n        ],\n        chunkIndexOptions,\n        function() {\n          // Open the connection\n          _open(self, writeConcern, function(err, r) {\n            if (err) return callback(err);\n            self.isOpen = true;\n            callback(err, r);\n          });\n        }\n      );\n    });\n  } else {\n    // Open the gridstore\n    _open(self, writeConcern, function(err, r) {\n      if (err) return callback(err);\n      self.isOpen = true;\n      callback(err, r);\n    });\n  }\n};\n\n/**\n * Verify if the file is at EOF.\n *\n * @method\n * @return {boolean} true if the read/write head is at the end of this file.\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.eof = function() {\n  return this.position === this.length ? true : false;\n};\n\n/**\n * The callback result format.\n * @callback GridStore~resultCallback\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result from the callback.\n */\n\n/**\n * Retrieves a single character from this file.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.getc = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, getc, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar getc = function(self, options, callback) {\n  if (self.eof()) {\n    callback(null, null);\n  } else if (self.currentChunk.eof()) {\n    nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n      self.currentChunk = chunk;\n      self.position = self.position + 1;\n      callback(err, self.currentChunk.getc());\n    });\n  } else {\n    self.position = self.position + 1;\n    callback(null, self.currentChunk.getc());\n  }\n};\n\n/**\n * Writes a string to the file with a newline character appended at the end if\n * the given string does not have one.\n *\n * @method\n * @param {string} string the string to write.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.puts = function(string, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  var finalString = string.match(/\\n$/) == null ? string + '\\n' : string;\n  return executeLegacyOperation(\n    this.db.s.topology,\n    this.write.bind(this),\n    [finalString, options, callback],\n    { skipSessions: true }\n  );\n};\n\n/**\n * Return a modified Readable stream including a possible transform method.\n *\n * @method\n * @return {GridStoreStream}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.stream = function() {\n  return new GridStoreStream(this);\n};\n\n/**\n * Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\".\n *\n * @method\n * @param {(string|Buffer)} data the data to write.\n * @param {boolean} [close] closes this file after writing if set to true.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.write = function write(data, close, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(\n    this.db.s.topology,\n    _writeNormal,\n    [this, data, close, options, callback],\n    { skipSessions: true }\n  );\n};\n\n/**\n * Handles the destroy part of a stream\n *\n * @method\n * @result {null}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.destroy = function destroy() {\n  // close and do not emit any more events. queued data is not sent.\n  if (!this.writable) return;\n  this.readable = false;\n  if (this.writable) {\n    this.writable = false;\n    this._q.length = 0;\n    this.emit('close');\n  }\n};\n\n/**\n * Stores a file from the file system to the GridFS database.\n *\n * @method\n * @param {(string|Buffer|FileHandle)} file the file to store.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.writeFile = function(file, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, writeFile, [this, file, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar writeFile = function(self, file, options, callback) {\n  if (typeof file === 'string') {\n    fs.open(file, 'r', function(err, fd) {\n      if (err) return callback(err);\n      self.writeFile(fd, callback);\n    });\n    return;\n  }\n\n  self.open(function(err, self) {\n    if (err) return callback(err, self);\n\n    fs.fstat(file, function(err, stats) {\n      if (err) return callback(err, self);\n\n      var offset = 0;\n      var index = 0;\n\n      // Write a chunk\n      var writeChunk = function() {\n        // Allocate the buffer\n        var _buffer = Buffer.alloc(self.chunkSize);\n        // Read the file\n        fs.read(file, _buffer, 0, _buffer.length, offset, function(err, bytesRead, data) {\n          if (err) return callback(err, self);\n\n          offset = offset + bytesRead;\n\n          // Create a new chunk for the data\n          var chunk = new Chunk(self, { n: index++ }, self.writeConcern);\n          chunk.write(data.slice(0, bytesRead), function(err, chunk) {\n            if (err) return callback(err, self);\n\n            chunk.save({}, function(err) {\n              if (err) return callback(err, self);\n\n              self.position = self.position + bytesRead;\n\n              // Point to current chunk\n              self.currentChunk = chunk;\n\n              if (offset >= stats.size) {\n                fs.close(file, function(err) {\n                  if (err) return callback(err);\n\n                  self.close(function(err) {\n                    if (err) return callback(err, self);\n                    return callback(null, self);\n                  });\n                });\n              } else {\n                return process.nextTick(writeChunk);\n              }\n            });\n          });\n        });\n      };\n\n      // Process the first write\n      process.nextTick(writeChunk);\n    });\n  });\n};\n\n/**\n * Saves this file to the database. This will overwrite the old entry if it\n * already exists. This will work properly only if mode was initialized to\n * \"w\" or \"w+\".\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.close = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, close, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar close = function(self, options, callback) {\n  if (self.mode[0] === 'w') {\n    // Set up options\n    options = Object.assign({}, self.writeConcern, options);\n\n    if (self.currentChunk != null && self.currentChunk.position > 0) {\n      self.currentChunk.save({}, function(err) {\n        if (err && typeof callback === 'function') return callback(err);\n\n        self.collection(function(err, files) {\n          if (err && typeof callback === 'function') return callback(err);\n\n          // Build the mongo object\n          if (self.uploadDate != null) {\n            buildMongoObject(self, function(err, mongoObject) {\n              if (err) {\n                if (typeof callback === 'function') return callback(err);\n                else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if (typeof callback === 'function') callback(err, mongoObject);\n              });\n            });\n          } else {\n            self.uploadDate = new Date();\n            buildMongoObject(self, function(err, mongoObject) {\n              if (err) {\n                if (typeof callback === 'function') return callback(err);\n                else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if (typeof callback === 'function') callback(err, mongoObject);\n              });\n            });\n          }\n        });\n      });\n    } else {\n      self.collection(function(err, files) {\n        if (err && typeof callback === 'function') return callback(err);\n\n        self.uploadDate = new Date();\n        buildMongoObject(self, function(err, mongoObject) {\n          if (err) {\n            if (typeof callback === 'function') return callback(err);\n            else throw err;\n          }\n\n          files.save(mongoObject, options, function(err) {\n            if (typeof callback === 'function') callback(err, mongoObject);\n          });\n        });\n      });\n    }\n  } else if (self.mode[0] === 'r') {\n    if (typeof callback === 'function') callback(null, null);\n  } else {\n    if (typeof callback === 'function')\n      callback(MongoError.create({ message: f('Illegal mode %s', self.mode), driver: true }));\n  }\n};\n\n/**\n * The collection callback format.\n * @callback GridStore~collectionCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection from the command execution.\n */\n\n/**\n * Retrieve this file's chunks collection.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.chunkCollection = function(callback) {\n  if (typeof callback === 'function') return this.db.collection(this.root + '.chunks', callback);\n  return this.db.collection(this.root + '.chunks');\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.unlink = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, unlink, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar unlink = function(self, options, callback) {\n  deleteChunks(self, function(err) {\n    if (err !== null) {\n      err.message = 'at deleteChunks: ' + err.message;\n      return callback(err);\n    }\n\n    self.collection(function(err, collection) {\n      if (err !== null) {\n        err.message = 'at collection: ' + err.message;\n        return callback(err);\n      }\n\n      collection.remove({ _id: self.fileId }, self.writeConcern, function(err) {\n        callback(err, self);\n      });\n    });\n  });\n};\n\n/**\n * Retrieves the file collection associated with this object.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.collection = function(callback) {\n  if (typeof callback === 'function') this.db.collection(this.root + '.files', callback);\n  return this.db.collection(this.root + '.files');\n};\n\n/**\n * The readlines callback format.\n * @callback GridStore~readlinesCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {string[]} strings The array of strings returned.\n */\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.readlines = function(separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  separator = args.length ? args.shift() : '\\n';\n  separator = separator || '\\n';\n  options = args.length ? args.shift() : {};\n\n  return executeLegacyOperation(\n    this.db.s.topology,\n    readlines,\n    [this, separator, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readlines = function(self, separator, options, callback) {\n  self.read(function(err, data) {\n    if (err) return callback(err);\n\n    var items = data.toString().split(separator);\n    items = items.length > 0 ? items.splice(0, items.length - 1) : [];\n    for (var i = 0; i < items.length; i++) {\n      items[i] = items[i] + separator;\n    }\n\n    callback(null, items);\n  });\n};\n\n/**\n * Deletes all the chunks of this file in the database if mode was set to \"w\" or\n * \"w+\" and resets the read/write head to the initial position.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.rewind = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeLegacyOperation(this.db.s.topology, rewind, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar rewind = function(self, options, callback) {\n  if (self.currentChunk.chunkNumber !== 0) {\n    if (self.mode[0] === 'w') {\n      deleteChunks(self, function(err) {\n        if (err) return callback(err);\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.position = 0;\n        callback(null, self);\n      });\n    } else {\n      self.currentChunk(0, function(err, chunk) {\n        if (err) return callback(err);\n        self.currentChunk = chunk;\n        self.currentChunk.rewind();\n        self.position = 0;\n        callback(null, self);\n      });\n    }\n  } else {\n    self.currentChunk.rewind();\n    self.position = 0;\n    callback(null, self);\n  }\n};\n\n/**\n * The read callback format.\n * @callback GridStore~readCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Buffer} data The data read from the GridStore object\n */\n\n/**\n * Retrieves the contents of this file and advances the read/write head. Works with Buffers only.\n *\n * There are 3 signatures for this method:\n *\n * (callback)\n * (length, callback)\n * (length, buffer, callback)\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.read = function(length, buffer, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  length = args.length ? args.shift() : null;\n  buffer = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n\n  return executeLegacyOperation(\n    this.db.s.topology,\n    read,\n    [this, length, buffer, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar read = function(self, length, buffer, options, callback) {\n  // The data is a c-terminated string and thus the length - 1\n  var finalLength = length == null ? self.length - self.position : length;\n  var finalBuffer = buffer == null ? Buffer.alloc(finalLength) : buffer;\n  // Add a index to buffer to keep track of writing position or apply current index\n  finalBuffer._index = buffer != null && buffer._index != null ? buffer._index : 0;\n\n  if (self.currentChunk.length() - self.currentChunk.position + finalBuffer._index >= finalLength) {\n    var slice = self.currentChunk.readSlice(finalLength - finalBuffer._index);\n    // Copy content to final buffer\n    slice.copy(finalBuffer, finalBuffer._index);\n    // Update internal position\n    self.position = self.position + finalBuffer.length;\n    // Check if we don't have a file at all\n    if (finalLength === 0 && finalBuffer.length === 0)\n      return callback(MongoError.create({ message: 'File does not exist', driver: true }), null);\n    // Else return data\n    return callback(null, finalBuffer);\n  }\n\n  // Read the next chunk\n  slice = self.currentChunk.readSlice(self.currentChunk.length() - self.currentChunk.position);\n  // Copy content to final buffer\n  slice.copy(finalBuffer, finalBuffer._index);\n  // Update index position\n  finalBuffer._index += slice.length;\n\n  // Load next chunk and read more\n  nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n    if (err) return callback(err);\n\n    if (chunk.length() > 0) {\n      self.currentChunk = chunk;\n      self.read(length, finalBuffer, callback);\n    } else {\n      if (finalBuffer._index > 0) {\n        callback(null, finalBuffer);\n      } else {\n        callback(\n          MongoError.create({\n            message: 'no chunks found for file, possibly corrupt',\n            driver: true\n          }),\n          null\n        );\n      }\n    }\n  });\n};\n\n/**\n * The tell callback format.\n * @callback GridStore~tellCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} position The current read position in the GridStore.\n */\n\n/**\n * Retrieves the position of the read/write head of this file.\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~tellCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.tell = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback === 'function') return callback(null, this.position);\n  // Return promise\n  return new self.promiseLibrary(function(resolve) {\n    resolve(self.position);\n  });\n};\n\n/**\n * The tell callback format.\n * @callback GridStore~gridStoreCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The gridStore.\n */\n\n/**\n * Moves the read/write head to a new location.\n *\n * There are 3 signatures for this method\n *\n * Seek Location Modes\n *  - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file.\n *  - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file.\n *  - **GridStore.IO_SEEK_END**, set the position from the end of the file.\n *\n * @method\n * @param {number} [position] the position to seek to\n * @param {number} [seekLocation] seek mode. Use one of the Seek Location modes.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~gridStoreCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.seek = function(position, seekLocation, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  seekLocation = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n\n  return executeLegacyOperation(\n    this.db.s.topology,\n    seek,\n    [this, position, seekLocation, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar seek = function(self, position, seekLocation, options, callback) {\n  // Seek only supports read mode\n  if (self.mode !== 'r') {\n    return callback(\n      MongoError.create({ message: 'seek is only supported for mode r', driver: true })\n    );\n  }\n\n  var seekLocationFinal = seekLocation == null ? GridStore.IO_SEEK_SET : seekLocation;\n  var finalPosition = position;\n  var targetPosition = 0;\n\n  // Calculate the position\n  if (seekLocationFinal === GridStore.IO_SEEK_CUR) {\n    targetPosition = self.position + finalPosition;\n  } else if (seekLocationFinal === GridStore.IO_SEEK_END) {\n    targetPosition = self.length + finalPosition;\n  } else {\n    targetPosition = finalPosition;\n  }\n\n  // Get the chunk\n  var newChunkNumber = Math.floor(targetPosition / self.chunkSize);\n  var seekChunk = function() {\n    nthChunk(self, newChunkNumber, function(err, chunk) {\n      if (err) return callback(err, null);\n      if (chunk == null) return callback(new Error('no chunk found'));\n\n      // Set the current chunk\n      self.currentChunk = chunk;\n      self.position = targetPosition;\n      self.currentChunk.position = self.position % self.chunkSize;\n      callback(err, self);\n    });\n  };\n\n  seekChunk();\n};\n\n/**\n * @ignore\n */\nvar _open = function(self, options, callback) {\n  var collection = self.collection();\n  // Create the query\n  var query =\n    self.referenceBy === REFERENCE_BY_ID ? { _id: self.fileId } : { filename: self.filename };\n  query = null == self.fileId && self.filename == null ? null : query;\n  options.readPreference = self.readPreference;\n\n  // Fetch the chunks\n  if (query != null) {\n    collection.findOne(query, options, function(err, doc) {\n      if (err) {\n        return error(err);\n      }\n\n      // Check if the collection for the files exists otherwise prepare the new one\n      if (doc != null) {\n        self.fileId = doc._id;\n        // Prefer a new filename over the existing one if this is a write\n        self.filename =\n          self.mode === 'r' || self.filename === undefined ? doc.filename : self.filename;\n        self.contentType = doc.contentType;\n        self.internalChunkSize = doc.chunkSize;\n        self.uploadDate = doc.uploadDate;\n        self.aliases = doc.aliases;\n        self.length = doc.length;\n        self.metadata = doc.metadata;\n        self.internalMd5 = doc.md5;\n      } else if (self.mode !== 'r') {\n        self.fileId = self.fileId == null ? new ObjectID() : self.fileId;\n        self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n        self.internalChunkSize =\n          self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n        self.length = 0;\n      } else {\n        self.length = 0;\n        var txtId = self.fileId._bsontype === 'ObjectID' ? self.fileId.toHexString() : self.fileId;\n        return error(\n          MongoError.create({\n            message: f(\n              'file with id %s not opened for writing',\n              self.referenceBy === REFERENCE_BY_ID ? txtId : self.filename\n            ),\n            driver: true\n          }),\n          self\n        );\n      }\n\n      // Process the mode of the object\n      if (self.mode === 'r') {\n        nthChunk(self, 0, options, function(err, chunk) {\n          if (err) return error(err);\n          self.currentChunk = chunk;\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode === 'w' && doc) {\n        // Delete any existing chunks\n        deleteChunks(self, options, function(err) {\n          if (err) return error(err);\n          self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n          self.contentType =\n            self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n          self.internalChunkSize =\n            self.options['chunk_size'] == null\n              ? self.internalChunkSize\n              : self.options['chunk_size'];\n          self.metadata =\n            self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode === 'w') {\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.contentType =\n          self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize =\n          self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      } else if (self.mode === 'w+') {\n        nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n          if (err) return error(err);\n          // Set the current chunk\n          self.currentChunk = chunk == null ? new Chunk(self, { n: 0 }, self.writeConcern) : chunk;\n          self.currentChunk.position = self.currentChunk.data.length();\n          self.metadata =\n            self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = self.length;\n          callback(null, self);\n        });\n      }\n    });\n  } else {\n    // Write only mode\n    self.fileId = null == self.fileId ? new ObjectID() : self.fileId;\n    self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n    self.internalChunkSize =\n      self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n    self.length = 0;\n\n    // No file exists set up write mode\n    if (self.mode === 'w') {\n      // Delete any existing chunks\n      deleteChunks(self, options, function(err) {\n        if (err) return error(err);\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.contentType =\n          self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize =\n          self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      });\n    } else if (self.mode === 'w+') {\n      nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n        if (err) return error(err);\n        // Set the current chunk\n        self.currentChunk = chunk == null ? new Chunk(self, { n: 0 }, self.writeConcern) : chunk;\n        self.currentChunk.position = self.currentChunk.data.length();\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = self.length;\n        callback(null, self);\n      });\n    }\n  }\n\n  // only pass error to callback once\n  function error(err) {\n    if (error.err) return;\n    callback((error.err = err));\n  }\n};\n\n/**\n * @ignore\n */\nvar writeBuffer = function(self, buffer, close, callback) {\n  if (typeof close === 'function') {\n    callback = close;\n    close = null;\n  }\n  var finalClose = typeof close === 'boolean' ? close : false;\n\n  if (self.mode !== 'w') {\n    callback(\n      MongoError.create({\n        message: f(\n          'file with id %s not opened for writing',\n          self.referenceBy === REFERENCE_BY_ID ? self.referenceBy : self.filename\n        ),\n        driver: true\n      }),\n      null\n    );\n  } else {\n    if (self.currentChunk.position + buffer.length >= self.chunkSize) {\n      // Write out the current Chunk and then keep writing until we have less data left than a chunkSize left\n      // to a new chunk (recursively)\n      var previousChunkNumber = self.currentChunk.chunkNumber;\n      var leftOverDataSize = self.chunkSize - self.currentChunk.position;\n      var firstChunkData = buffer.slice(0, leftOverDataSize);\n      var leftOverData = buffer.slice(leftOverDataSize);\n      // A list of chunks to write out\n      var chunksToWrite = [self.currentChunk.write(firstChunkData)];\n      // If we have more data left than the chunk size let's keep writing new chunks\n      while (leftOverData.length >= self.chunkSize) {\n        // Create a new chunk and write to it\n        var newChunk = new Chunk(self, { n: previousChunkNumber + 1 }, self.writeConcern);\n        firstChunkData = leftOverData.slice(0, self.chunkSize);\n        leftOverData = leftOverData.slice(self.chunkSize);\n        // Update chunk number\n        previousChunkNumber = previousChunkNumber + 1;\n        // Write data\n        newChunk.write(firstChunkData);\n        // Push chunk to save list\n        chunksToWrite.push(newChunk);\n      }\n\n      // Set current chunk with remaining data\n      self.currentChunk = new Chunk(self, { n: previousChunkNumber + 1 }, self.writeConcern);\n      // If we have left over data write it\n      if (leftOverData.length > 0) self.currentChunk.write(leftOverData);\n\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // Total number of chunks to write\n      var numberOfChunksToWrite = chunksToWrite.length;\n\n      for (var i = 0; i < chunksToWrite.length; i++) {\n        chunksToWrite[i].save({}, function(err) {\n          if (err) return callback(err);\n\n          numberOfChunksToWrite = numberOfChunksToWrite - 1;\n\n          if (numberOfChunksToWrite <= 0) {\n            // We care closing the file before returning\n            if (finalClose) {\n              return self.close(function(err) {\n                callback(err, self);\n              });\n            }\n\n            // Return normally\n            return callback(null, self);\n          }\n        });\n      }\n    } else {\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // We have less data than the chunk size just write it and callback\n      self.currentChunk.write(buffer);\n      // We care closing the file before returning\n      if (finalClose) {\n        return self.close(function(err) {\n          callback(err, self);\n        });\n      }\n      // Return normally\n      return callback(null, self);\n    }\n  }\n};\n\n/**\n * Creates a mongoDB object representation of this object.\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this file\n *          'filename' : , // {string} name for this file\n *          'contentType' : , // {string} mime type for this file\n *          'length' : , // {number} size of this file?\n *          'chunksize' : , // {number} chunk size used by this file\n *          'uploadDate' : , // {Date}\n *          'aliases' : , // {array of string}\n *          'metadata' : , // {string}\n *        }\n *        </code></pre>\n *\n * @ignore\n */\nvar buildMongoObject = function(self, callback) {\n  // Calcuate the length\n  var mongoObject = {\n    _id: self.fileId,\n    filename: self.filename,\n    contentType: self.contentType,\n    length: self.position ? self.position : 0,\n    chunkSize: self.chunkSize,\n    uploadDate: self.uploadDate,\n    aliases: self.aliases,\n    metadata: self.metadata\n  };\n\n  var md5Command = { filemd5: self.fileId, root: self.root };\n  self.db.command(md5Command, function(err, results) {\n    if (err) return callback(err);\n\n    mongoObject.md5 = results.md5;\n    callback(null, mongoObject);\n  });\n};\n\n/**\n * Gets the nth chunk of this file.\n * @ignore\n */\nvar nthChunk = function(self, chunkNumber, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n  options.readPreference = self.readPreference;\n  // Get the nth chunk\n  self\n    .chunkCollection()\n    .findOne({ files_id: self.fileId, n: chunkNumber }, options, function(err, chunk) {\n      if (err) return callback(err);\n\n      var finalChunk = chunk == null ? {} : chunk;\n      callback(null, new Chunk(self, finalChunk, self.writeConcern));\n    });\n};\n\n/**\n * @ignore\n */\nvar lastChunkNumber = function(self) {\n  return Math.floor((self.length ? self.length - 1 : 0) / self.chunkSize);\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @ignore\n */\nvar deleteChunks = function(self, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n\n  if (self.fileId != null) {\n    self.chunkCollection().remove({ files_id: self.fileId }, options, function(err) {\n      if (err) return callback(err, false);\n      callback(null, true);\n    });\n  } else {\n    callback(null, true);\n  }\n};\n\n/**\n * The collection to be used for holding the files and chunks collection.\n *\n * @classconstant DEFAULT_ROOT_COLLECTION\n */\nGridStore.DEFAULT_ROOT_COLLECTION = 'fs';\n\n/**\n * Default file mime type\n *\n * @classconstant DEFAULT_CONTENT_TYPE\n */\nGridStore.DEFAULT_CONTENT_TYPE = 'binary/octet-stream';\n\n/**\n * Seek mode where the given length is absolute.\n *\n * @classconstant IO_SEEK_SET\n */\nGridStore.IO_SEEK_SET = 0;\n\n/**\n * Seek mode where the given length is an offset to the current read/write head.\n *\n * @classconstant IO_SEEK_CUR\n */\nGridStore.IO_SEEK_CUR = 1;\n\n/**\n * Seek mode where the given length is an offset to the end of the file.\n *\n * @classconstant IO_SEEK_END\n */\nGridStore.IO_SEEK_END = 2;\n\n/**\n * Checks if a file exists in the database.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file to look for.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.exist = function(db, fileIdObject, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeLegacyOperation(\n    db.s.topology,\n    exists,\n    [db, fileIdObject, rootCollection, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar exists = function(db, fileIdObject, rootCollection, options, callback) {\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.PRIMARY;\n  // Fetch collection\n  var rootCollectionFinal =\n    rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  db.collection(rootCollectionFinal + '.files', function(err, collection) {\n    if (err) return callback(err);\n\n    // Build query\n    var query =\n      typeof fileIdObject === 'string' ||\n      Object.prototype.toString.call(fileIdObject) === '[object RegExp]'\n        ? { filename: fileIdObject }\n        : { _id: fileIdObject }; // Attempt to locate file\n\n    // We have a specific query\n    if (\n      fileIdObject != null &&\n      typeof fileIdObject === 'object' &&\n      Object.prototype.toString.call(fileIdObject) !== '[object RegExp]'\n    ) {\n      query = fileIdObject;\n    }\n\n    // Check if the entry exists\n    collection.findOne(query, { readPreference: readPreference }, function(err, item) {\n      if (err) return callback(err);\n      callback(null, item == null ? false : true);\n    });\n  });\n};\n\n/**\n * Gets the list of files stored in the GridFS.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.list = function(db, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeLegacyOperation(db.s.topology, list, [db, rootCollection, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar list = function(db, rootCollection, options, callback) {\n  // Ensure we have correct values\n  if (rootCollection != null && typeof rootCollection === 'object') {\n    options = rootCollection;\n    rootCollection = null;\n  }\n\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.primary;\n  // Check if we are returning by id not filename\n  var byId = options['id'] != null ? options['id'] : false;\n  // Fetch item\n  var rootCollectionFinal =\n    rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  var items = [];\n  db.collection(rootCollectionFinal + '.files', function(err, collection) {\n    if (err) return callback(err);\n\n    collection.find({}, { readPreference: readPreference }, function(err, cursor) {\n      if (err) return callback(err);\n\n      cursor.each(function(err, item) {\n        if (item != null) {\n          items.push(byId ? item._id : item.filename);\n        } else {\n          callback(err, items);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Reads the contents of a file.\n *\n * This method has the following signatures\n *\n * (db, name, callback)\n * (db, name, length, callback)\n * (db, name, length, offset, callback)\n * (db, name, length, offset, options, callback)\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file.\n * @param {number} [length] The size of data to read.\n * @param {number} [offset] The offset from the head of the file of which to start reading from.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.read = function(db, name, length, offset, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  length = args.length ? args.shift() : null;\n  offset = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  return executeLegacyOperation(\n    db.s.topology,\n    readStatic,\n    [db, name, length, offset, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readStatic = function(db, name, length, offset, options, callback) {\n  new GridStore(db, name, 'r', options).open(function(err, gridStore) {\n    if (err) return callback(err);\n    // Make sure we are not reading out of bounds\n    if (offset && offset >= gridStore.length)\n      return callback('offset larger than size of file', null);\n    if (length && length > gridStore.length)\n      return callback('length is larger than the size of the file', null);\n    if (offset && length && offset + length > gridStore.length)\n      return callback('offset and length is larger than the size of the file', null);\n\n    if (offset != null) {\n      gridStore.seek(offset, function(err, gridStore) {\n        if (err) return callback(err);\n        gridStore.read(length, callback);\n      });\n    } else {\n      gridStore.read(length, callback);\n    }\n  });\n};\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {(String|object)} name the name of the file.\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.readlines = function(db, name, separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  separator = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  return executeLegacyOperation(\n    db.s.topology,\n    readlinesStatic,\n    [db, name, separator, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readlinesStatic = function(db, name, separator, options, callback) {\n  var finalSeperator = separator == null ? '\\n' : separator;\n  new GridStore(db, name, 'r', options).open(function(err, gridStore) {\n    if (err) return callback(err);\n    gridStore.readlines(finalSeperator, callback);\n  });\n};\n\n/**\n * Deletes the chunks and metadata information of a file from GridFS.\n *\n * @method\n * @static\n * @param {Db} db The database to query.\n * @param {(string|array)} names The name/names of the files to delete.\n * @param {object} [options] Optional settings.\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.unlink = function(db, names, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeLegacyOperation(db.s.topology, unlinkStatic, [this, db, names, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar unlinkStatic = function(self, db, names, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(db, options);\n\n  // List of names\n  if (names.constructor === Array) {\n    var tc = 0;\n    for (var i = 0; i < names.length; i++) {\n      ++tc;\n      GridStore.unlink(db, names[i], options, function() {\n        if (--tc === 0) {\n          callback(null, self);\n        }\n      });\n    }\n  } else {\n    new GridStore(db, names, 'w', options).open(function(err, gridStore) {\n      if (err) return callback(err);\n      deleteChunks(gridStore, function(err) {\n        if (err) return callback(err);\n        gridStore.collection(function(err, collection) {\n          if (err) return callback(err);\n          collection.remove({ _id: gridStore.fileId }, writeConcern, function(err) {\n            callback(err, self);\n          });\n        });\n      });\n    });\n  }\n};\n\n/**\n *  @ignore\n */\nvar _writeNormal = function(self, data, close, options, callback) {\n  // If we have a buffer write it using the writeBuffer method\n  if (Buffer.isBuffer(data)) {\n    return writeBuffer(self, data, close, callback);\n  } else {\n    return writeBuffer(self, Buffer.from(data, 'binary'), close, callback);\n  }\n};\n\n/**\n * @ignore\n */\nvar _setWriteConcernHash = function(options) {\n  const baseOptions = Object.assign(options, options.writeConcern);\n  var finalOptions = {};\n  if (baseOptions.w != null) finalOptions.w = baseOptions.w;\n  if (baseOptions.journal === true) finalOptions.j = baseOptions.journal;\n  if (baseOptions.j === true) finalOptions.j = baseOptions.j;\n  if (baseOptions.fsync === true) finalOptions.fsync = baseOptions.fsync;\n  if (baseOptions.wtimeout != null) finalOptions.wtimeout = baseOptions.wtimeout;\n  return finalOptions;\n};\n\n/**\n * @ignore\n */\nvar _getWriteConcern = function(self, options) {\n  // Final options\n  var finalOptions = { w: 1 };\n  options = options || {};\n\n  // Local options verification\n  if (\n    options.writeConcern != null ||\n    options.w != null ||\n    typeof options.j === 'boolean' ||\n    typeof options.journal === 'boolean' ||\n    typeof options.fsync === 'boolean'\n  ) {\n    finalOptions = _setWriteConcernHash(options);\n  } else if (options.safe != null && typeof options.safe === 'object') {\n    finalOptions = _setWriteConcernHash(options.safe);\n  } else if (typeof options.safe === 'boolean') {\n    finalOptions = { w: options.safe ? 1 : 0 };\n  } else if (\n    self.options.writeConcern != null ||\n    self.options.w != null ||\n    typeof self.options.j === 'boolean' ||\n    typeof self.options.journal === 'boolean' ||\n    typeof self.options.fsync === 'boolean'\n  ) {\n    finalOptions = _setWriteConcernHash(self.options);\n  } else if (\n    self.safe &&\n    (self.safe.w != null ||\n      typeof self.safe.j === 'boolean' ||\n      typeof self.safe.journal === 'boolean' ||\n      typeof self.safe.fsync === 'boolean')\n  ) {\n    finalOptions = _setWriteConcernHash(self.safe);\n  } else if (typeof self.safe === 'boolean') {\n    finalOptions = { w: self.safe ? 1 : 0 };\n  }\n\n  // Ensure we don't have an invalid combination of write concerns\n  if (\n    finalOptions.w < 1 &&\n    (finalOptions.journal === true || finalOptions.j === true || finalOptions.fsync === true)\n  )\n    throw MongoError.create({\n      message: 'No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true',\n      driver: true\n    });\n\n  // Return the options\n  return finalOptions;\n};\n\n/**\n * Create a new GridStoreStream instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @extends external:Duplex\n * @return {GridStoreStream} a GridStoreStream instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStoreStream = function(gs) {\n  // Initialize the duplex stream\n  Duplex.call(this);\n\n  // Get the gridstore\n  this.gs = gs;\n\n  // End called\n  this.endCalled = false;\n\n  // If we have a seek\n  this.totalBytesToRead = this.gs.length - this.gs.position;\n  this.seekPosition = this.gs.position;\n};\n\n//\n// Inherit duplex\ninherits(GridStoreStream, Duplex);\n\nGridStoreStream.prototype._pipe = GridStoreStream.prototype.pipe;\n\n// Set up override\nGridStoreStream.prototype.pipe = function(destination) {\n  var self = this;\n\n  // Only open gridstore if not already open\n  if (!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      if (err) return self.emit('error', err);\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      self._pipe.apply(self, [destination]);\n    });\n  } else {\n    self.totalBytesToRead = self.gs.length - self.gs.position;\n    self._pipe.apply(self, [destination]);\n  }\n\n  return destination;\n};\n\n// Called by stream\nGridStoreStream.prototype._read = function() {\n  var self = this;\n\n  var read = function() {\n    // Read data\n    self.gs.read(length, function(err, buffer) {\n      if (err && !self.endCalled) return self.emit('error', err);\n\n      // Stream is closed\n      if (self.endCalled || buffer == null) return self.push(null);\n      // Remove bytes read\n      if (buffer.length <= self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer.length;\n        self.push(buffer);\n      } else if (buffer.length > self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer._index;\n        self.push(buffer.slice(0, buffer._index));\n      }\n\n      // Finished reading\n      if (self.totalBytesToRead <= 0) {\n        self.endCalled = true;\n      }\n    });\n  };\n\n  // Set read length\n  var length =\n    self.gs.length < self.gs.chunkSize ? self.gs.length - self.seekPosition : self.gs.chunkSize;\n  if (!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      if (err) return self.emit('error', err);\n      read();\n    });\n  } else {\n    read();\n  }\n};\n\nGridStoreStream.prototype.destroy = function() {\n  this.pause();\n  this.endCalled = true;\n  this.gs.close();\n  this.emit('end');\n};\n\nGridStoreStream.prototype.write = function(chunk) {\n  var self = this;\n  if (self.endCalled)\n    return self.emit(\n      'error',\n      MongoError.create({ message: 'attempting to write to stream after end called', driver: true })\n    );\n  // Do we have to open the gridstore\n  if (!self.gs.isOpen) {\n    self.gs.open(function() {\n      self.gs.isOpen = true;\n      self.gs.write(chunk, function() {\n        process.nextTick(function() {\n          self.emit('drain');\n        });\n      });\n    });\n    return false;\n  } else {\n    self.gs.write(chunk, function() {\n      self.emit('drain');\n    });\n    return true;\n  }\n};\n\nGridStoreStream.prototype.end = function(chunk, encoding, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  chunk = args.length ? args.shift() : null;\n  encoding = args.length ? args.shift() : null;\n  self.endCalled = true;\n\n  if (chunk) {\n    self.gs.write(chunk, function() {\n      self.gs.close(function() {\n        if (typeof callback === 'function') callback();\n        self.emit('end');\n      });\n    });\n  }\n\n  self.gs.close(function() {\n    if (typeof callback === 'function') callback();\n    self.emit('end');\n  });\n};\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Duplex#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Duplex#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Duplex#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Duplex#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Duplex#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Duplex#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Duplex#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Duplex#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\n/**\n * This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled.\n * @function external:Duplex#write\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {boolean}\n */\n\n/**\n * Call this method when no more data will be written to the stream. If supplied, the callback is attached as a listener on the finish event.\n * @function external:Duplex#end\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {null}\n */\n\n/**\n * GridStoreStream stream data event, fired for each document in the cursor.\n *\n * @event GridStoreStream#data\n * @type {object}\n */\n\n/**\n * GridStoreStream stream end event\n *\n * @event GridStoreStream#end\n * @type {null}\n */\n\n/**\n * GridStoreStream stream close event\n *\n * @event GridStoreStream#close\n * @type {null}\n */\n\n/**\n * GridStoreStream stream readable event\n *\n * @event GridStoreStream#readable\n * @type {null}\n */\n\n/**\n * GridStoreStream stream drain event\n *\n * @event GridStoreStream#drain\n * @type {null}\n */\n\n/**\n * GridStoreStream stream finish event\n *\n * @event GridStoreStream#finish\n * @type {null}\n */\n\n/**\n * GridStoreStream stream pipe event\n *\n * @event GridStoreStream#pipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream unpipe event\n *\n * @event GridStoreStream#unpipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream error event\n *\n * @event GridStoreStream#error\n * @type {null}\n */\n\n/**\n * @ignore\n */\nmodule.exports = GridStore;\n","'use strict';\n\nconst ChangeStream = require('./change_stream');\nconst Db = require('./db');\nconst EventEmitter = require('events').EventEmitter;\nconst inherits = require('util').inherits;\nconst MongoError = require('./core').MongoError;\nconst deprecate = require('util').deprecate;\nconst WriteConcern = require('./write_concern');\nconst MongoDBNamespace = require('./utils').MongoDBNamespace;\nconst ReadPreference = require('./core/topologies/read_preference');\nconst maybePromise = require('./utils').maybePromise;\nconst NativeTopology = require('./topologies/native_topology');\nconst connect = require('./operations/connect').connect;\nconst validOptions = require('./operations/connect').validOptions;\n\n/**\n * @fileOverview The **MongoClient** class is a class that allows for making Connections to MongoDB.\n *\n * @example\n * // Connect using a MongoClient instance\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * const mongoClient = new MongoClient(url);\n * mongoClient.connect(function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n *\n * @example\n * // Connect using the MongoClient.connect static method\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n */\n\n/**\n * A string specifying the level of a ReadConcern\n * @typedef {'local'|'available'|'majority'|'linearizable'|'snapshot'} ReadConcernLevel\n * @see https://docs.mongodb.com/manual/reference/read-concern/index.html#read-concern-levels\n */\n\n/**\n * Configuration options for drivers wrapping the node driver.\n *\n * @typedef {Object} DriverInfoOptions\n * @property {string} [name] The name of the driver\n * @property {string} [version] The version of the driver\n * @property {string} [platform] Optional platform information\n */\n\n/**\n * Configuration options for drivers wrapping the node driver.\n *\n * @typedef {Object} DriverInfoOptions\n * @property {string} [name] The name of the driver\n * @property {string} [version] The version of the driver\n * @property {string} [platform] Optional platform information\n */\n\n/**\n * Creates a new MongoClient instance\n * @class\n * @param {string} url The connection URI string\n * @param {object} [options] Optional settings\n * @param {number} [options.poolSize=5] The maximum size of the individual server pool\n * @param {boolean} [options.ssl=false] Enable SSL connection. *deprecated* use `tls` variants\n * @param {boolean} [options.sslValidate=false] Validate mongod server certificate against Certificate Authority\n * @param {buffer} [options.sslCA=undefined] SSL Certificate store binary buffer *deprecated* use `tls` variants\n * @param {buffer} [options.sslCert=undefined] SSL Certificate binary buffer *deprecated* use `tls` variants\n * @param {buffer} [options.sslKey=undefined] SSL Key file binary buffer *deprecated* use `tls` variants\n * @param {string} [options.sslPass=undefined] SSL Certificate pass phrase *deprecated* use `tls` variants\n * @param {buffer} [options.sslCRL=undefined] SSL Certificate revocation list binary buffer *deprecated* use `tls` variants\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function. *deprecated* use `tls` variants\n * @param {boolean} [options.tls=false] Enable TLS connections\n * @param {boolean} [options.tlsInsecure=false] Relax TLS constraints, disabling validation\n * @param {string} [options.tlsCAFile] A path to file with either a single or bundle of certificate authorities to be considered trusted when making a TLS connection\n * @param {string} [options.tlsCertificateKeyFile] A path to the client certificate file or the client private key file; in the case that they both are needed, the files should be concatenated\n * @param {string} [options.tlsCertificateKeyFilePassword] The password to decrypt the client private key to be used for TLS connections\n * @param {boolean} [options.tlsAllowInvalidCertificates] Specifies whether or not the driver should error when the server’s TLS certificate is invalid\n * @param {boolean} [options.tlsAllowInvalidHostnames] Specifies whether or not the driver should error when there is a mismatch between the server’s hostname and the hostname specified by the TLS certificate\n * @param {boolean} [options.autoReconnect=true] Enable autoReconnect for single server instances\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=120000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.connectTimeoutMS=10000] How long to wait for a connection to be established before timing out\n * @param {number} [options.socketTimeoutMS=0] How long a send or receive on a socket can take before timing out\n * @param {number} [options.family] Version of IP stack. Can be 4, 6 or null (default).\n * If null, will attempt to connect with IPv6, and will fall back to IPv4 on failure\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.ha=true] Control if high availability monitoring runs for Replicaset or Mongos proxies\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {string} [options.replicaSet=undefined] The Replicaset set name\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for Mongos proxies selection\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {string} [options.authSource=undefined] Define the database to authenticate against\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {boolean} [options.fsync=false] **Deprecated** Specify a file sync write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern] Specify a read concern for the collection (only MongoDB 3.2 or higher supported)\n * @param {ReadConcernLevel} [options.readConcern.level='local'] Specify a read concern level for the collection operations (only MongoDB 3.2 or higher supported)\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed)\n * @param {string} [options.loggerLevel=undefined] The logging level (error/warn/info/debug)\n * @param {object} [options.logger=undefined] Custom logger object\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers\n * @param {boolean} [options.promoteLongs=true] Promotes long values to number if they fit inside the 53 bits resolution\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit\n * @param {object} [options.validateOptions=false] Validate MongoClient passed in options for correctness\n * @param {string} [options.appname=undefined] The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections\n * @param {string} [options.auth.user=undefined] The username for auth\n * @param {string} [options.auth.password=undefined] The password for auth\n * @param {string} [options.authMechanism] An authentication mechanism to use for connection authentication, see the {@link https://docs.mongodb.com/manual/reference/connection-string/#urioption.authMechanism|authMechanism} reference for supported options.\n * @param {object} [options.compression] Type of compression to use: snappy or zlib\n * @param {array} [options.readPreferenceTags] Read preference tags\n * @param {number} [options.numberOfRetries=5] The number of retries for a tailable cursor\n * @param {boolean} [options.auto_reconnect=true] Enable auto reconnecting for single server instances\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this client\n * @param {number} [options.minSize] If present, the connection pool will be initialized with minSize connections, and will never dip below minSize connections\n * @param {boolean} [options.useNewUrlParser=true] Determines whether or not to use the new url parser. Enables the new, spec-compliant, url parser shipped in the core driver. This url parser fixes a number of problems with the original parser, and aims to outright replace that parser in the near future. Defaults to true, and must be explicitly set to false to use the legacy url parser.\n * @param {boolean} [options.useUnifiedTopology] Enables the new unified topology layer\n * @param {Number} [options.localThresholdMS=15] **Only applies to the unified topology** The size of the latency window for selecting among multiple suitable servers\n * @param {Number} [options.serverSelectionTimeoutMS=30000] **Only applies to the unified topology** How long to block for server selection before throwing an error\n * @param {Number} [options.heartbeatFrequencyMS=10000] **Only applies to the unified topology** The frequency with which topology updates are scheduled\n * @param {number} [options.maxPoolSize=10] **Only applies to the unified topology** The maximum number of connections that may be associated with a pool at a given time. This includes in use and available connections.\n * @param {number} [options.minPoolSize=0] **Only applies to the unified topology** The minimum number of connections that MUST exist at any moment in a single connection pool.\n * @param {number} [options.maxIdleTimeMS] **Only applies to the unified topology** The maximum amount of time a connection should remain idle in the connection pool before being marked idle. The default is infinity.\n * @param {number} [options.waitQueueTimeoutMS=0] **Only applies to the unified topology** The maximum amount of time operation execution should wait for a connection to become available. The default is 0 which means there is no limit.\n * @param {AutoEncrypter~AutoEncryptionOptions} [options.autoEncryption] Optionally enable client side auto encryption\n * @param {DriverInfoOptions} [options.driverInfo] Allows a wrapping driver to amend the client metadata generated by the driver to include information about the wrapping driver\n * @param {boolean} [options.directConnection=false] Enable directConnection\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {MongoClient} a MongoClient instance\n */\nfunction MongoClient(url, options) {\n  if (!(this instanceof MongoClient)) return new MongoClient(url, options);\n  // Set up event emitter\n  EventEmitter.call(this);\n\n  // The internal state\n  this.s = {\n    url: url,\n    options: options || {},\n    promiseLibrary: (options && options.promiseLibrary) || Promise,\n    dbCache: new Map(),\n    sessions: new Set(),\n    writeConcern: WriteConcern.fromOptions(options),\n    readPreference: ReadPreference.fromOptions(options) || ReadPreference.primary,\n    namespace: new MongoDBNamespace('admin')\n  };\n}\n\n/**\n * @ignore\n */\ninherits(MongoClient, EventEmitter);\n\nObject.defineProperty(MongoClient.prototype, 'writeConcern', {\n  enumerable: true,\n  get: function() {\n    return this.s.writeConcern;\n  }\n});\n\nObject.defineProperty(MongoClient.prototype, 'readPreference', {\n  enumerable: true,\n  get: function() {\n    return this.s.readPreference;\n  }\n});\n\n/**\n * The callback format for results\n * @callback MongoClient~connectCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {MongoClient} client The connected client.\n */\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver\n *\n * @method\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {Promise<MongoClient>} returns Promise if no callback passed\n */\nMongoClient.prototype.connect = function(callback) {\n  if (typeof callback === 'string') {\n    throw new TypeError('`connect` only accepts a callback');\n  }\n\n  const client = this;\n  return maybePromise(this, callback, cb => {\n    const err = validOptions(client.s.options);\n    if (err) return cb(err);\n\n    connect(client, client.s.url, client.s.options, err => {\n      if (err) return cb(err);\n      cb(null, client);\n    });\n  });\n};\n\nMongoClient.prototype.logout = deprecate(function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  if (typeof callback === 'function') callback(null, true);\n}, 'Multiple authentication is prohibited on a connected client, please only authenticate once per MongoClient');\n\n/**\n * Close the db and its underlying connections\n * @method\n * @param {boolean} [force=false] Force close, emitting no events\n * @param {Db~noResultCallback} [callback] The result callback\n * @return {Promise} returns Promise if no callback passed\n */\nMongoClient.prototype.close = function(force, callback) {\n  if (typeof force === 'function') {\n    callback = force;\n    force = false;\n  }\n\n  const client = this;\n  return maybePromise(this, callback, cb => {\n    const completeClose = err => {\n      client.emit('close', client);\n\n      if (!(client.topology instanceof NativeTopology)) {\n        for (const item of client.s.dbCache) {\n          item[1].emit('close', client);\n        }\n      }\n\n      client.removeAllListeners('close');\n      cb(err);\n    };\n\n    if (client.topology == null) {\n      completeClose();\n      return;\n    }\n\n    client.topology.close(force, err => {\n      const autoEncrypter = client.topology.s.options.autoEncrypter;\n      if (!autoEncrypter) {\n        completeClose(err);\n        return;\n      }\n\n      autoEncrypter.teardown(force, err2 => completeClose(err || err2));\n    });\n  });\n};\n\n/**\n * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are\n * related in a parent-child relationship to the original instance so that events are correctly emitted on child\n * db instances. Child db instances are cached so performing db('db1') twice will return the same instance.\n * You can control these behaviors with the options noListener and returnNonCachedInstance.\n *\n * @method\n * @param {string} [dbName] The name of the database we want to use. If not provided, use database name from connection string.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {Db}\n */\nMongoClient.prototype.db = function(dbName, options) {\n  options = options || {};\n\n  // Default to db from connection string if not provided\n  if (!dbName) {\n    dbName = this.s.options.dbName;\n  }\n\n  // Copy the options and add out internal override of the not shared flag\n  const finalOptions = Object.assign({}, this.s.options, options);\n\n  // Do we have the db in the cache already\n  if (this.s.dbCache.has(dbName) && finalOptions.returnNonCachedInstance !== true) {\n    return this.s.dbCache.get(dbName);\n  }\n\n  // Add promiseLibrary\n  finalOptions.promiseLibrary = this.s.promiseLibrary;\n\n  // If no topology throw an error message\n  if (!this.topology) {\n    throw new MongoError('MongoClient must be connected before calling MongoClient.prototype.db');\n  }\n\n  // Return the db object\n  const db = new Db(dbName, this.topology, finalOptions);\n\n  // Add the db to the cache\n  this.s.dbCache.set(dbName, db);\n  // Return the database\n  return db;\n};\n\n/**\n * Check if MongoClient is connected\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {boolean}\n */\nMongoClient.prototype.isConnected = function(options) {\n  options = options || {};\n\n  if (!this.topology) return false;\n  return this.topology.isConnected(options);\n};\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver\n *\n * @method\n * @static\n * @param {string} url The connection URI string\n * @param {object} [options] Optional settings\n * @param {number} [options.poolSize=5] The maximum size of the individual server pool\n * @param {boolean} [options.ssl=false] Enable SSL connection. *deprecated* use `tls` variants\n * @param {boolean} [options.sslValidate=false] Validate mongod server certificate against Certificate Authority\n * @param {buffer} [options.sslCA=undefined] SSL Certificate store binary buffer *deprecated* use `tls` variants\n * @param {buffer} [options.sslCert=undefined] SSL Certificate binary buffer *deprecated* use `tls` variants\n * @param {buffer} [options.sslKey=undefined] SSL Key file binary buffer *deprecated* use `tls` variants\n * @param {string} [options.sslPass=undefined] SSL Certificate pass phrase *deprecated* use `tls` variants\n * @param {buffer} [options.sslCRL=undefined] SSL Certificate revocation list binary buffer *deprecated* use `tls` variants\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function. *deprecated* use `tls` variants\n * @param {boolean} [options.tls=false] Enable TLS connections\n * @param {boolean} [options.tlsInsecure=false] Relax TLS constraints, disabling validation\n * @param {string} [options.tlsCAFile] A path to file with either a single or bundle of certificate authorities to be considered trusted when making a TLS connection\n * @param {string} [options.tlsCertificateKeyFile] A path to the client certificate file or the client private key file; in the case that they both are needed, the files should be concatenated\n * @param {string} [options.tlsCertificateKeyFilePassword] The password to decrypt the client private key to be used for TLS connections\n * @param {boolean} [options.tlsAllowInvalidCertificates] Specifies whether or not the driver should error when the server’s TLS certificate is invalid\n * @param {boolean} [options.tlsAllowInvalidHostnames] Specifies whether or not the driver should error when there is a mismatch between the server’s hostname and the hostname specified by the TLS certificate\n * @param {boolean} [options.autoReconnect=true] Enable autoReconnect for single server instances\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=120000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.connectTimeoutMS=10000] How long to wait for a connection to be established before timing out\n * @param {number} [options.socketTimeoutMS=0] How long a send or receive on a socket can take before timing out\n * @param {number} [options.family] Version of IP stack. Can be 4, 6 or null (default).\n * If null, will attempt to connect with IPv6, and will fall back to IPv4 on failure\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.ha=true] Control if high availability monitoring runs for Replicaset or Mongos proxies\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {string} [options.replicaSet=undefined] The Replicaset set name\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for Mongos proxies selection\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {string} [options.authSource=undefined] Define the database to authenticate against\n * @param {(number|string)} [options.w] **Deprecated** The write concern. Use writeConcern instead.\n * @param {number} [options.wtimeout] **Deprecated** The write concern timeout. Use writeConcern instead.\n * @param {boolean} [options.j=false] **Deprecated** Specify a journal write concern. Use writeConcern instead.\n * @param {boolean} [options.fsync=false] **Deprecated** Specify a file sync write concern. Use writeConcern instead.\n * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern] Specify a read concern for the collection (only MongoDB 3.2 or higher supported)\n * @param {ReadConcernLevel} [options.readConcern.level='local'] Specify a read concern level for the collection operations (only MongoDB 3.2 or higher supported)\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed)\n * @param {string} [options.loggerLevel=undefined] The logging level (error/warn/info/debug)\n * @param {object} [options.logger=undefined] Custom logger object\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers\n * @param {boolean} [options.promoteLongs=true] Promotes long values to number if they fit inside the 53 bits resolution\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit\n * @param {object} [options.validateOptions=false] Validate MongoClient passed in options for correctness\n * @param {string} [options.appname=undefined] The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections\n * @param {string} [options.auth.user=undefined] The username for auth\n * @param {string} [options.auth.password=undefined] The password for auth\n * @param {string} [options.authMechanism] An authentication mechanism to use for connection authentication, see the {@link https://docs.mongodb.com/manual/reference/connection-string/#urioption.authMechanism|authMechanism} reference for supported options.\n * @param {object} [options.compression] Type of compression to use: snappy or zlib\n * @param {array} [options.readPreferenceTags] Read preference tags\n * @param {number} [options.numberOfRetries=5] The number of retries for a tailable cursor\n * @param {boolean} [options.auto_reconnect=true] Enable auto reconnecting for single server instances\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this client\n * @param {number} [options.minSize] If present, the connection pool will be initialized with minSize connections, and will never dip below minSize connections\n * @param {boolean} [options.directConnection=false] Enable directConnection\n * @param {boolean} [options.useNewUrlParser=true] Determines whether or not to use the new url parser. Enables the new, spec-compliant, url parser shipped in the core driver. This url parser fixes a number of problems with the original parser, and aims to outright replace that parser in the near future. Defaults to true, and must be explicitly set to false to use the legacy url parser.\n * @param {boolean} [options.useUnifiedTopology] Enables the new unified topology layer\n * @param {Number} [options.localThresholdMS=15] **Only applies to the unified topology** The size of the latency window for selecting among multiple suitable servers\n * @param {Number} [options.serverSelectionTimeoutMS=30000] **Only applies to the unified topology** How long to block for server selection before throwing an error\n * @param {Number} [options.heartbeatFrequencyMS=10000] **Only applies to the unified topology** The frequency with which topology updates are scheduled\n * @param {number} [options.maxPoolSize=10] **Only applies to the unified topology** The maximum number of connections that may be associated with a pool at a given time. This includes in use and available connections.\n * @param {number} [options.minPoolSize=0] **Only applies to the unified topology** The minimum number of connections that MUST exist at any moment in a single connection pool.\n * @param {number} [options.maxIdleTimeMS] **Only applies to the unified topology** The maximum amount of time a connection should remain idle in the connection pool before being marked idle. The default is infinity.\n * @param {number} [options.waitQueueTimeoutMS=0] **Only applies to the unified topology** The maximum amount of time operation execution should wait for a connection to become available. The default is 0 which means there is no limit.\n * @param {AutoEncrypter~AutoEncryptionOptions} [options.autoEncryption] Optionally enable client side auto encryption\n * @param {DriverInfoOptions} [options.driverInfo] Allows a wrapping driver to amend the client metadata generated by the driver to include information about the wrapping driver\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {Promise<MongoClient>} returns Promise if no callback passed\n */\nMongoClient.connect = function(url, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  // Create client\n  const mongoClient = new MongoClient(url, options);\n  // Execute the connect method\n  return mongoClient.connect(callback);\n};\n\n/**\n * Starts a new session on the server\n *\n * @param {SessionOptions} [options] optional settings for a driver session\n * @return {ClientSession} the newly established session\n */\nMongoClient.prototype.startSession = function(options) {\n  options = Object.assign({ explicit: true }, options);\n  if (!this.topology) {\n    throw new MongoError('Must connect to a server before calling this method');\n  }\n\n  if (!this.topology.hasSessionSupport()) {\n    throw new MongoError('Current topology does not support sessions');\n  }\n\n  return this.topology.startSession(options, this.s.options);\n};\n\n/**\n * Runs a given operation with an implicitly created session. The lifetime of the session\n * will be handled without the need for user interaction.\n *\n * NOTE: presently the operation MUST return a Promise (either explicit or implicity as an async function)\n *\n * @param {Object} [options] Optional settings to be appled to implicitly created session\n * @param {Function} operation An operation to execute with an implicitly created session. The signature of this MUST be `(session) => {}`\n * @return {Promise}\n */\nMongoClient.prototype.withSession = function(options, operation) {\n  if (typeof options === 'function') (operation = options), (options = undefined);\n  const session = this.startSession(options);\n\n  let cleanupHandler = (err, result, opts) => {\n    // prevent multiple calls to cleanupHandler\n    cleanupHandler = () => {\n      throw new ReferenceError('cleanupHandler was called too many times');\n    };\n\n    opts = Object.assign({ throw: true }, opts);\n    session.endSession();\n\n    if (err) {\n      if (opts.throw) throw err;\n      return Promise.reject(err);\n    }\n  };\n\n  try {\n    const result = operation(session);\n    return Promise.resolve(result)\n      .then(result => cleanupHandler(null, result))\n      .catch(err => cleanupHandler(err, null, { throw: true }));\n  } catch (err) {\n    return cleanupHandler(err, null, { throw: false });\n  }\n};\n/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this cluster. Will ignore all changes to system collections, as well as the local, admin,\n * and config databases.\n * @method\n * @since 3.1.0\n * @param {Array} [pipeline] An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n * @param {object} [options] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {object} [options.resumeAfter] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {number} [options.batchSize=1000] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference] The read preference. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @param {Timestamp} [options.startAtOperationTime] receive change events that occur after the specified timestamp\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {ChangeStream} a ChangeStream instance.\n */\nMongoClient.prototype.watch = function(pipeline, options) {\n  pipeline = pipeline || [];\n  options = options || {};\n\n  // Allow optionally not specifying a pipeline\n  if (!Array.isArray(pipeline)) {\n    options = pipeline;\n    pipeline = [];\n  }\n\n  return new ChangeStream(this, pipeline, options);\n};\n\n/**\n * Return the mongo client logger\n * @method\n * @return {Logger} return the mongo client logger\n * @ignore\n */\nMongoClient.prototype.getLogger = function() {\n  return this.s.options.logger;\n};\n\nmodule.exports = MongoClient;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst CommandOperation = require('./command');\nconst defineAspects = require('./operation').defineAspects;\nconst crypto = require('crypto');\nconst handleCallback = require('../utils').handleCallback;\nconst toError = require('../utils').toError;\n\nclass AddUserOperation extends CommandOperation {\n  constructor(db, username, password, options) {\n    super(db, options);\n\n    this.username = username;\n    this.password = password;\n  }\n\n  _buildCommand() {\n    const db = this.db;\n    const username = this.username;\n    const password = this.password;\n    const options = this.options;\n\n    // Get additional values\n    let roles = [];\n    if (Array.isArray(options.roles)) roles = options.roles;\n    if (typeof options.roles === 'string') roles = [options.roles];\n\n    // If not roles defined print deprecated message\n    // TODO: handle deprecation properly\n    if (roles.length === 0) {\n      console.log('Creating a user without roles is deprecated in MongoDB >= 2.6');\n    }\n\n    // Check the db name and add roles if needed\n    if (\n      (db.databaseName.toLowerCase() === 'admin' || options.dbName === 'admin') &&\n      !Array.isArray(options.roles)\n    ) {\n      roles = ['root'];\n    } else if (!Array.isArray(options.roles)) {\n      roles = ['dbOwner'];\n    }\n\n    const digestPassword = db.s.topology.lastIsMaster().maxWireVersion >= 7;\n\n    let userPassword = password;\n\n    if (!digestPassword) {\n      // Use node md5 generator\n      const md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(username + ':mongo:' + password);\n      userPassword = md5.digest('hex');\n    }\n\n    // Build the command to execute\n    const command = {\n      createUser: username,\n      customData: options.customData || {},\n      roles: roles,\n      digestPassword\n    };\n\n    // No password\n    if (typeof password === 'string') {\n      command.pwd = userPassword;\n    }\n\n    return command;\n  }\n\n  execute(callback) {\n    const options = this.options;\n\n    // Error out if digestPassword set\n    if (options.digestPassword != null) {\n      return callback(\n        toError(\n          \"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\"\n        )\n      );\n    }\n\n    // Attempt to execute auth command\n    super.execute((err, r) => {\n      if (!err) {\n        return handleCallback(callback, err, r);\n      }\n\n      return handleCallback(callback, err, null);\n    });\n  }\n}\n\ndefineAspects(AddUserOperation, Aspect.WRITE_OPERATION);\n\nmodule.exports = AddUserOperation;\n","'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst MongoError = require('../core').MongoError;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst ReadPreference = require('../core').ReadPreference;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\n\nconst DB_AGGREGATE_COLLECTION = 1;\nconst MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT = 8;\n\nclass AggregateOperation extends CommandOperationV2 {\n  constructor(parent, pipeline, options) {\n    super(parent, options, { fullResponse: true });\n\n    this.target =\n      parent.s.namespace && parent.s.namespace.collection\n        ? parent.s.namespace.collection\n        : DB_AGGREGATE_COLLECTION;\n\n    this.pipeline = pipeline;\n\n    // determine if we have a write stage, override read preference if so\n    this.hasWriteStage = false;\n    if (typeof options.out === 'string') {\n      this.pipeline = this.pipeline.concat({ $out: options.out });\n      this.hasWriteStage = true;\n    } else if (pipeline.length > 0) {\n      const finalStage = pipeline[pipeline.length - 1];\n      if (finalStage.$out || finalStage.$merge) {\n        this.hasWriteStage = true;\n      }\n    }\n\n    if (this.hasWriteStage) {\n      this.readPreference = ReadPreference.primary;\n    }\n\n    if (this.explain && this.writeConcern) {\n      throw new MongoError('\"explain\" cannot be used on an aggregate call with writeConcern');\n    }\n\n    if (options.cursor != null && typeof options.cursor !== 'object') {\n      throw new MongoError('cursor options must be an object');\n    }\n  }\n\n  get canRetryRead() {\n    return !this.hasWriteStage;\n  }\n\n  addToPipeline(stage) {\n    this.pipeline.push(stage);\n  }\n\n  execute(server, callback) {\n    const options = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const command = { aggregate: this.target, pipeline: this.pipeline };\n\n    if (this.hasWriteStage && serverWireVersion < MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT) {\n      this.readConcern = null;\n    }\n\n    if (serverWireVersion >= 5) {\n      if (this.hasWriteStage && this.writeConcern) {\n        Object.assign(command, { writeConcern: this.writeConcern });\n      }\n    }\n\n    if (options.bypassDocumentValidation === true) {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (typeof options.allowDiskUse === 'boolean') {\n      command.allowDiskUse = options.allowDiskUse;\n    }\n\n    if (options.hint) {\n      command.hint = options.hint;\n    }\n\n    if (this.explain) {\n      options.full = false;\n    }\n\n    command.cursor = options.cursor || {};\n    if (options.batchSize && !this.hasWriteStage) {\n      command.cursor.batchSize = options.batchSize;\n    }\n\n    super.executeCommand(server, command, callback);\n  }\n}\n\ndefineAspects(AggregateOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION,\n  Aspect.EXPLAINABLE\n]);\n\nmodule.exports = AggregateOperation;\n","'use strict';\n\nconst applyRetryableWrites = require('../utils').applyRetryableWrites;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst MongoError = require('../core').MongoError;\nconst OperationBase = require('./operation').OperationBase;\n\nclass BulkWriteOperation extends OperationBase {\n  constructor(collection, operations, options) {\n    super(options);\n\n    this.collection = collection;\n    this.operations = operations;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const operations = this.operations;\n    let options = this.options;\n\n    // Add ignoreUndfined\n    if (coll.s.options.ignoreUndefined) {\n      options = Object.assign({}, options);\n      options.ignoreUndefined = coll.s.options.ignoreUndefined;\n    }\n\n    // Create the bulk operation\n    const bulk =\n      options.ordered === true || options.ordered == null\n        ? coll.initializeOrderedBulkOp(options)\n        : coll.initializeUnorderedBulkOp(options);\n\n    // Do we have a collation\n    let collation = false;\n\n    // for each op go through and add to the bulk\n    try {\n      for (let i = 0; i < operations.length; i++) {\n        // Get the operation type\n        const key = Object.keys(operations[i])[0];\n        // Check if we have a collation\n        if (operations[i][key].collation) {\n          collation = true;\n        }\n\n        // Pass to the raw bulk\n        bulk.raw(operations[i]);\n      }\n    } catch (err) {\n      return callback(err, null);\n    }\n\n    // Final options for retryable writes and write concern\n    let finalOptions = Object.assign({}, options);\n    finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n    finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n    const writeCon = finalOptions.writeConcern ? finalOptions.writeConcern : {};\n    const capabilities = coll.s.topology.capabilities();\n\n    // Did the user pass in a collation, check if our write server supports it\n    if (collation && capabilities && !capabilities.commandsTakeCollation) {\n      return callback(new MongoError('server/primary/mongos does not support collation'));\n    }\n\n    // Execute the bulk\n    bulk.execute(writeCon, finalOptions, (err, r) => {\n      // We have connection level error\n      if (!r && err) {\n        return callback(err, null);\n      }\n\n      r.insertedCount = r.nInserted;\n      r.matchedCount = r.nMatched;\n      r.modifiedCount = r.nModified || 0;\n      r.deletedCount = r.nRemoved;\n      r.upsertedCount = r.getUpsertedIds().length;\n      r.upsertedIds = {};\n      r.insertedIds = {};\n\n      // Update the n\n      r.n = r.insertedCount;\n\n      // Inserted documents\n      const inserted = r.getInsertedIds();\n      // Map inserted ids\n      for (let i = 0; i < inserted.length; i++) {\n        r.insertedIds[inserted[i].index] = inserted[i]._id;\n      }\n\n      // Upserted documents\n      const upserted = r.getUpsertedIds();\n      // Map upserted ids\n      for (let i = 0; i < upserted.length; i++) {\n        r.upsertedIds[upserted[i].index] = upserted[i]._id;\n      }\n\n      // Return the results\n      callback(null, r);\n    });\n  }\n}\n\nmodule.exports = BulkWriteOperation;\n","'use strict';\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst Code = require('../core').BSON.Code;\nconst createIndexDb = require('./db_ops').createIndex;\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\nconst ensureIndexDb = require('./db_ops').ensureIndex;\nconst evaluate = require('./db_ops').evaluate;\nconst executeCommand = require('./db_ops').executeCommand;\nconst handleCallback = require('../utils').handleCallback;\nconst indexInformationDb = require('./db_ops').indexInformation;\nconst Long = require('../core').BSON.Long;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\nconst insertDocuments = require('./common_functions').insertDocuments;\nconst updateDocuments = require('./common_functions').updateDocuments;\n\n/**\n * Group function helper\n * @ignore\n */\n// var groupFunction = function () {\n//   var c = db[ns].find(condition);\n//   var map = new Map();\n//   var reduce_function = reduce;\n//\n//   while (c.hasNext()) {\n//     var obj = c.next();\n//     var key = {};\n//\n//     for (var i = 0, len = keys.length; i < len; ++i) {\n//       var k = keys[i];\n//       key[k] = obj[k];\n//     }\n//\n//     var aggObj = map.get(key);\n//\n//     if (aggObj == null) {\n//       var newObj = Object.extend({}, key);\n//       aggObj = Object.extend(newObj, initial);\n//       map.put(key, aggObj);\n//     }\n//\n//     reduce_function(obj, aggObj);\n//   }\n//\n//   return { \"result\": map.values() };\n// }.toString();\nconst groupFunction =\n  'function () {\\nvar c = db[ns].find(condition);\\nvar map = new Map();\\nvar reduce_function = reduce;\\n\\nwhile (c.hasNext()) {\\nvar obj = c.next();\\nvar key = {};\\n\\nfor (var i = 0, len = keys.length; i < len; ++i) {\\nvar k = keys[i];\\nkey[k] = obj[k];\\n}\\n\\nvar aggObj = map.get(key);\\n\\nif (aggObj == null) {\\nvar newObj = Object.extend({}, key);\\naggObj = Object.extend(newObj, initial);\\nmap.put(key, aggObj);\\n}\\n\\nreduce_function(obj, aggObj);\\n}\\n\\nreturn { \"result\": map.values() };\\n}';\n\n/**\n * Create an index on the db and collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Collection.prototype.createIndex for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction createIndex(coll, fieldOrSpec, options, callback) {\n  createIndexDb(coll.s.db, coll.collectionName, fieldOrSpec, options, callback);\n}\n\n/**\n * Create multiple indexes in the collection. This method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {array} indexSpecs An array of index specifications to be created\n * @param {Object} [options] Optional settings. See Collection.prototype.createIndexes for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction createIndexes(coll, indexSpecs, options, callback) {\n  const capabilities = coll.s.topology.capabilities();\n\n  // Ensure we generate the correct name if the parameter is not set\n  for (let i = 0; i < indexSpecs.length; i++) {\n    if (indexSpecs[i].name == null) {\n      const keys = [];\n\n      // Did the user pass in a collation, check if our write server supports it\n      if (indexSpecs[i].collation && capabilities && !capabilities.commandsTakeCollation) {\n        return callback(new MongoError('server/primary/mongos does not support collation'));\n      }\n\n      for (let name in indexSpecs[i].key) {\n        keys.push(`${name}_${indexSpecs[i].key[name]}`);\n      }\n\n      // Set the name\n      indexSpecs[i].name = keys.join('_');\n    }\n  }\n\n  options = Object.assign({}, options, { readPreference: ReadPreference.PRIMARY });\n\n  // Execute the index\n  executeCommand(\n    coll.s.db,\n    {\n      createIndexes: coll.collectionName,\n      indexes: indexSpecs\n    },\n    options,\n    callback\n  );\n}\n\n/**\n * Ensure that an index exists. If the index does not exist, this function creates it.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Collection.prototype.ensureIndex for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction ensureIndex(coll, fieldOrSpec, options, callback) {\n  ensureIndexDb(coll.s.db, coll.collectionName, fieldOrSpec, options, callback);\n}\n\n/**\n * Run a group command across a collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options] Optional settings. See Collection.prototype.group for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @deprecated MongoDB 3.6 or higher will no longer support the group command. We recommend rewriting using the aggregation framework.\n */\nfunction group(coll, keys, condition, initial, reduce, finalize, command, options, callback) {\n  // Execute using the command\n  if (command) {\n    const reduceFunction = reduce && reduce._bsontype === 'Code' ? reduce : new Code(reduce);\n\n    const selector = {\n      group: {\n        ns: coll.collectionName,\n        $reduce: reduceFunction,\n        cond: condition,\n        initial: initial,\n        out: 'inline'\n      }\n    };\n\n    // if finalize is defined\n    if (finalize != null) selector.group['finalize'] = finalize;\n    // Set up group selector\n    if ('function' === typeof keys || (keys && keys._bsontype === 'Code')) {\n      selector.group.$keyf = keys && keys._bsontype === 'Code' ? keys : new Code(keys);\n    } else {\n      const hash = {};\n      keys.forEach(key => {\n        hash[key] = 1;\n      });\n      selector.group.key = hash;\n    }\n\n    options = Object.assign({}, options);\n    // Ensure we have the right read preference inheritance\n    options.readPreference = ReadPreference.resolve(coll, options);\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(selector, coll, options);\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(selector, coll, options);\n    } catch (err) {\n      return callback(err, null);\n    }\n\n    // Execute command\n    executeCommand(coll.s.db, selector, options, (err, result) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result.retval);\n    });\n  } else {\n    // Create execution scope\n    const scope = reduce != null && reduce._bsontype === 'Code' ? reduce.scope : {};\n\n    scope.ns = coll.collectionName;\n    scope.keys = keys;\n    scope.condition = condition;\n    scope.initial = initial;\n\n    // Pass in the function text to execute within mongodb.\n    const groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');\n\n    evaluate(coll.s.db, new Code(groupfn, scope), null, options, (err, results) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, results.result || results);\n    });\n  }\n}\n\n/**\n * Retrieve all the indexes on the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {Object} [options] Optional settings. See Collection.prototype.indexes for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexes(coll, options, callback) {\n  options = Object.assign({}, { full: true }, options);\n  indexInformationDb(coll.s.db, coll.collectionName, options, callback);\n}\n\n/**\n * Check if one or more indexes exist on the collection. This fails on the first index that doesn't exist.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Object} [options] Optional settings. See Collection.prototype.indexExists for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexExists(coll, indexes, options, callback) {\n  indexInformation(coll, options, (err, indexInformation) => {\n    // If we have an error return\n    if (err != null) return handleCallback(callback, err, null);\n    // Let's check for the index names\n    if (!Array.isArray(indexes))\n      return handleCallback(callback, null, indexInformation[indexes] != null);\n    // Check in list of indexes\n    for (let i = 0; i < indexes.length; i++) {\n      if (indexInformation[indexes[i]] == null) {\n        return handleCallback(callback, null, false);\n      }\n    }\n\n    // All keys found return true\n    return handleCallback(callback, null, true);\n  });\n}\n\n/**\n * Retrieve this collection's index info.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} [options] Optional settings. See Collection.prototype.indexInformation for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexInformation(coll, options, callback) {\n  indexInformationDb(coll.s.db, coll.collectionName, options, callback);\n}\n\n/**\n * Return N parallel cursors for a collection to allow parallel reading of the entire collection. There are\n * no ordering guarantees for returned results.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} [options] Optional settings. See Collection.prototype.parallelCollectionScan for a list of options.\n * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback\n */\nfunction parallelCollectionScan(coll, options, callback) {\n  // Create command object\n  const commandObject = {\n    parallelCollectionScan: coll.collectionName,\n    numCursors: options.numCursors\n  };\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(commandObject, coll, options);\n\n  // Store the raw value\n  const raw = options.raw;\n  delete options['raw'];\n\n  // Execute the command\n  executeCommand(coll.s.db, commandObject, options, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n    if (result == null)\n      return handleCallback(\n        callback,\n        new Error('no result returned for parallelCollectionScan'),\n        null\n      );\n\n    options = Object.assign({ explicitlyIgnoreSession: true }, options);\n\n    const cursors = [];\n    // Add the raw back to the option\n    if (raw) options.raw = raw;\n    // Create command cursors for each item\n    for (let i = 0; i < result.cursors.length; i++) {\n      const rawId = result.cursors[i].cursor.id;\n      // Convert cursorId to Long if needed\n      const cursorId = typeof rawId === 'number' ? Long.fromNumber(rawId) : rawId;\n      // Add a command cursor\n      cursors.push(coll.s.topology.cursor(coll.namespace, cursorId, options));\n    }\n\n    handleCallback(callback, null, cursors);\n  });\n}\n\n/**\n * Save a document.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} doc Document to save\n * @param {object} [options] Optional settings. See Collection.prototype.save for a list of options.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @deprecated use insertOne, insertMany, updateOne or updateMany\n */\nfunction save(coll, doc, options, callback) {\n  // Get the write concern options\n  const finalOptions = applyWriteConcern(\n    Object.assign({}, options),\n    { db: coll.s.db, collection: coll },\n    options\n  );\n  // Establish if we need to perform an insert or update\n  if (doc._id != null) {\n    finalOptions.upsert = true;\n    return updateDocuments(coll, { _id: doc._id }, doc, finalOptions, callback);\n  }\n\n  // Insert the document\n  insertDocuments(coll, [doc], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (doc == null) return handleCallback(callback, null, null);\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result);\n  });\n}\n\nmodule.exports = {\n  createIndex,\n  createIndexes,\n  ensureIndex,\n  group,\n  indexes,\n  indexExists,\n  indexInformation,\n  parallelCollectionScan,\n  save\n};\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst handleCallback = require('../utils').handleCallback;\n\nlet collection;\nfunction loadCollection() {\n  if (!collection) {\n    collection = require('../collection');\n  }\n  return collection;\n}\n\nclass CollectionsOperation extends OperationBase {\n  constructor(db, options) {\n    super(options);\n\n    this.db = db;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    let options = this.options;\n\n    let Collection = loadCollection();\n\n    options = Object.assign({}, options, { nameOnly: true });\n    // Let's get the collection names\n    db.listCollections({}, options).toArray((err, documents) => {\n      if (err != null) return handleCallback(callback, err, null);\n      // Filter collections removing any illegal ones\n      documents = documents.filter(doc => {\n        return doc.name.indexOf('$') === -1;\n      });\n\n      // Return the collection objects\n      handleCallback(\n        callback,\n        null,\n        documents.map(d => {\n          return new Collection(\n            db,\n            db.s.topology,\n            db.databaseName,\n            d.name,\n            db.s.pkFactory,\n            db.s.options\n          );\n        })\n      );\n    });\n  }\n}\n\nmodule.exports = CollectionsOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst OperationBase = require('./operation').OperationBase;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst debugOptions = require('../utils').debugOptions;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nconst debugFields = [\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'native_parser',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'raw',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bufferMaxEntries',\n  'numberOfRetries',\n  'retryMiliSeconds',\n  'readPreference',\n  'pkFactory',\n  'parentDb',\n  'promiseLibrary',\n  'noListener'\n];\n\nclass CommandOperation extends OperationBase {\n  constructor(db, options, collection, command) {\n    super(options);\n\n    if (!this.hasAspect(Aspect.WRITE_OPERATION)) {\n      if (collection != null) {\n        this.options.readPreference = ReadPreference.resolve(collection, options);\n      } else {\n        this.options.readPreference = ReadPreference.resolve(db, options);\n      }\n    } else {\n      if (collection != null) {\n        applyWriteConcern(this.options, { db, coll: collection }, this.options);\n      } else {\n        applyWriteConcern(this.options, { db }, this.options);\n      }\n      this.options.readPreference = ReadPreference.primary;\n    }\n\n    this.db = db;\n\n    if (command != null) {\n      this.command = command;\n    }\n\n    if (collection != null) {\n      this.collection = collection;\n    }\n  }\n\n  _buildCommand() {\n    if (this.command != null) {\n      return this.command;\n    }\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const options = Object.assign({}, this.options);\n\n    // Did the user destroy the topology\n    if (db.serverConfig && db.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    let command;\n    try {\n      command = this._buildCommand();\n    } catch (e) {\n      return callback(e);\n    }\n\n    // Get the db name we are executing against\n    const dbName = options.dbName || options.authdb || db.databaseName;\n\n    // Convert the readPreference if its not a write\n    if (this.hasAspect(Aspect.WRITE_OPERATION)) {\n      if (options.writeConcern && (!options.session || !options.session.inTransaction())) {\n        command.writeConcern = options.writeConcern;\n      }\n    }\n\n    // Debug information\n    if (db.s.logger.isDebug()) {\n      db.s.logger.debug(\n        `executing command ${JSON.stringify(\n          command\n        )} against ${dbName}.$cmd with options [${JSON.stringify(\n          debugOptions(debugFields, options)\n        )}]`\n      );\n    }\n\n    const namespace =\n      this.namespace != null ? this.namespace : new MongoDBNamespace(dbName, '$cmd');\n\n    // Execute command\n    db.s.topology.command(namespace, command, options, (err, result) => {\n      if (err) return handleCallback(callback, err);\n      if (options.full) return handleCallback(callback, null, result);\n      handleCallback(callback, null, result.result);\n    });\n  }\n}\n\nmodule.exports = CommandOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst OperationBase = require('./operation').OperationBase;\nconst ReadPreference = require('../core').ReadPreference;\nconst ReadConcern = require('../read_concern');\nconst WriteConcern = require('../write_concern');\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst decorateWithExplain = require('../utils').decorateWithExplain;\nconst commandSupportsReadConcern = require('../core/sessions').commandSupportsReadConcern;\nconst MongoError = require('../core/error').MongoError;\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n\nclass CommandOperationV2 extends OperationBase {\n  constructor(parent, options, operationOptions) {\n    super(options);\n\n    this.ns = parent.s.namespace.withCollection('$cmd');\n    const propertyProvider = this.hasAspect(Aspect.NO_INHERIT_OPTIONS) ? undefined : parent;\n    this.readPreference = this.hasAspect(Aspect.WRITE_OPERATION)\n      ? ReadPreference.primary\n      : ReadPreference.resolve(propertyProvider, this.options);\n    this.readConcern = resolveReadConcern(propertyProvider, this.options);\n    this.writeConcern = resolveWriteConcern(propertyProvider, this.options);\n\n    if (operationOptions && typeof operationOptions.fullResponse === 'boolean') {\n      this.fullResponse = true;\n    }\n\n    // TODO: A lot of our code depends on having the read preference in the options. This should\n    //       go away, but also requires massive test rewrites.\n    this.options.readPreference = this.readPreference;\n\n    // TODO(NODE-2056): make logger another \"inheritable\" property\n    if (parent.s.logger) {\n      this.logger = parent.s.logger;\n    } else if (parent.s.db && parent.s.db.logger) {\n      this.logger = parent.s.db.logger;\n    }\n  }\n\n  executeCommand(server, cmd, callback) {\n    // TODO: consider making this a non-enumerable property\n    this.server = server;\n\n    const options = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const inTransaction = this.session && this.session.inTransaction();\n\n    if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\n      Object.assign(cmd, { readConcern: this.readConcern });\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(\n        new MongoError(\n          `Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`\n        )\n      );\n      return;\n    }\n\n    if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION)) {\n        Object.assign(cmd, { writeConcern: this.writeConcern });\n      }\n\n      if (options.collation && typeof options.collation === 'object') {\n        Object.assign(cmd, { collation: options.collation });\n      }\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    if (typeof options.comment === 'string') {\n      cmd.comment = options.comment;\n    }\n\n    if (this.hasAspect(Aspect.EXPLAINABLE) && this.explain) {\n      if (serverWireVersion < 6 && cmd.aggregate) {\n        // Prior to 3.6, with aggregate, verbosity is ignored, and we must pass in \"explain: true\"\n        cmd.explain = true;\n      } else {\n        cmd = decorateWithExplain(cmd, this.explain);\n      }\n    }\n\n    if (this.logger && this.logger.isDebug()) {\n      this.logger.debug(`executing command ${JSON.stringify(cmd)} against ${this.ns}`);\n    }\n\n    server.command(this.ns.toString(), cmd, this.options, (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      if (this.fullResponse) {\n        callback(null, result);\n        return;\n      }\n\n      callback(null, result.result);\n    });\n  }\n}\n\nfunction resolveWriteConcern(parent, options) {\n  return WriteConcern.fromOptions(options) || (parent && parent.writeConcern);\n}\n\nfunction resolveReadConcern(parent, options) {\n  return ReadConcern.fromOptions(options) || (parent && parent.readConcern);\n}\n\nmodule.exports = CommandOperationV2;\n","'use strict';\n\nconst applyRetryableWrites = require('../utils').applyRetryableWrites;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\nconst executeCommand = require('./db_ops').executeCommand;\nconst formattedOrderClause = require('../utils').formattedOrderClause;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\nconst toError = require('../utils').toError;\nconst CursorState = require('../core/cursor').CursorState;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\n/**\n * Build the count command.\n *\n * @method\n * @param {collectionOrCursor} an instance of a collection or cursor\n * @param {object} query The query for the count.\n * @param {object} [options] Optional settings. See Collection.prototype.count and Cursor.prototype.count for a list of options.\n */\nfunction buildCountCommand(collectionOrCursor, query, options) {\n  const skip = options.skip;\n  const limit = options.limit;\n  let hint = options.hint;\n  const maxTimeMS = options.maxTimeMS;\n  query = query || {};\n\n  // Final query\n  const cmd = {\n    count: options.collectionName,\n    query: query\n  };\n\n  if (collectionOrCursor.s.numberOfRetries) {\n    // collectionOrCursor is a cursor\n    if (collectionOrCursor.options.hint) {\n      hint = collectionOrCursor.options.hint;\n    } else if (collectionOrCursor.cmd.hint) {\n      hint = collectionOrCursor.cmd.hint;\n    }\n    decorateWithCollation(cmd, collectionOrCursor, collectionOrCursor.cmd);\n  } else {\n    decorateWithCollation(cmd, collectionOrCursor, options);\n  }\n\n  // Add limit, skip and maxTimeMS if defined\n  if (typeof skip === 'number') cmd.skip = skip;\n  if (typeof limit === 'number') cmd.limit = limit;\n  if (typeof maxTimeMS === 'number') cmd.maxTimeMS = maxTimeMS;\n  if (hint) cmd.hint = hint;\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(cmd, collectionOrCursor);\n\n  return cmd;\n}\n\n/**\n * Find and update a document.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options] Optional settings. See Collection.prototype.findAndModify for a list of options.\n * @param {Collection~findAndModifyCallback} [callback] The command result callback\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead\n */\nfunction findAndModify(coll, query, sort, doc, options, callback) {\n  // Create findAndModify command object\n  const queryObject = {\n    findAndModify: coll.collectionName,\n    query: query\n  };\n\n  sort = formattedOrderClause(sort);\n  if (sort) {\n    queryObject.sort = sort;\n  }\n\n  queryObject.new = options.new ? true : false;\n  queryObject.remove = options.remove ? true : false;\n  queryObject.upsert = options.upsert ? true : false;\n\n  const projection = options.projection || options.fields;\n\n  if (projection) {\n    queryObject.fields = projection;\n  }\n\n  if (options.arrayFilters) {\n    queryObject.arrayFilters = options.arrayFilters;\n    delete options.arrayFilters;\n  }\n\n  if (doc && !options.remove) {\n    queryObject.update = doc;\n  }\n\n  if (options.maxTimeMS) queryObject.maxTimeMS = options.maxTimeMS;\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  options.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  // No check on the documents\n  options.checkKeys = false;\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // Decorate the findAndModify command with the write Concern\n  if (finalOptions.writeConcern) {\n    queryObject.writeConcern = finalOptions.writeConcern;\n  }\n\n  // Have we specified bypassDocumentValidation\n  if (finalOptions.bypassDocumentValidation === true) {\n    queryObject.bypassDocumentValidation = finalOptions.bypassDocumentValidation;\n  }\n\n  finalOptions.readPreference = ReadPreference.primary;\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(queryObject, coll, finalOptions);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Execute the command\n  executeCommand(coll.s.db, queryObject, finalOptions, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n\n    return handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Retrieves this collections index info.\n *\n * @method\n * @param {Db} db The Db instance on which to retrieve the index info.\n * @param {string} name The name of the collection.\n * @param {object} [options] Optional settings. See Db.prototype.indexInformation for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction indexInformation(db, name, options, callback) {\n  // If we specified full information\n  const full = options['full'] == null ? false : options['full'];\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Process all the results from the index command and collection\n  function processResults(indexes) {\n    // Contains all the information\n    let info = {};\n    // Process all the indexes\n    for (let i = 0; i < indexes.length; i++) {\n      const index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for (let name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  db.collection(name)\n    .listIndexes(options)\n    .toArray((err, indexes) => {\n      if (err) return callback(toError(err));\n      if (!Array.isArray(indexes)) return handleCallback(callback, null, []);\n      if (full) return handleCallback(callback, null, indexes);\n      handleCallback(callback, null, processResults(indexes));\n    });\n}\n\nfunction prepareDocs(coll, docs, options) {\n  const forceServerObjectId =\n    typeof options.forceServerObjectId === 'boolean'\n      ? options.forceServerObjectId\n      : coll.s.db.options.forceServerObjectId;\n\n  // no need to modify the docs if server sets the ObjectId\n  if (forceServerObjectId === true) {\n    return docs;\n  }\n\n  return docs.map(doc => {\n    if (forceServerObjectId !== true && doc._id == null) {\n      doc._id = coll.s.pkFactory.createPk();\n    }\n\n    return doc;\n  });\n}\n\n// Get the next available document from the cursor, returns null if no more documents are available.\nfunction nextObject(cursor, callback) {\n  if (cursor.s.state === CursorState.CLOSED || (cursor.isDead && cursor.isDead())) {\n    return handleCallback(\n      callback,\n      MongoError.create({ message: 'Cursor is closed', driver: true })\n    );\n  }\n\n  if (cursor.s.state === CursorState.INIT && cursor.cmd && cursor.cmd.sort) {\n    try {\n      cursor.cmd.sort = formattedOrderClause(cursor.cmd.sort);\n    } catch (err) {\n      return handleCallback(callback, err);\n    }\n  }\n\n  // Get the next object\n  cursor._next((err, doc) => {\n    cursor.s.state = CursorState.OPEN;\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, doc);\n  });\n}\n\nfunction insertDocuments(coll, docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Ensure we are operating on an array op docs\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // If keep going set unordered\n  if (finalOptions.keepGoing === true) finalOptions.ordered = false;\n  finalOptions.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  docs = prepareDocs(coll, docs, options);\n\n  // File inserts\n  coll.s.topology.insert(coll.s.namespace, docs, finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Add docs to the list\n    result.ops = docs;\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\nfunction removeDocuments(coll, selector, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {});\n  } else if (typeof selector === 'function') {\n    callback = selector;\n    options = {};\n    selector = {};\n  }\n\n  // Create an empty options object if the provided one is null\n  options = options || {};\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // If selector is null set empty\n  if (selector == null) selector = {};\n\n  // Build the op\n  const op = { q: selector, limit: 0 };\n  if (options.single) {\n    op.limit = 1;\n  } else if (finalOptions.retryWrites) {\n    finalOptions.retryWrites = false;\n  }\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(finalOptions, coll, options);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  if (options.explain !== undefined && maxWireVersion(coll.s.topology) < 3) {\n    return callback\n      ? callback(new MongoError(`server does not support explain on remove`))\n      : undefined;\n  }\n\n  // Execute the remove\n  coll.s.topology.remove(coll.s.namespace, [op], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors) {\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    }\n\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\nfunction updateDocuments(coll, selector, document, options, callback) {\n  if ('function' === typeof options) (callback = options), (options = null);\n  if (options == null) options = {};\n  if (!('function' === typeof callback)) callback = null;\n\n  // If we are not providing a selector or document throw\n  if (selector == null || typeof selector !== 'object')\n    return callback(toError('selector must be a valid JavaScript object'));\n  if (document == null || typeof document !== 'object')\n    return callback(toError('document must be a valid JavaScript object'));\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // Do we return the actual result document\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  finalOptions.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  // Execute the operation\n  const op = { q: selector, u: document };\n  op.upsert = options.upsert !== void 0 ? !!options.upsert : false;\n  op.multi = options.multi !== void 0 ? !!options.multi : false;\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  if (finalOptions.arrayFilters) {\n    op.arrayFilters = finalOptions.arrayFilters;\n    delete finalOptions.arrayFilters;\n  }\n\n  if (finalOptions.retryWrites && op.multi) {\n    finalOptions.retryWrites = false;\n  }\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(finalOptions, coll, options);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  if (options.explain !== undefined && maxWireVersion(coll.s.topology) < 3) {\n    return callback\n      ? callback(new MongoError(`server does not support explain on update`))\n      : undefined;\n  }\n\n  // Update options\n  coll.s.topology.update(coll.s.namespace, [op], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\nmodule.exports = {\n  buildCountCommand,\n  findAndModify,\n  indexInformation,\n  nextObject,\n  prepareDocs,\n  insertDocuments,\n  removeDocuments,\n  updateDocuments\n};\n","'use strict';\n\nconst deprecate = require('util').deprecate;\nconst Logger = require('../core').Logger;\nconst MongoCredentials = require('../core').MongoCredentials;\nconst MongoError = require('../core').MongoError;\nconst Mongos = require('../topologies/mongos');\nconst NativeTopology = require('../topologies/native_topology');\nconst parse = require('../core').parseConnectionString;\nconst ReadConcern = require('../read_concern');\nconst ReadPreference = require('../core').ReadPreference;\nconst ReplSet = require('../topologies/replset');\nconst Server = require('../topologies/server');\nconst ServerSessionPool = require('../core').Sessions.ServerSessionPool;\nconst emitDeprecationWarning = require('../utils').emitDeprecationWarning;\nconst fs = require('fs');\nconst WriteConcern = require('../write_concern');\nconst BSON = require('../core/connection/utils').retrieveBSON();\nconst CMAP_EVENT_NAMES = require('../cmap/events').CMAP_EVENT_NAMES;\n\nlet client;\nfunction loadClient() {\n  if (!client) {\n    client = require('../mongo_client');\n  }\n  return client;\n}\n\nconst legacyParse = deprecate(\n  require('../url_parser'),\n  'current URL string parser is deprecated, and will be removed in a future version. ' +\n    'To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.'\n);\n\nconst AUTH_MECHANISM_INTERNAL_MAP = {\n  DEFAULT: 'default',\n  PLAIN: 'plain',\n  GSSAPI: 'gssapi',\n  'MONGODB-CR': 'mongocr',\n  'MONGODB-X509': 'x509',\n  'MONGODB-AWS': 'mongodb-aws',\n  'SCRAM-SHA-1': 'scram-sha-1',\n  'SCRAM-SHA-256': 'scram-sha-256'\n};\n\nconst monitoringEvents = [\n  'timeout',\n  'close',\n  'serverOpening',\n  'serverDescriptionChanged',\n  'serverHeartbeatStarted',\n  'serverHeartbeatSucceeded',\n  'serverHeartbeatFailed',\n  'serverClosed',\n  'topologyOpening',\n  'topologyClosed',\n  'topologyDescriptionChanged',\n  'commandStarted',\n  'commandSucceeded',\n  'commandFailed',\n  'joined',\n  'left',\n  'ping',\n  'ha',\n  'all',\n  'fullsetup',\n  'open'\n];\n\nconst VALID_AUTH_MECHANISMS = new Set([\n  'DEFAULT',\n  'PLAIN',\n  'GSSAPI',\n  'MONGODB-CR',\n  'MONGODB-X509',\n  'MONGODB-AWS',\n  'SCRAM-SHA-1',\n  'SCRAM-SHA-256'\n]);\n\nconst validOptionNames = [\n  'poolSize',\n  'ssl',\n  'sslValidate',\n  'sslCA',\n  'sslCert',\n  'sslKey',\n  'sslPass',\n  'sslCRL',\n  'autoReconnect',\n  'noDelay',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'connectTimeoutMS',\n  'family',\n  'socketTimeoutMS',\n  'reconnectTries',\n  'reconnectInterval',\n  'ha',\n  'haInterval',\n  'replicaSet',\n  'secondaryAcceptableLatencyMS',\n  'acceptableLatencyMS',\n  'connectWithNoPrimary',\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'writeConcern',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'ignoreUndefined',\n  'raw',\n  'bufferMaxEntries',\n  'readPreference',\n  'pkFactory',\n  'promiseLibrary',\n  'readConcern',\n  'maxStalenessSeconds',\n  'loggerLevel',\n  'logger',\n  'promoteValues',\n  'promoteBuffers',\n  'promoteLongs',\n  'domainsEnabled',\n  'checkServerIdentity',\n  'validateOptions',\n  'appname',\n  'auth',\n  'user',\n  'password',\n  'authMechanism',\n  'compression',\n  'fsync',\n  'readPreferenceTags',\n  'numberOfRetries',\n  'auto_reconnect',\n  'minSize',\n  'monitorCommands',\n  'retryWrites',\n  'retryReads',\n  'useNewUrlParser',\n  'useUnifiedTopology',\n  'serverSelectionTimeoutMS',\n  'useRecoveryToken',\n  'autoEncryption',\n  'driverInfo',\n  'tls',\n  'tlsInsecure',\n  'tlsinsecure',\n  'tlsAllowInvalidCertificates',\n  'tlsAllowInvalidHostnames',\n  'tlsCAFile',\n  'tlsCertificateFile',\n  'tlsCertificateKeyFile',\n  'tlsCertificateKeyFilePassword',\n  'minHeartbeatFrequencyMS',\n  'heartbeatFrequencyMS',\n  'directConnection',\n  'appName',\n\n  // CMAP options\n  'maxPoolSize',\n  'minPoolSize',\n  'maxIdleTimeMS',\n  'waitQueueTimeoutMS'\n];\n\nconst ignoreOptionNames = ['native_parser'];\nconst legacyOptionNames = ['server', 'replset', 'replSet', 'mongos', 'db'];\n\n// Validate options object\nfunction validOptions(options) {\n  const _validOptions = validOptionNames.concat(legacyOptionNames);\n\n  for (const name in options) {\n    if (ignoreOptionNames.indexOf(name) !== -1) {\n      continue;\n    }\n\n    if (_validOptions.indexOf(name) === -1) {\n      if (options.validateOptions) {\n        return new MongoError(`option ${name} is not supported`);\n      } else {\n        console.warn(`the options [${name}] is not supported`);\n      }\n    }\n\n    if (legacyOptionNames.indexOf(name) !== -1) {\n      console.warn(\n        `the server/replset/mongos/db options are deprecated, ` +\n          `all their options are supported at the top level of the options object [${validOptionNames}]`\n      );\n    }\n  }\n}\n\nconst LEGACY_OPTIONS_MAP = validOptionNames.reduce((obj, name) => {\n  obj[name.toLowerCase()] = name;\n  return obj;\n}, {});\n\nfunction addListeners(mongoClient, topology) {\n  topology.on('authenticated', createListener(mongoClient, 'authenticated'));\n  topology.on('error', createListener(mongoClient, 'error'));\n  topology.on('timeout', createListener(mongoClient, 'timeout'));\n  topology.on('close', createListener(mongoClient, 'close'));\n  topology.on('parseError', createListener(mongoClient, 'parseError'));\n  topology.once('open', createListener(mongoClient, 'open'));\n  topology.once('fullsetup', createListener(mongoClient, 'fullsetup'));\n  topology.once('all', createListener(mongoClient, 'all'));\n  topology.on('reconnect', createListener(mongoClient, 'reconnect'));\n}\n\nfunction assignTopology(client, topology) {\n  client.topology = topology;\n\n  if (!(topology instanceof NativeTopology)) {\n    topology.s.sessionPool = new ServerSessionPool(topology.s.coreTopology);\n  }\n}\n\n// Clear out all events\nfunction clearAllEvents(topology) {\n  monitoringEvents.forEach(event => topology.removeAllListeners(event));\n}\n\n// Collect all events in order from SDAM\nfunction collectEvents(mongoClient, topology) {\n  let MongoClient = loadClient();\n  const collectedEvents = [];\n\n  if (mongoClient instanceof MongoClient) {\n    monitoringEvents.forEach(event => {\n      topology.on(event, (object1, object2) => {\n        if (event === 'open') {\n          collectedEvents.push({ event: event, object1: mongoClient });\n        } else {\n          collectedEvents.push({ event: event, object1: object1, object2: object2 });\n        }\n      });\n    });\n  }\n\n  return collectedEvents;\n}\n\nfunction resolveTLSOptions(options) {\n  if (options.tls == null) {\n    return;\n  }\n\n  ['sslCA', 'sslKey', 'sslCert'].forEach(optionName => {\n    if (options[optionName]) {\n      options[optionName] = fs.readFileSync(options[optionName]);\n    }\n  });\n}\n\nconst emitDeprecationForNonUnifiedTopology = deprecate(() => {},\n'current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. ' + 'To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.');\n\nfunction connect(mongoClient, url, options, callback) {\n  options = Object.assign({}, options);\n\n  // If callback is null throw an exception\n  if (callback == null) {\n    throw new Error('no callback function provided');\n  }\n\n  let didRequestAuthentication = false;\n  const logger = Logger('MongoClient', options);\n\n  // Did we pass in a Server/ReplSet/Mongos\n  if (url instanceof Server || url instanceof ReplSet || url instanceof Mongos) {\n    return connectWithUrl(mongoClient, url, options, connectCallback);\n  }\n\n  const useNewUrlParser = options.useNewUrlParser !== false;\n\n  const parseFn = useNewUrlParser ? parse : legacyParse;\n  const transform = useNewUrlParser ? transformUrlOptions : legacyTransformUrlOptions;\n\n  parseFn(url, options, (err, _object) => {\n    // Do not attempt to connect if parsing error\n    if (err) return callback(err);\n\n    // Flatten\n    const object = transform(_object);\n\n    // Parse the string\n    const _finalOptions = createUnifiedOptions(object, options);\n\n    // Check if we have connection and socket timeout set\n    if (_finalOptions.socketTimeoutMS == null) _finalOptions.socketTimeoutMS = 0;\n    if (_finalOptions.connectTimeoutMS == null) _finalOptions.connectTimeoutMS = 10000;\n    if (_finalOptions.retryWrites == null) _finalOptions.retryWrites = true;\n    if (_finalOptions.useRecoveryToken == null) _finalOptions.useRecoveryToken = true;\n    if (_finalOptions.readPreference == null) _finalOptions.readPreference = 'primary';\n\n    if (_finalOptions.db_options && _finalOptions.db_options.auth) {\n      delete _finalOptions.db_options.auth;\n    }\n\n    // resolve tls options if needed\n    resolveTLSOptions(_finalOptions);\n\n    // Store the merged options object\n    mongoClient.s.options = _finalOptions;\n\n    // Apply read and write concern from parsed url\n    mongoClient.s.readPreference = ReadPreference.fromOptions(_finalOptions);\n    mongoClient.s.writeConcern = WriteConcern.fromOptions(_finalOptions);\n\n    // Failure modes\n    if (object.servers.length === 0) {\n      return callback(new Error('connection string must contain at least one seed host'));\n    }\n\n    if (_finalOptions.auth && !_finalOptions.credentials) {\n      try {\n        didRequestAuthentication = true;\n        _finalOptions.credentials = generateCredentials(\n          mongoClient,\n          _finalOptions.auth.user,\n          _finalOptions.auth.password,\n          _finalOptions\n        );\n      } catch (err) {\n        return callback(err);\n      }\n    }\n\n    if (_finalOptions.useUnifiedTopology) {\n      return createTopology(mongoClient, 'unified', _finalOptions, connectCallback);\n    }\n\n    emitDeprecationForNonUnifiedTopology();\n\n    // Do we have a replicaset then skip discovery and go straight to connectivity\n    if (_finalOptions.replicaSet || _finalOptions.rs_name) {\n      return createTopology(mongoClient, 'replicaset', _finalOptions, connectCallback);\n    } else if (object.servers.length > 1) {\n      return createTopology(mongoClient, 'mongos', _finalOptions, connectCallback);\n    } else {\n      return createServer(mongoClient, _finalOptions, connectCallback);\n    }\n  });\n\n  function connectCallback(err, topology) {\n    const warningMessage = `seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name`;\n    if (err && err.message === 'no mongos proxies found in seed list') {\n      if (logger.isWarn()) {\n        logger.warn(warningMessage);\n      }\n\n      // Return a more specific error message for MongoClient.connect\n      return callback(new MongoError(warningMessage));\n    }\n\n    if (didRequestAuthentication) {\n      mongoClient.emit('authenticated', null, true);\n    }\n\n    // Return the error and db instance\n    callback(err, topology);\n  }\n}\n\nfunction connectWithUrl(mongoClient, url, options, connectCallback) {\n  // Set the topology\n  assignTopology(mongoClient, url);\n\n  // Add listeners\n  addListeners(mongoClient, url);\n\n  // Propagate the events to the client\n  relayEvents(mongoClient, url);\n\n  let finalOptions = Object.assign({}, options);\n\n  // If we have a readPreference passed in by the db options, convert it from a string\n  if (typeof options.readPreference === 'string' || typeof options.read_preference === 'string') {\n    finalOptions.readPreference = new ReadPreference(\n      options.readPreference || options.read_preference\n    );\n  }\n\n  const isDoingAuth = finalOptions.user || finalOptions.password || finalOptions.authMechanism;\n  if (isDoingAuth && !finalOptions.credentials) {\n    try {\n      finalOptions.credentials = generateCredentials(\n        mongoClient,\n        finalOptions.user,\n        finalOptions.password,\n        finalOptions\n      );\n    } catch (err) {\n      return connectCallback(err, url);\n    }\n  }\n\n  return url.connect(finalOptions, connectCallback);\n}\n\nfunction createListener(mongoClient, event) {\n  const eventSet = new Set(['all', 'fullsetup', 'open', 'reconnect']);\n  return (v1, v2) => {\n    if (eventSet.has(event)) {\n      return mongoClient.emit(event, mongoClient);\n    }\n\n    mongoClient.emit(event, v1, v2);\n  };\n}\n\nfunction createServer(mongoClient, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = mongoClient.s.promiseLibrary;\n\n  // Set default options\n  const servers = translateOptions(options);\n\n  const server = servers[0];\n\n  // Propagate the events to the client\n  const collectedEvents = collectEvents(mongoClient, server);\n\n  // Connect to topology\n  server.connect(options, (err, topology) => {\n    if (err) {\n      server.close(true);\n      return callback(err);\n    }\n    // Clear out all the collected event listeners\n    clearAllEvents(server);\n\n    // Relay all the events\n    relayEvents(mongoClient, server);\n    // Add listeners\n    addListeners(mongoClient, server);\n    // Check if we are really speaking to a mongos\n    const ismaster = topology.lastIsMaster();\n\n    // Set the topology\n    assignTopology(mongoClient, topology);\n\n    // Do we actually have a mongos\n    if (ismaster && ismaster.msg === 'isdbgrid') {\n      // Destroy the current connection\n      topology.close();\n      // Create mongos connection instead\n      return createTopology(mongoClient, 'mongos', options, callback);\n    }\n\n    // Fire all the events\n    replayEvents(mongoClient, collectedEvents);\n    // Otherwise callback\n    callback(err, topology);\n  });\n}\n\nconst DEPRECATED_UNIFIED_EVENTS = new Set([\n  'reconnect',\n  'reconnectFailed',\n  'attemptReconnect',\n  'joined',\n  'left',\n  'ping',\n  'ha',\n  'all',\n  'fullsetup',\n  'open'\n]);\n\nfunction registerDeprecatedEventNotifiers(client) {\n  client.on('newListener', eventName => {\n    if (DEPRECATED_UNIFIED_EVENTS.has(eventName)) {\n      emitDeprecationWarning(\n        `The \\`${eventName}\\` event is no longer supported by the unified topology, please read more by visiting http://bit.ly/2D8WfT6`,\n        'DeprecationWarning'\n      );\n    }\n  });\n}\n\nfunction createTopology(mongoClient, topologyType, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = mongoClient.s.promiseLibrary;\n\n  const translationOptions = {};\n  if (topologyType === 'unified') translationOptions.createServers = false;\n\n  // Set default options\n  const servers = translateOptions(options, translationOptions);\n\n  // determine CSFLE support\n  if (options.autoEncryption != null) {\n    let AutoEncrypter;\n    try {\n      require.resolve('mongodb-client-encryption');\n    } catch (err) {\n      callback(\n        new MongoError(\n          'Auto-encryption requested, but the module is not installed. Please add `mongodb-client-encryption` as a dependency of your project'\n        )\n      );\n      return;\n    }\n\n    try {\n      let mongodbClientEncryption = require('mongodb-client-encryption');\n      if (typeof mongodbClientEncryption.extension !== 'function') {\n        callback(\n          new MongoError(\n            'loaded version of `mongodb-client-encryption` does not have property `extension`. Please make sure you are loading the correct version of `mongodb-client-encryption`'\n          )\n        );\n      }\n      AutoEncrypter = mongodbClientEncryption.extension(require('../../index')).AutoEncrypter;\n    } catch (err) {\n      callback(err);\n      return;\n    }\n\n    const mongoCryptOptions = Object.assign(\n      {\n        bson:\n          options.bson ||\n          new BSON([\n            BSON.Binary,\n            BSON.Code,\n            BSON.DBRef,\n            BSON.Decimal128,\n            BSON.Double,\n            BSON.Int32,\n            BSON.Long,\n            BSON.Map,\n            BSON.MaxKey,\n            BSON.MinKey,\n            BSON.ObjectId,\n            BSON.BSONRegExp,\n            BSON.Symbol,\n            BSON.Timestamp\n          ])\n      },\n      options.autoEncryption\n    );\n\n    options.autoEncrypter = new AutoEncrypter(mongoClient, mongoCryptOptions);\n  }\n\n  // Create the topology\n  let topology;\n  if (topologyType === 'mongos') {\n    topology = new Mongos(servers, options);\n  } else if (topologyType === 'replicaset') {\n    topology = new ReplSet(servers, options);\n  } else if (topologyType === 'unified') {\n    topology = new NativeTopology(options.servers, options);\n    registerDeprecatedEventNotifiers(mongoClient);\n  }\n\n  // Add listeners\n  addListeners(mongoClient, topology);\n\n  // Propagate the events to the client\n  relayEvents(mongoClient, topology);\n\n  // Open the connection\n  assignTopology(mongoClient, topology);\n\n  // initialize CSFLE if requested\n  if (options.autoEncrypter) {\n    options.autoEncrypter.init(err => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      topology.connect(options, err => {\n        if (err) {\n          topology.close(true);\n          callback(err);\n          return;\n        }\n\n        callback(undefined, topology);\n      });\n    });\n\n    return;\n  }\n\n  // otherwise connect normally\n  topology.connect(options, err => {\n    if (err) {\n      topology.close(true);\n      return callback(err);\n    }\n\n    callback(undefined, topology);\n    return;\n  });\n}\n\nfunction createUnifiedOptions(finalOptions, options) {\n  const childOptions = [\n    'mongos',\n    'server',\n    'db',\n    'replset',\n    'db_options',\n    'server_options',\n    'rs_options',\n    'mongos_options'\n  ];\n  const noMerge = ['readconcern', 'compression', 'autoencryption'];\n  const skip = ['w', 'wtimeout', 'j', 'journal', 'fsync', 'writeConcern'];\n\n  for (const name in options) {\n    if (skip.indexOf(name.toLowerCase()) !== -1) {\n      continue;\n    } else if (noMerge.indexOf(name.toLowerCase()) !== -1) {\n      finalOptions[name] = options[name];\n    } else if (childOptions.indexOf(name.toLowerCase()) !== -1) {\n      finalOptions = mergeOptions(finalOptions, options[name], false);\n    } else {\n      if (\n        options[name] &&\n        typeof options[name] === 'object' &&\n        !Buffer.isBuffer(options[name]) &&\n        !Array.isArray(options[name])\n      ) {\n        finalOptions = mergeOptions(finalOptions, options[name], true);\n      } else {\n        finalOptions[name] = options[name];\n      }\n    }\n  }\n\n  // Handle write concern keys separately, since `options` may have the keys at the top level or\n  // under `options.writeConcern`. The final merged keys will be under `finalOptions.writeConcern`.\n  // This way, `fromOptions` will warn once if `options` is using deprecated write concern options\n  const optionsWriteConcern = WriteConcern.fromOptions(options);\n  if (optionsWriteConcern) {\n    finalOptions.writeConcern = Object.assign({}, finalOptions.writeConcern, optionsWriteConcern);\n  }\n\n  return finalOptions;\n}\n\nfunction generateCredentials(client, username, password, options) {\n  options = Object.assign({}, options);\n\n  // the default db to authenticate against is 'self'\n  // if authententicate is called from a retry context, it may be another one, like admin\n  const source = options.authSource || options.authdb || options.dbName;\n\n  // authMechanism\n  const authMechanismRaw = options.authMechanism || 'DEFAULT';\n  const authMechanism = authMechanismRaw.toUpperCase();\n  const mechanismProperties = options.authMechanismProperties;\n\n  if (!VALID_AUTH_MECHANISMS.has(authMechanism)) {\n    throw MongoError.create({\n      message: `authentication mechanism ${authMechanismRaw} not supported', options.authMechanism`,\n      driver: true\n    });\n  }\n\n  return new MongoCredentials({\n    mechanism: AUTH_MECHANISM_INTERNAL_MAP[authMechanism],\n    mechanismProperties,\n    source,\n    username,\n    password\n  });\n}\n\nfunction legacyTransformUrlOptions(object) {\n  return mergeOptions(createUnifiedOptions({}, object), object, false);\n}\n\nfunction mergeOptions(target, source, flatten) {\n  for (const name in source) {\n    if (source[name] && typeof source[name] === 'object' && flatten) {\n      target = mergeOptions(target, source[name], flatten);\n    } else {\n      target[name] = source[name];\n    }\n  }\n\n  return target;\n}\n\nfunction relayEvents(mongoClient, topology) {\n  const serverOrCommandEvents = [\n    // APM\n    'commandStarted',\n    'commandSucceeded',\n    'commandFailed',\n\n    // SDAM\n    'serverOpening',\n    'serverClosed',\n    'serverDescriptionChanged',\n    'serverHeartbeatStarted',\n    'serverHeartbeatSucceeded',\n    'serverHeartbeatFailed',\n    'topologyOpening',\n    'topologyClosed',\n    'topologyDescriptionChanged',\n\n    // Legacy\n    'joined',\n    'left',\n    'ping',\n    'ha'\n  ].concat(CMAP_EVENT_NAMES);\n\n  serverOrCommandEvents.forEach(event => {\n    topology.on(event, (object1, object2) => {\n      mongoClient.emit(event, object1, object2);\n    });\n  });\n}\n\n//\n// Replay any events due to single server connection switching to Mongos\n//\nfunction replayEvents(mongoClient, events) {\n  for (let i = 0; i < events.length; i++) {\n    mongoClient.emit(events[i].event, events[i].object1, events[i].object2);\n  }\n}\n\nfunction transformUrlOptions(_object) {\n  let object = Object.assign({ servers: _object.hosts }, _object.options);\n  for (let name in object) {\n    const camelCaseName = LEGACY_OPTIONS_MAP[name];\n    if (camelCaseName) {\n      object[camelCaseName] = object[name];\n    }\n  }\n\n  const hasUsername = _object.auth && _object.auth.username;\n  const hasAuthMechanism = _object.options && _object.options.authMechanism;\n  if (hasUsername || hasAuthMechanism) {\n    object.auth = Object.assign({}, _object.auth);\n    if (object.auth.db) {\n      object.authSource = object.authSource || object.auth.db;\n    }\n\n    if (object.auth.username) {\n      object.auth.user = object.auth.username;\n    }\n  }\n\n  if (_object.defaultDatabase) {\n    object.dbName = _object.defaultDatabase;\n  }\n\n  if (object.maxPoolSize) {\n    object.poolSize = object.maxPoolSize;\n  }\n\n  if (object.readConcernLevel) {\n    object.readConcern = new ReadConcern(object.readConcernLevel);\n  }\n\n  if (object.wTimeoutMS) {\n    object.wtimeout = object.wTimeoutMS;\n    object.wTimeoutMS = undefined;\n  }\n\n  if (_object.srvHost) {\n    object.srvHost = _object.srvHost;\n  }\n\n  // Any write concern options from the URL will be top-level, so we manually\n  // move them options under `object.writeConcern` to avoid warnings later\n  const wcKeys = ['w', 'wtimeout', 'j', 'journal', 'fsync'];\n  for (const key of wcKeys) {\n    if (object[key] !== undefined) {\n      if (object.writeConcern === undefined) object.writeConcern = {};\n      object.writeConcern[key] = object[key];\n      object[key] = undefined;\n    }\n  }\n\n  return object;\n}\n\nfunction translateOptions(options, translationOptions) {\n  translationOptions = Object.assign({}, { createServers: true }, translationOptions);\n\n  // If we have a readPreference passed in by the db options\n  if (typeof options.readPreference === 'string' || typeof options.read_preference === 'string') {\n    options.readPreference = new ReadPreference(options.readPreference || options.read_preference);\n  }\n\n  // Do we have readPreference tags, add them\n  if (options.readPreference && (options.readPreferenceTags || options.read_preference_tags)) {\n    options.readPreference.tags = options.readPreferenceTags || options.read_preference_tags;\n  }\n\n  // Do we have maxStalenessSeconds\n  if (options.maxStalenessSeconds) {\n    options.readPreference.maxStalenessSeconds = options.maxStalenessSeconds;\n  }\n\n  // Set the socket and connection timeouts\n  if (options.socketTimeoutMS == null) options.socketTimeoutMS = 0;\n  if (options.connectTimeoutMS == null) options.connectTimeoutMS = 10000;\n\n  if (!translationOptions.createServers) {\n    return;\n  }\n\n  // Create server instances\n  return options.servers.map(serverObj => {\n    return serverObj.domain_socket\n      ? new Server(serverObj.domain_socket, 27017, options)\n      : new Server(serverObj.host, serverObj.port, options);\n  });\n}\n\nmodule.exports = { validOptions, connect };\n","'use strict';\n\nconst buildCountCommand = require('./common_functions').buildCountCommand;\nconst OperationBase = require('./operation').OperationBase;\n\nclass CountOperation extends OperationBase {\n  constructor(cursor, applySkipLimit, options) {\n    super(options);\n\n    this.cursor = cursor;\n    this.applySkipLimit = applySkipLimit;\n  }\n\n  execute(callback) {\n    const cursor = this.cursor;\n    const applySkipLimit = this.applySkipLimit;\n    const options = this.options;\n\n    if (applySkipLimit) {\n      if (typeof cursor.cursorSkip() === 'number') options.skip = cursor.cursorSkip();\n      if (typeof cursor.cursorLimit() === 'number') options.limit = cursor.cursorLimit();\n    }\n\n    // Ensure we have the right read preference inheritance\n    if (options.readPreference) {\n      cursor.setReadPreference(options.readPreference);\n    }\n\n    if (\n      typeof options.maxTimeMS !== 'number' &&\n      cursor.cmd &&\n      typeof cursor.cmd.maxTimeMS === 'number'\n    ) {\n      options.maxTimeMS = cursor.cmd.maxTimeMS;\n    }\n\n    let finalOptions = {};\n    finalOptions.skip = options.skip;\n    finalOptions.limit = options.limit;\n    finalOptions.hint = options.hint;\n    finalOptions.maxTimeMS = options.maxTimeMS;\n\n    // Command\n    finalOptions.collectionName = cursor.namespace.collection;\n\n    let command;\n    try {\n      command = buildCountCommand(cursor, cursor.cmd.query, finalOptions);\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Set cursor server to the same as the topology\n    cursor.server = cursor.topology.s.coreTopology;\n\n    // Execute the command\n    cursor.topology.command(\n      cursor.namespace.withCollection('$cmd'),\n      command,\n      cursor.options,\n      (err, result) => {\n        callback(err, result ? result.result.n : null);\n      }\n    );\n  }\n}\n\nmodule.exports = CountOperation;\n","'use strict';\n\nconst AggregateOperation = require('./aggregate');\n\nclass CountDocumentsOperation extends AggregateOperation {\n  constructor(collection, query, options) {\n    const pipeline = [{ $match: query }];\n    if (typeof options.skip === 'number') {\n      pipeline.push({ $skip: options.skip });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({ $limit: options.limit });\n    }\n\n    pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n\n    super(collection, pipeline, options);\n  }\n\n  execute(server, callback) {\n    super.execute(server, (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n      const response = result.result;\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(null, 0);\n        return;\n      }\n\n      const docs = response.cursor.firstBatch;\n      callback(null, docs.length ? docs[0].n : 0);\n    });\n  }\n}\n\nmodule.exports = CountDocumentsOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperation = require('./command');\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst loadCollection = require('../dynamic_loaders').loadCollection;\nconst MongoError = require('../core').MongoError;\nconst ReadPreference = require('../core').ReadPreference;\n\nconst ILLEGAL_COMMAND_FIELDS = new Set([\n  'w',\n  'wtimeout',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'strict',\n  'serializeFunctions',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session',\n  'readConcern',\n  'writeConcern'\n]);\n\nclass CreateCollectionOperation extends CommandOperation {\n  constructor(db, name, options) {\n    super(db, options);\n    this.name = name;\n  }\n\n  _buildCommand() {\n    const name = this.name;\n    const options = this.options;\n\n    const cmd = { create: name };\n    for (let n in options) {\n      if (\n        options[n] != null &&\n        typeof options[n] !== 'function' &&\n        !ILLEGAL_COMMAND_FIELDS.has(n)\n      ) {\n        cmd[n] = options[n];\n      }\n    }\n\n    return cmd;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n    const Collection = loadCollection();\n\n    let listCollectionOptions = Object.assign({ nameOnly: true, strict: false }, options);\n    listCollectionOptions = applyWriteConcern(listCollectionOptions, { db }, listCollectionOptions);\n\n    function done(err) {\n      if (err) {\n        return callback(err);\n      }\n\n      try {\n        callback(\n          null,\n          new Collection(db, db.s.topology, db.databaseName, name, db.s.pkFactory, options)\n        );\n      } catch (err) {\n        callback(err);\n      }\n    }\n\n    const strictMode = listCollectionOptions.strict;\n    if (strictMode) {\n      db.listCollections({ name }, listCollectionOptions)\n        .setReadPreference(ReadPreference.PRIMARY)\n        .toArray((err, collections) => {\n          if (err) {\n            return callback(err);\n          }\n\n          if (collections.length > 0) {\n            return callback(\n              new MongoError(`Collection ${name} already exists. Currently in strict mode.`)\n            );\n          }\n\n          super.execute(done);\n        });\n\n      return;\n    }\n\n    // otherwise just execute the command\n    super.execute(done);\n  }\n}\n\ndefineAspects(CreateCollectionOperation, Aspect.WRITE_OPERATION);\nmodule.exports = CreateCollectionOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperationV2 = require('./command_v2');\nconst MongoError = require('../core').MongoError;\nconst parseIndexOptions = require('../utils').parseIndexOptions;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\nconst VALID_INDEX_OPTIONS = new Set([\n  'background',\n  'unique',\n  'name',\n  'partialFilterExpression',\n  'sparse',\n  'expireAfterSeconds',\n  'storageEngine',\n  'collation',\n\n  // text indexes\n  'weights',\n  'default_language',\n  'language_override',\n  'textIndexVersion',\n\n  // 2d-sphere indexes\n  '2dsphereIndexVersion',\n\n  // 2d indexes\n  'bits',\n  'min',\n  'max',\n\n  // geoHaystack Indexes\n  'bucketSize',\n\n  // wildcard indexes\n  'wildcardProjection'\n]);\n\nclass CreateIndexesOperation extends CommandOperationV2 {\n  /**\n   * @ignore\n   */\n  constructor(parent, collection, indexes, options) {\n    super(parent, options);\n    this.collection = collection;\n\n    // createIndex can be called with a variety of styles:\n    //   coll.createIndex('a');\n    //   coll.createIndex({ a: 1 });\n    //   coll.createIndex([['a', 1]]);\n    // createIndexes is always called with an array of index spec objects\n    if (!Array.isArray(indexes) || Array.isArray(indexes[0])) {\n      this.onlyReturnNameOfCreatedIndex = true;\n      // TODO: remove in v4 (breaking change); make createIndex return full response as createIndexes does\n\n      const indexParameters = parseIndexOptions(indexes);\n      // Generate the index name\n      const name = typeof options.name === 'string' ? options.name : indexParameters.name;\n      // Set up the index\n      const indexSpec = { name, key: indexParameters.fieldHash };\n      // merge valid index options into the index spec\n      for (let optionName in options) {\n        if (VALID_INDEX_OPTIONS.has(optionName)) {\n          indexSpec[optionName] = options[optionName];\n        }\n      }\n      this.indexes = [indexSpec];\n      return;\n    }\n\n    this.indexes = indexes;\n  }\n\n  /**\n   * @ignore\n   */\n  execute(server, callback) {\n    const options = this.options;\n    const indexes = this.indexes;\n\n    const serverWireVersion = maxWireVersion(server);\n\n    // Ensure we generate the correct name if the parameter is not set\n    for (let i = 0; i < indexes.length; i++) {\n      // Did the user pass in a collation, check if our write server supports it\n      if (indexes[i].collation && serverWireVersion < 5) {\n        callback(\n          new MongoError(\n            `Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`\n          )\n        );\n        return;\n      }\n\n      if (indexes[i].name == null) {\n        const keys = [];\n\n        for (let name in indexes[i].key) {\n          keys.push(`${name}_${indexes[i].key[name]}`);\n        }\n\n        // Set the name\n        indexes[i].name = keys.join('_');\n      }\n    }\n\n    const cmd = { createIndexes: this.collection, indexes };\n\n    if (options.commitQuorum != null) {\n      if (serverWireVersion < 9) {\n        callback(\n          new MongoError('`commitQuorum` option for `createIndexes` not supported on servers < 4.4')\n        );\n        return;\n      }\n      cmd.commitQuorum = options.commitQuorum;\n    }\n\n    // collation is set on each index, it should not be defined at the root\n    this.options.collation = undefined;\n\n    super.executeCommand(server, cmd, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, this.onlyReturnNameOfCreatedIndex ? indexes[0].name : result);\n    });\n  }\n}\n\ndefineAspects(CreateIndexesOperation, [Aspect.WRITE_OPERATION, Aspect.EXECUTE_WITH_SELECTION]);\n\nmodule.exports = CreateIndexesOperation;\n","'use strict';\n\nconst buildCountCommand = require('./collection_ops').buildCountCommand;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('../core').MongoError;\nconst push = Array.prototype.push;\nconst CursorState = require('../core/cursor').CursorState;\n\n/**\n * Get the count of documents for this cursor.\n *\n * @method\n * @param {Cursor} cursor The Cursor instance on which to count.\n * @param {boolean} [applySkipLimit=true] Specifies whether the count command apply limit and skip settings should be applied on the cursor or in the provided options.\n * @param {object} [options] Optional settings. See Cursor.prototype.count for a list of options.\n * @param {Cursor~countResultCallback} [callback] The result callback.\n */\nfunction count(cursor, applySkipLimit, opts, callback) {\n  if (applySkipLimit) {\n    if (typeof cursor.cursorSkip() === 'number') opts.skip = cursor.cursorSkip();\n    if (typeof cursor.cursorLimit() === 'number') opts.limit = cursor.cursorLimit();\n  }\n\n  // Ensure we have the right read preference inheritance\n  if (opts.readPreference) {\n    cursor.setReadPreference(opts.readPreference);\n  }\n\n  if (\n    typeof opts.maxTimeMS !== 'number' &&\n    cursor.cmd &&\n    typeof cursor.cmd.maxTimeMS === 'number'\n  ) {\n    opts.maxTimeMS = cursor.cmd.maxTimeMS;\n  }\n\n  let options = {};\n  options.skip = opts.skip;\n  options.limit = opts.limit;\n  options.hint = opts.hint;\n  options.maxTimeMS = opts.maxTimeMS;\n\n  // Command\n  options.collectionName = cursor.namespace.collection;\n\n  let command;\n  try {\n    command = buildCountCommand(cursor, cursor.cmd.query, options);\n  } catch (err) {\n    return callback(err);\n  }\n\n  // Set cursor server to the same as the topology\n  cursor.server = cursor.topology.s.coreTopology;\n\n  // Execute the command\n  cursor.topology.command(\n    cursor.namespace.withCollection('$cmd'),\n    command,\n    cursor.options,\n    (err, result) => {\n      callback(err, result ? result.result.n : null);\n    }\n  );\n}\n\n/**\n * Iterates over all the documents for this cursor. See Cursor.prototype.each for more information.\n *\n * @method\n * @deprecated\n * @param {Cursor} cursor The Cursor instance on which to run.\n * @param {Cursor~resultCallback} callback The result callback.\n */\nfunction each(cursor, callback) {\n  if (!callback) throw MongoError.create({ message: 'callback is mandatory', driver: true });\n  if (cursor.isNotified()) return;\n  if (cursor.s.state === CursorState.CLOSED || cursor.isDead()) {\n    return handleCallback(\n      callback,\n      MongoError.create({ message: 'Cursor is closed', driver: true })\n    );\n  }\n\n  if (cursor.s.state === CursorState.INIT) {\n    cursor.s.state = CursorState.OPEN;\n  }\n\n  // Define function to avoid global scope escape\n  let fn = null;\n  // Trampoline all the entries\n  if (cursor.bufferedCount() > 0) {\n    while ((fn = loop(cursor, callback))) fn(cursor, callback);\n    each(cursor, callback);\n  } else {\n    cursor.next((err, item) => {\n      if (err) return handleCallback(callback, err);\n      if (item == null) {\n        return cursor.close({ skipKillCursors: true }, () => handleCallback(callback, null, null));\n      }\n\n      if (handleCallback(callback, null, item) === false) return;\n      each(cursor, callback);\n    });\n  }\n}\n\n// Trampoline emptying the number of retrieved items\n// without incurring a nextTick operation\nfunction loop(cursor, callback) {\n  // No more items we are done\n  if (cursor.bufferedCount() === 0) return;\n  // Get the next document\n  cursor._next(callback);\n  // Loop\n  return loop;\n}\n\n/**\n * Returns an array of documents. See Cursor.prototype.toArray for more information.\n *\n * @method\n * @param {Cursor} cursor The Cursor instance from which to get the next document.\n * @param {Cursor~toArrayResultCallback} [callback] The result callback.\n */\nfunction toArray(cursor, callback) {\n  const items = [];\n\n  // Reset cursor\n  cursor.rewind();\n  cursor.s.state = CursorState.INIT;\n\n  // Fetch all the documents\n  const fetchDocs = () => {\n    cursor._next((err, doc) => {\n      if (err) {\n        return handleCallback(callback, err);\n      }\n\n      if (doc == null) {\n        return cursor.close({ skipKillCursors: true }, () => handleCallback(callback, null, items));\n      }\n\n      // Add doc to items\n      items.push(doc);\n\n      // Get all buffered objects\n      if (cursor.bufferedCount() > 0) {\n        let docs = cursor.readBufferedDocuments(cursor.bufferedCount());\n\n        // Transform the doc if transform method added\n        if (cursor.s.transforms && typeof cursor.s.transforms.doc === 'function') {\n          docs = docs.map(cursor.s.transforms.doc);\n        }\n\n        push.apply(items, docs);\n      }\n\n      // Attempt a fetch\n      fetchDocs();\n    });\n  };\n\n  fetchDocs();\n}\n\nmodule.exports = { count, each, toArray };\n","'use strict';\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst Code = require('../core').BSON.Code;\nconst debugOptions = require('../utils').debugOptions;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('../core').MongoError;\nconst parseIndexOptions = require('../utils').parseIndexOptions;\nconst ReadPreference = require('../core').ReadPreference;\nconst toError = require('../utils').toError;\nconst CONSTANTS = require('../constants');\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nconst debugFields = [\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'native_parser',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'raw',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bufferMaxEntries',\n  'numberOfRetries',\n  'retryMiliSeconds',\n  'readPreference',\n  'pkFactory',\n  'parentDb',\n  'promiseLibrary',\n  'noListener'\n];\n\n/**\n * Creates an index on the db and collection.\n * @method\n * @param {Db} db The Db instance on which to create an index.\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Db.prototype.createIndex for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction createIndex(db, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  let finalOptions = Object.assign({}, { readPreference: ReadPreference.PRIMARY }, options);\n  finalOptions = applyWriteConcern(finalOptions, { db }, options);\n\n  // Ensure we have a callback\n  if (finalOptions.writeConcern && typeof callback !== 'function') {\n    throw MongoError.create({\n      message: 'Cannot use a writeConcern without a provided callback',\n      driver: true\n    });\n  }\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // Attempt to run using createIndexes command\n  createIndexUsingCreateIndexes(db, name, fieldOrSpec, finalOptions, (err, result) => {\n    if (err == null) return handleCallback(callback, err, result);\n\n    /**\n     * The following errors mean that the server recognized `createIndex` as a command so we don't need to fallback to an insert:\n     * 67 = 'CannotCreateIndex' (malformed index options)\n     * 85 = 'IndexOptionsConflict' (index already exists with different options)\n     * 86 = 'IndexKeySpecsConflict' (index already exists with the same name)\n     * 11000 = 'DuplicateKey' (couldn't build unique index because of dupes)\n     * 11600 = 'InterruptedAtShutdown' (interrupted at shutdown)\n     * 197 = 'InvalidIndexSpecificationOption' (`_id` with `background: true`)\n     */\n    if (\n      err.code === 67 ||\n      err.code === 11000 ||\n      err.code === 85 ||\n      err.code === 86 ||\n      err.code === 11600 ||\n      err.code === 197\n    ) {\n      return handleCallback(callback, err, result);\n    }\n\n    // Create command\n    const doc = createCreateIndexCommand(db, name, fieldOrSpec, options);\n    // Set no key checking\n    finalOptions.checkKeys = false;\n    // Insert document\n    db.s.topology.insert(\n      db.s.namespace.withCollection(CONSTANTS.SYSTEM_INDEX_COLLECTION),\n      doc,\n      finalOptions,\n      (err, result) => {\n        if (callback == null) return;\n        if (err) return handleCallback(callback, err);\n        if (result == null) return handleCallback(callback, null, null);\n        if (result.result.writeErrors)\n          return handleCallback(callback, MongoError.create(result.result.writeErrors[0]), null);\n        handleCallback(callback, null, doc.name);\n      }\n    );\n  });\n}\n\n// Add listeners to topology\nfunction createListener(db, e, object) {\n  function listener(err) {\n    if (object.listeners(e).length > 0) {\n      object.emit(e, err, db);\n\n      // Emit on all associated db's if available\n      for (let i = 0; i < db.s.children.length; i++) {\n        db.s.children[i].emit(e, err, db.s.children[i]);\n      }\n    }\n  }\n  return listener;\n}\n\n/**\n * Ensures that an index exists. If it does not, creates it.\n *\n * @method\n * @param {Db} db The Db instance on which to ensure the index.\n * @param {string} name The index name\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Db.prototype.ensureIndex for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction ensureIndex(db, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  const finalOptions = applyWriteConcern({}, { db }, options);\n  // Create command\n  const selector = createCreateIndexCommand(db, name, fieldOrSpec, options);\n  const index_name = selector.name;\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // Merge primary readPreference\n  finalOptions.readPreference = ReadPreference.PRIMARY;\n\n  // Check if the index already exists\n  indexInformation(db, name, finalOptions, (err, indexInformation) => {\n    if (err != null && err.code !== 26) return handleCallback(callback, err, null);\n    // If the index does not exist, create it\n    if (indexInformation == null || !indexInformation[index_name]) {\n      createIndex(db, name, fieldOrSpec, options, callback);\n    } else {\n      if (typeof callback === 'function') return handleCallback(callback, null, index_name);\n    }\n  });\n}\n\n/**\n * Evaluate JavaScript on the server\n *\n * @method\n * @param {Db} db The Db instance.\n * @param {Code} code JavaScript to execute on server.\n * @param {(object|array)} parameters The parameters for the call.\n * @param {object} [options] Optional settings. See Db.prototype.eval for a list of options.\n * @param {Db~resultCallback} [callback] The results callback\n * @deprecated Eval is deprecated on MongoDB 3.2 and forward\n */\nfunction evaluate(db, code, parameters, options, callback) {\n  let finalCode = code;\n  let finalParameters = [];\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // If not a code object translate to one\n  if (!(finalCode && finalCode._bsontype === 'Code')) finalCode = new Code(finalCode);\n  // Ensure the parameters are correct\n  if (parameters != null && !Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = [parameters];\n  } else if (parameters != null && Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = parameters;\n  }\n\n  // Create execution selector\n  let cmd = { $eval: finalCode, args: finalParameters };\n  // Check if the nolock parameter is passed in\n  if (options['nolock']) {\n    cmd['nolock'] = options['nolock'];\n  }\n\n  // Set primary read preference\n  options.readPreference = new ReadPreference(ReadPreference.PRIMARY);\n\n  // Execute the command\n  executeCommand(db, cmd, options, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n    if (result && result.ok === 1) return handleCallback(callback, null, result.retval);\n    if (result)\n      return handleCallback(\n        callback,\n        MongoError.create({ message: `eval failed: ${result.errmsg}`, driver: true }),\n        null\n      );\n    handleCallback(callback, err, result);\n  });\n}\n\n/**\n * Execute a command\n *\n * @method\n * @param {Db} db The Db instance on which to execute the command.\n * @param {object} command The command hash\n * @param {object} [options] Optional settings. See Db.prototype.command for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction executeCommand(db, command, options, callback) {\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Get the db name we are executing against\n  const dbName = options.dbName || options.authdb || db.databaseName;\n\n  // Convert the readPreference if its not a write\n  options.readPreference = ReadPreference.resolve(db, options);\n\n  // Debug information\n  if (db.s.logger.isDebug())\n    db.s.logger.debug(\n      `executing command ${JSON.stringify(\n        command\n      )} against ${dbName}.$cmd with options [${JSON.stringify(\n        debugOptions(debugFields, options)\n      )}]`\n    );\n\n  // Execute command\n  db.s.topology.command(db.s.namespace.withCollection('$cmd'), command, options, (err, result) => {\n    if (err) return handleCallback(callback, err);\n    if (options.full) return handleCallback(callback, null, result);\n    handleCallback(callback, null, result.result);\n  });\n}\n\n/**\n * Runs a command on the database as admin.\n *\n * @method\n * @param {Db} db The Db instance on which to execute the command.\n * @param {object} command The command hash\n * @param {object} [options] Optional settings. See Db.prototype.executeDbAdminCommand for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction executeDbAdminCommand(db, command, options, callback) {\n  const namespace = new MongoDBNamespace('admin', '$cmd');\n\n  db.s.topology.command(namespace, command, options, (err, result) => {\n    // Did the user destroy the topology\n    if (db.serverConfig && db.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.result);\n  });\n}\n\n/**\n * Retrieves this collections index info.\n *\n * @method\n * @param {Db} db The Db instance on which to retrieve the index info.\n * @param {string} name The name of the collection.\n * @param {object} [options] Optional settings. See Db.prototype.indexInformation for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction indexInformation(db, name, options, callback) {\n  // If we specified full information\n  const full = options['full'] == null ? false : options['full'];\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Process all the results from the index command and collection\n  function processResults(indexes) {\n    // Contains all the information\n    let info = {};\n    // Process all the indexes\n    for (let i = 0; i < indexes.length; i++) {\n      const index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for (let name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  db.collection(name)\n    .listIndexes(options)\n    .toArray((err, indexes) => {\n      if (err) return callback(toError(err));\n      if (!Array.isArray(indexes)) return handleCallback(callback, null, []);\n      if (full) return handleCallback(callback, null, indexes);\n      handleCallback(callback, null, processResults(indexes));\n    });\n}\n\n/**\n * Retrieve the current profiling information for MongoDB\n *\n * @method\n * @param {Db} db The Db instance on which to retrieve the profiling info.\n * @param {Object} [options] Optional settings. See Db.protoype.profilingInfo for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback.\n * @deprecated Query the system.profile collection directly.\n */\nfunction profilingInfo(db, options, callback) {\n  try {\n    db.collection('system.profile')\n      .find({}, options)\n      .toArray(callback);\n  } catch (err) {\n    return callback(err, null);\n  }\n}\n\n// Validate the database name\nfunction validateDatabaseName(databaseName) {\n  if (typeof databaseName !== 'string')\n    throw MongoError.create({ message: 'database name must be a string', driver: true });\n  if (databaseName.length === 0)\n    throw MongoError.create({ message: 'database name cannot be the empty string', driver: true });\n  if (databaseName === '$external') return;\n\n  const invalidChars = [' ', '.', '$', '/', '\\\\'];\n  for (let i = 0; i < invalidChars.length; i++) {\n    if (databaseName.indexOf(invalidChars[i]) !== -1)\n      throw MongoError.create({\n        message: \"database names cannot contain the character '\" + invalidChars[i] + \"'\",\n        driver: true\n      });\n  }\n}\n\n/**\n * Create the command object for Db.prototype.createIndex.\n *\n * @param {Db} db The Db instance on which to create the command.\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {Object} [options] Optional settings. See Db.prototype.createIndex for a list of options.\n * @return {Object} The insert command object.\n */\nfunction createCreateIndexCommand(db, name, fieldOrSpec, options) {\n  const indexParameters = parseIndexOptions(fieldOrSpec);\n  const fieldHash = indexParameters.fieldHash;\n\n  // Generate the index name\n  const indexName = typeof options.name === 'string' ? options.name : indexParameters.name;\n  const selector = {\n    ns: db.s.namespace.withCollection(name).toString(),\n    key: fieldHash,\n    name: indexName\n  };\n\n  // Ensure we have a correct finalUnique\n  const finalUnique = options == null || 'object' === typeof options ? false : options;\n  // Set up options\n  options = options == null || typeof options === 'boolean' ? {} : options;\n\n  // Add all the options\n  const keysToOmit = Object.keys(selector);\n  for (let optionName in options) {\n    if (keysToOmit.indexOf(optionName) === -1) {\n      selector[optionName] = options[optionName];\n    }\n  }\n\n  if (selector['unique'] == null) selector['unique'] = finalUnique;\n\n  // Remove any write concern operations\n  const removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference', 'session'];\n  for (let i = 0; i < removeKeys.length; i++) {\n    delete selector[removeKeys[i]];\n  }\n\n  // Return the command creation selector\n  return selector;\n}\n\n/**\n * Create index using the createIndexes command.\n *\n * @param {Db} db The Db instance on which to execute the command.\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {Object} [options] Optional settings. See Db.prototype.createIndex for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback.\n */\nfunction createIndexUsingCreateIndexes(db, name, fieldOrSpec, options, callback) {\n  // Build the index\n  const indexParameters = parseIndexOptions(fieldOrSpec);\n  // Generate the index name\n  const indexName = typeof options.name === 'string' ? options.name : indexParameters.name;\n  // Set up the index\n  const indexes = [{ name: indexName, key: indexParameters.fieldHash }];\n  // merge all the options\n  const keysToOmit = Object.keys(indexes[0]).concat([\n    'writeConcern',\n    'w',\n    'wtimeout',\n    'j',\n    'fsync',\n    'readPreference',\n    'session'\n  ]);\n\n  for (let optionName in options) {\n    if (keysToOmit.indexOf(optionName) === -1) {\n      indexes[0][optionName] = options[optionName];\n    }\n  }\n\n  // Get capabilities\n  const capabilities = db.s.topology.capabilities();\n\n  // Did the user pass in a collation, check if our write server supports it\n  if (indexes[0].collation && capabilities && !capabilities.commandsTakeCollation) {\n    // Create a new error\n    const error = new MongoError('server/primary/mongos does not support collation');\n    error.code = 67;\n    // Return the error\n    return callback(error);\n  }\n\n  // Create command, apply write concern to command\n  const cmd = applyWriteConcern({ createIndexes: name, indexes }, { db }, options);\n\n  // ReadPreference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Build the command\n  executeCommand(db, cmd, options, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n    if (result.ok === 0) return handleCallback(callback, toError(result), null);\n    // Return the indexName for backward compatibility\n    handleCallback(callback, null, indexName);\n  });\n}\n\nmodule.exports = {\n  createListener,\n  createIndex,\n  ensureIndex,\n  evaluate,\n  executeCommand,\n  executeDbAdminCommand,\n  indexInformation,\n  profilingInfo,\n  validateDatabaseName\n};\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst removeDocuments = require('./common_functions').removeDocuments;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\n\nclass DeleteManyOperation extends OperationBase {\n  constructor(collection, filter, options) {\n    super(options);\n\n    this.collection = collection;\n    this.filter = filter;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const filter = this.filter;\n    const options = this.options;\n\n    options.single = false;\n    removeDocuments(coll, filter, options, (err, r) => {\n      if (callback == null) return;\n      if (err && callback) return callback(err);\n      if (r == null) return callback(null, { result: { ok: 1 } });\n\n      // If an explain operation was executed, don't process the server results\n      if (this.explain) return callback(undefined, r.result);\n\n      r.deletedCount = r.result.n;\n      callback(null, r);\n    });\n  }\n}\n\ndefineAspects(DeleteManyOperation, [Aspect.EXPLAINABLE]);\n\nmodule.exports = DeleteManyOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst removeDocuments = require('./common_functions').removeDocuments;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\n\nclass DeleteOneOperation extends OperationBase {\n  constructor(collection, filter, options) {\n    super(options);\n\n    this.collection = collection;\n    this.filter = filter;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const filter = this.filter;\n    const options = this.options;\n\n    options.single = true;\n    removeDocuments(coll, filter, options, (err, r) => {\n      if (callback == null) return;\n      if (err && callback) return callback(err);\n      if (r == null) return callback(null, { result: { ok: 1 } });\n\n      // If an explain operation was executed, don't process the server results\n      if (this.explain) return callback(undefined, r.result);\n\n      r.deletedCount = r.result.n;\n      callback(null, r);\n    });\n  }\n}\n\ndefineAspects(DeleteOneOperation, [Aspect.EXPLAINABLE]);\n\nmodule.exports = DeleteOneOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperationV2 = require('./command_v2');\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst MongoError = require('../error').MongoError;\n\n/**\n * Return a list of distinct values for the given key across a collection.\n *\n * @class\n * @property {Collection} a Collection instance.\n * @property {string} key Field of the document to find distinct values for.\n * @property {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @property {object} [options] Optional settings. See Collection.prototype.distinct for a list of options.\n */\nclass DistinctOperation extends CommandOperationV2 {\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param {Collection} a Collection instance.\n   * @param {string} key Field of the document to find distinct values for.\n   * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n   * @param {object} [options] Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  constructor(collection, key, query, options) {\n    super(collection, options);\n\n    this.collection = collection;\n    this.key = key;\n    this.query = query;\n  }\n\n  /**\n   * Execute the operation.\n   *\n   * @param {Collection~resultCallback} [callback] The command result callback\n   */\n  execute(server, callback) {\n    const coll = this.collection;\n    const key = this.key;\n    const query = this.query;\n    const options = this.options;\n\n    // Distinct command\n    const cmd = {\n      distinct: coll.collectionName,\n      key: key,\n      query: query\n    };\n\n    // Add maxTimeMS if defined\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(cmd, coll, options);\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(cmd, coll, options);\n    } catch (err) {\n      return callback(err, null);\n    }\n\n    if (this.explain && maxWireVersion(server) < 4) {\n      callback(new MongoError(`server does not support explain on distinct`));\n      return;\n    }\n\n    super.executeCommand(server, cmd, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, this.options.full || this.explain ? result : result.values);\n    });\n  }\n}\n\ndefineAspects(DistinctOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION,\n  Aspect.EXPLAINABLE\n]);\n\nmodule.exports = DistinctOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst CommandOperation = require('./command');\nconst defineAspects = require('./operation').defineAspects;\nconst handleCallback = require('../utils').handleCallback;\n\nclass DropOperation extends CommandOperation {\n  constructor(db, options) {\n    const finalOptions = Object.assign({}, options, db.s.options);\n\n    if (options.session) {\n      finalOptions.session = options.session;\n    }\n\n    super(db, finalOptions);\n  }\n\n  execute(callback) {\n    super.execute((err, result) => {\n      if (err) return handleCallback(callback, err);\n      if (result.ok) return handleCallback(callback, null, true);\n      handleCallback(callback, null, false);\n    });\n  }\n}\n\ndefineAspects(DropOperation, Aspect.WRITE_OPERATION);\n\nclass DropCollectionOperation extends DropOperation {\n  constructor(db, name, options) {\n    super(db, options);\n\n    this.name = name;\n    this.namespace = `${db.namespace}.${name}`;\n  }\n\n  _buildCommand() {\n    return { drop: this.name };\n  }\n}\n\nclass DropDatabaseOperation extends DropOperation {\n  _buildCommand() {\n    return { dropDatabase: 1 };\n  }\n}\n\nmodule.exports = {\n  DropOperation,\n  DropCollectionOperation,\n  DropDatabaseOperation\n};\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperation = require('./command');\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst handleCallback = require('../utils').handleCallback;\n\nclass DropIndexOperation extends CommandOperation {\n  constructor(collection, indexName, options) {\n    super(collection.s.db, options, collection);\n\n    this.collection = collection;\n    this.indexName = indexName;\n  }\n\n  _buildCommand() {\n    const collection = this.collection;\n    const indexName = this.indexName;\n    const options = this.options;\n\n    let cmd = { dropIndexes: collection.collectionName, index: indexName };\n\n    // Decorate command with writeConcern if supported\n    cmd = applyWriteConcern(cmd, { db: collection.s.db, collection }, options);\n\n    return cmd;\n  }\n\n  execute(callback) {\n    // Execute command\n    super.execute((err, result) => {\n      if (typeof callback !== 'function') return;\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result);\n    });\n  }\n}\n\ndefineAspects(DropIndexOperation, Aspect.WRITE_OPERATION);\n\nmodule.exports = DropIndexOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst DropIndexOperation = require('./drop_index');\nconst handleCallback = require('../utils').handleCallback;\n\nclass DropIndexesOperation extends DropIndexOperation {\n  constructor(collection, options) {\n    super(collection, '*', options);\n  }\n\n  execute(callback) {\n    super.execute(err => {\n      if (err) return handleCallback(callback, err, false);\n      handleCallback(callback, null, true);\n    });\n  }\n}\n\ndefineAspects(DropIndexesOperation, Aspect.WRITE_OPERATION);\n\nmodule.exports = DropIndexesOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperationV2 = require('./command_v2');\n\nclass EstimatedDocumentCountOperation extends CommandOperationV2 {\n  constructor(collection, query, options) {\n    if (typeof options === 'undefined') {\n      options = query;\n      query = undefined;\n    }\n\n    super(collection, options);\n    this.collectionName = collection.s.namespace.collection;\n    if (query) {\n      this.query = query;\n    }\n  }\n\n  execute(server, callback) {\n    const options = this.options;\n    const cmd = { count: this.collectionName };\n\n    if (this.query) {\n      cmd.query = this.query;\n    }\n\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n\n    if (options.hint) {\n      cmd.hint = options.hint;\n    }\n\n    super.executeCommand(server, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, response.n);\n    });\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = EstimatedDocumentCountOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('../core').MongoError;\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nclass ExecuteDbAdminCommandOperation extends OperationBase {\n  constructor(db, selector, options) {\n    super(options);\n\n    this.db = db;\n    this.selector = selector;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const selector = this.selector;\n    const options = this.options;\n\n    const namespace = new MongoDBNamespace('admin', '$cmd');\n    db.s.topology.command(namespace, selector, options, (err, result) => {\n      // Did the user destroy the topology\n      if (db.serverConfig && db.serverConfig.isDestroyed()) {\n        return callback(new MongoError('topology was destroyed'));\n      }\n\n      if (err) return handleCallback(callback, err);\n      handleCallback(callback, null, result.result);\n    });\n  }\n}\n\nmodule.exports = ExecuteDbAdminCommandOperation;\n","'use strict';\n\nconst MongoError = require('../core/error').MongoError;\nconst Aspect = require('./operation').Aspect;\nconst OperationBase = require('./operation').OperationBase;\nconst ReadPreference = require('../core/topologies/read_preference');\nconst isRetryableError = require('../core/error').isRetryableError;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst isUnifiedTopology = require('../core/utils').isUnifiedTopology;\n\n/**\n * Executes the given operation with provided arguments.\n *\n * This method reduces large amounts of duplication in the entire codebase by providing\n * a single point for determining whether callbacks or promises should be used. Additionally\n * it allows for a single point of entry to provide features such as implicit sessions, which\n * are required by the Driver Sessions specification in the event that a ClientSession is\n * not provided\n *\n * @param {object} topology The topology to execute this operation on\n * @param {Operation} operation The operation to execute\n * @param {function} callback The command result callback\n */\nfunction executeOperation(topology, operation, callback) {\n  if (topology == null) {\n    throw new TypeError('This method requires a valid topology instance');\n  }\n\n  if (!(operation instanceof OperationBase)) {\n    throw new TypeError('This method requires a valid operation instance');\n  }\n\n  if (isUnifiedTopology(topology) && topology.shouldCheckForSessionSupport()) {\n    return selectServerForSessionSupport(topology, operation, callback);\n  }\n\n  const Promise = topology.s.promiseLibrary;\n\n  // The driver sessions spec mandates that we implicitly create sessions for operations\n  // that are not explicitly provided with a session.\n  let session, owner;\n  if (topology.hasSessionSupport()) {\n    if (operation.session == null) {\n      owner = Symbol();\n      session = topology.startSession({ owner });\n      operation.session = session;\n    } else if (operation.session.hasEnded) {\n      throw new MongoError('Use of expired sessions is not permitted');\n    }\n  }\n\n  let result;\n  if (typeof callback !== 'function') {\n    result = new Promise((resolve, reject) => {\n      callback = (err, res) => {\n        if (err) return reject(err);\n        resolve(res);\n      };\n    });\n  }\n\n  function executeCallback(err, result) {\n    if (session && session.owner === owner) {\n      session.endSession();\n      if (operation.session === session) {\n        operation.clearSession();\n      }\n    }\n\n    callback(err, result);\n  }\n\n  try {\n    if (operation.hasAspect(Aspect.EXECUTE_WITH_SELECTION)) {\n      executeWithServerSelection(topology, operation, executeCallback);\n    } else {\n      operation.execute(executeCallback);\n    }\n  } catch (e) {\n    if (session && session.owner === owner) {\n      session.endSession();\n      if (operation.session === session) {\n        operation.clearSession();\n      }\n    }\n\n    throw e;\n  }\n\n  return result;\n}\n\nfunction supportsRetryableReads(server) {\n  return maxWireVersion(server) >= 6;\n}\n\nfunction executeWithServerSelection(topology, operation, callback) {\n  const readPreference = operation.readPreference || ReadPreference.primary;\n  const inTransaction = operation.session && operation.session.inTransaction();\n\n  if (inTransaction && !readPreference.equals(ReadPreference.primary)) {\n    callback(\n      new MongoError(\n        `Read preference in a transaction must be primary, not: ${readPreference.mode}`\n      )\n    );\n\n    return;\n  }\n\n  const serverSelectionOptions = {\n    readPreference,\n    session: operation.session\n  };\n\n  function callbackWithRetry(err, result) {\n    if (err == null) {\n      return callback(null, result);\n    }\n\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    // select a new server, and attempt to retry the operation\n    topology.selectServer(serverSelectionOptions, (err, server) => {\n      if (err || !supportsRetryableReads(server)) {\n        callback(err, null);\n        return;\n      }\n\n      operation.execute(server, callback);\n    });\n  }\n\n  // select a server, and execute the operation against it\n  topology.selectServer(serverSelectionOptions, (err, server) => {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    const shouldRetryReads =\n      topology.s.options.retryReads !== false &&\n      operation.session &&\n      !inTransaction &&\n      supportsRetryableReads(server) &&\n      operation.canRetryRead;\n\n    if (operation.hasAspect(Aspect.RETRYABLE) && shouldRetryReads) {\n      operation.execute(server, callbackWithRetry);\n      return;\n    }\n\n    operation.execute(server, callback);\n  });\n}\n\n// TODO: This is only supported for unified topology, it should go away once\n//       we remove support for legacy topology types.\nfunction selectServerForSessionSupport(topology, operation, callback) {\n  const Promise = topology.s.promiseLibrary;\n\n  let result;\n  if (typeof callback !== 'function') {\n    result = new Promise((resolve, reject) => {\n      callback = (err, result) => {\n        if (err) return reject(err);\n        resolve(result);\n      };\n    });\n  }\n\n  topology.selectServer(ReadPreference.primaryPreferred, err => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    executeOperation(topology, operation, callback);\n  });\n\n  return result;\n}\n\nmodule.exports = executeOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst ReadPreference = require('../core').ReadPreference;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst MongoError = require('../core/error').MongoError;\n\nclass FindOperation extends OperationBase {\n  constructor(collection, ns, command, options) {\n    super(options);\n\n    this.ns = ns;\n    this.cmd = command;\n    this.readPreference = ReadPreference.resolve(collection, this.options);\n  }\n\n  execute(server, callback) {\n    // copied from `CommandOperationV2`, to be subclassed in the future\n    this.server = server;\n\n    if (typeof this.cmd.allowDiskUse !== 'undefined' && maxWireVersion(server) < 4) {\n      callback(new MongoError('The `allowDiskUse` option is not supported on MongoDB < 3.2'));\n      return;\n    }\n\n    if (this.explain) {\n      // We need to manually ensure explain is in the options.\n      this.options.explain = this.explain.verbosity;\n    }\n\n    // TOOD: use `MongoDBNamespace` through and through\n    const cursorState = this.cursorState || {};\n    server.query(this.ns.toString(), this.cmd, cursorState, this.options, callback);\n  }\n}\n\ndefineAspects(FindOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION,\n  Aspect.EXPLAINABLE\n]);\n\nmodule.exports = FindOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst applyRetryableWrites = require('../utils').applyRetryableWrites;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst executeCommand = require('./db_ops').executeCommand;\nconst formattedOrderClause = require('../utils').formattedOrderClause;\nconst handleCallback = require('../utils').handleCallback;\nconst ReadPreference = require('../core').ReadPreference;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst MongoError = require('../error').MongoError;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst decorateWithExplain = require('../utils').decorateWithExplain;\n\nclass FindAndModifyOperation extends OperationBase {\n  constructor(collection, query, sort, doc, options) {\n    super(options);\n\n    this.collection = collection;\n    this.query = query;\n    this.sort = sort;\n    this.doc = doc;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const query = this.query;\n    const sort = formattedOrderClause(this.sort);\n    const doc = this.doc;\n    let options = this.options;\n\n    // Create findAndModify command object\n    let queryObject = {\n      findAndModify: coll.collectionName,\n      query: query\n    };\n\n    if (sort) {\n      queryObject.sort = sort;\n    }\n\n    queryObject.new = options.new ? true : false;\n    queryObject.remove = options.remove ? true : false;\n    queryObject.upsert = options.upsert ? true : false;\n\n    const projection = options.projection || options.fields;\n\n    if (projection) {\n      queryObject.fields = projection;\n    }\n\n    if (options.arrayFilters) {\n      queryObject.arrayFilters = options.arrayFilters;\n    }\n\n    if (doc && !options.remove) {\n      queryObject.update = doc;\n    }\n\n    if (options.maxTimeMS) queryObject.maxTimeMS = options.maxTimeMS;\n\n    // Either use override on the function, or go back to default on either the collection\n    // level or db\n    options.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n    // No check on the documents\n    options.checkKeys = false;\n\n    // Final options for retryable writes and write concern\n    options = applyRetryableWrites(options, coll.s.db);\n    options = applyWriteConcern(options, { db: coll.s.db, collection: coll }, options);\n\n    // Decorate the findAndModify command with the write Concern\n    if (options.writeConcern) {\n      queryObject.writeConcern = options.writeConcern;\n    }\n\n    // Have we specified bypassDocumentValidation\n    if (options.bypassDocumentValidation === true) {\n      queryObject.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    options.readPreference = ReadPreference.primary;\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(queryObject, coll, options);\n    } catch (err) {\n      return callback(err, null);\n    }\n\n    if (options.hint) {\n      // TODO: once this method becomes a CommandOperationV2 we will have the server\n      // in place to check.\n      const unacknowledgedWrite = options.writeConcern && options.writeConcern.w === 0;\n      if (unacknowledgedWrite || maxWireVersion(coll.s.topology) < 8) {\n        callback(\n          new MongoError('The current topology does not support a hint on findAndModify commands')\n        );\n\n        return;\n      }\n\n      queryObject.hint = options.hint;\n    }\n\n    if (this.explain) {\n      if (maxWireVersion(coll.s.topology) < 4) {\n        callback(new MongoError(`server does not support explain on findAndModify`));\n        return;\n      }\n      queryObject = decorateWithExplain(queryObject, this.explain);\n    }\n\n    // Execute the command\n    executeCommand(coll.s.db, queryObject, options, (err, result) => {\n      if (err) return handleCallback(callback, err, null);\n\n      return handleCallback(callback, null, result);\n    });\n  }\n}\n\ndefineAspects(FindAndModifyOperation, [Aspect.EXPLAINABLE]);\n\nmodule.exports = FindAndModifyOperation;\n","'use strict';\n\nconst handleCallback = require('../utils').handleCallback;\nconst OperationBase = require('./operation').OperationBase;\nconst toError = require('../utils').toError;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\n\nclass FindOneOperation extends OperationBase {\n  constructor(collection, query, options) {\n    super(options);\n\n    this.collection = collection;\n    this.query = query;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const query = this.query;\n    const options = this.options;\n\n    try {\n      const cursor = coll\n        .find(query, options)\n        .limit(-1)\n        .batchSize(1);\n\n      // Return the item\n      cursor.next((err, item) => {\n        if (err != null) return handleCallback(callback, toError(err), null);\n        handleCallback(callback, null, item);\n      });\n    } catch (e) {\n      callback(e);\n    }\n  }\n}\n\ndefineAspects(FindOneOperation, [Aspect.EXPLAINABLE]);\n\nmodule.exports = FindOneOperation;\n","'use strict';\n\nconst FindAndModifyOperation = require('./find_and_modify');\n\nclass FindOneAndDeleteOperation extends FindAndModifyOperation {\n  constructor(collection, filter, options) {\n    // Final options\n    const finalOptions = Object.assign({}, options);\n    finalOptions.fields = options.projection;\n    finalOptions.remove = true;\n\n    // Basic validation\n    if (filter == null || typeof filter !== 'object') {\n      throw new TypeError('Filter parameter must be an object');\n    }\n\n    super(collection, filter, finalOptions.sort, null, finalOptions);\n  }\n}\n\nmodule.exports = FindOneAndDeleteOperation;\n","'use strict';\n\nconst FindAndModifyOperation = require('./find_and_modify');\nconst hasAtomicOperators = require('../utils').hasAtomicOperators;\n\nclass FindOneAndReplaceOperation extends FindAndModifyOperation {\n  constructor(collection, filter, replacement, options) {\n    // Final options\n    const finalOptions = Object.assign({}, options);\n    finalOptions.fields = options.projection;\n    finalOptions.update = true;\n    finalOptions.new = options.returnOriginal !== void 0 ? !options.returnOriginal : false;\n    finalOptions.upsert = options.upsert !== void 0 ? !!options.upsert : false;\n\n    if (filter == null || typeof filter !== 'object') {\n      throw new TypeError('Filter parameter must be an object');\n    }\n\n    if (replacement == null || typeof replacement !== 'object') {\n      throw new TypeError('Replacement parameter must be an object');\n    }\n\n    if (hasAtomicOperators(replacement)) {\n      throw new TypeError('Replacement document must not contain atomic operators');\n    }\n\n    super(collection, filter, finalOptions.sort, replacement, finalOptions);\n  }\n}\n\nmodule.exports = FindOneAndReplaceOperation;\n","'use strict';\n\nconst FindAndModifyOperation = require('./find_and_modify');\nconst hasAtomicOperators = require('../utils').hasAtomicOperators;\n\nclass FindOneAndUpdateOperation extends FindAndModifyOperation {\n  constructor(collection, filter, update, options) {\n    // Final options\n    const finalOptions = Object.assign({}, options);\n    finalOptions.fields = options.projection;\n    finalOptions.update = true;\n    finalOptions.new =\n      typeof options.returnOriginal === 'boolean' ? !options.returnOriginal : false;\n    finalOptions.upsert = typeof options.upsert === 'boolean' ? options.upsert : false;\n\n    if (filter == null || typeof filter !== 'object') {\n      throw new TypeError('Filter parameter must be an object');\n    }\n\n    if (update == null || typeof update !== 'object') {\n      throw new TypeError('Update parameter must be an object');\n    }\n\n    if (!hasAtomicOperators(update)) {\n      throw new TypeError('Update document requires atomic operators');\n    }\n\n    super(collection, filter, finalOptions.sort, update, finalOptions);\n  }\n}\n\nmodule.exports = FindOneAndUpdateOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst OperationBase = require('./operation').OperationBase;\nconst decorateCommand = require('../utils').decorateCommand;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\nconst executeCommand = require('./db_ops').executeCommand;\nconst handleCallback = require('../utils').handleCallback;\nconst ReadPreference = require('../core').ReadPreference;\nconst toError = require('../utils').toError;\n\n/**\n * Execute a geo search using a geo haystack index on a collection.\n *\n * @class\n * @property {Collection} a Collection instance.\n * @property {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @property {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @property {object} [options] Optional settings. See Collection.prototype.geoHaystackSearch for a list of options.\n */\nclass GeoHaystackSearchOperation extends OperationBase {\n  /**\n   * Construct a GeoHaystackSearch operation.\n   *\n   * @param {Collection} a Collection instance.\n   * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n   * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n   * @param {object} [options] Optional settings. See Collection.prototype.geoHaystackSearch for a list of options.\n   */\n  constructor(collection, x, y, options) {\n    super(options);\n\n    this.collection = collection;\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Execute the operation.\n   *\n   * @param {Collection~resultCallback} [callback] The command result callback\n   */\n  execute(callback) {\n    const coll = this.collection;\n    const x = this.x;\n    const y = this.y;\n    let options = this.options;\n\n    // Build command object\n    let commandObject = {\n      geoSearch: coll.collectionName,\n      near: [x, y]\n    };\n\n    // Remove read preference from hash if it exists\n    commandObject = decorateCommand(commandObject, options, ['readPreference', 'session']);\n\n    options = Object.assign({}, options);\n    // Ensure we have the right read preference inheritance\n    options.readPreference = ReadPreference.resolve(coll, options);\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(commandObject, coll, options);\n\n    // Execute the command\n    executeCommand(coll.s.db, commandObject, options, (err, res) => {\n      if (err) return handleCallback(callback, err);\n      if (res.err || res.errmsg) handleCallback(callback, toError(res));\n      // should we only be returning res.results here? Not sure if the user\n      // should see the other return information\n      handleCallback(callback, null, res);\n    });\n  }\n}\n\ndefineAspects(GeoHaystackSearchOperation, Aspect.READ_OPERATION);\n\nmodule.exports = GeoHaystackSearchOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst handleCallback = require('../utils').handleCallback;\nconst indexInformationDb = require('./db_ops').indexInformation;\n\nclass IndexExistsOperation extends OperationBase {\n  constructor(collection, indexes, options) {\n    super(options);\n\n    this.collection = collection;\n    this.indexes = indexes;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const indexes = this.indexes;\n    const options = this.options;\n\n    indexInformationDb(coll.s.db, coll.collectionName, options, (err, indexInformation) => {\n      // If we have an error return\n      if (err != null) return handleCallback(callback, err, null);\n      // Let's check for the index names\n      if (!Array.isArray(indexes))\n        return handleCallback(callback, null, indexInformation[indexes] != null);\n      // Check in list of indexes\n      for (let i = 0; i < indexes.length; i++) {\n        if (indexInformation[indexes[i]] == null) {\n          return handleCallback(callback, null, false);\n        }\n      }\n\n      // All keys found return true\n      return handleCallback(callback, null, true);\n    });\n  }\n}\n\nmodule.exports = IndexExistsOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst indexInformation = require('./common_functions').indexInformation;\n\nclass IndexInformationOperation extends OperationBase {\n  constructor(db, name, options) {\n    super(options);\n\n    this.db = db;\n    this.name = name;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n\n    indexInformation(db, name, options, callback);\n  }\n}\n\nmodule.exports = IndexInformationOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst indexInformation = require('./common_functions').indexInformation;\n\nclass IndexesOperation extends OperationBase {\n  constructor(collection, options) {\n    super(options);\n\n    this.collection = collection;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    let options = this.options;\n\n    options = Object.assign({}, { full: true }, options);\n    indexInformation(coll.s.db, coll.collectionName, options, callback);\n  }\n}\n\nmodule.exports = IndexesOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst BulkWriteOperation = require('./bulk_write');\nconst MongoError = require('../core').MongoError;\nconst prepareDocs = require('./common_functions').prepareDocs;\n\nclass InsertManyOperation extends OperationBase {\n  constructor(collection, docs, options) {\n    super(options);\n\n    this.collection = collection;\n    this.docs = docs;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    let docs = this.docs;\n    const options = this.options;\n\n    if (!Array.isArray(docs)) {\n      return callback(\n        MongoError.create({ message: 'docs parameter must be an array of documents', driver: true })\n      );\n    }\n\n    // If keep going set unordered\n    options['serializeFunctions'] = options['serializeFunctions'] || coll.s.serializeFunctions;\n\n    docs = prepareDocs(coll, docs, options);\n\n    // Generate the bulk write operations\n    const operations = [\n      {\n        insertMany: docs\n      }\n    ];\n\n    const bulkWriteOperation = new BulkWriteOperation(coll, operations, options);\n\n    bulkWriteOperation.execute((err, result) => {\n      if (err) return callback(err, null);\n      callback(null, mapInsertManyResults(docs, result));\n    });\n  }\n}\n\nfunction mapInsertManyResults(docs, r) {\n  const finalResult = {\n    result: { ok: 1, n: r.insertedCount },\n    ops: docs,\n    insertedCount: r.insertedCount,\n    insertedIds: r.insertedIds\n  };\n\n  if (r.getLastOp()) {\n    finalResult.result.opTime = r.getLastOp();\n  }\n\n  return finalResult;\n}\n\nmodule.exports = InsertManyOperation;\n","'use strict';\n\nconst MongoError = require('../core').MongoError;\nconst OperationBase = require('./operation').OperationBase;\nconst insertDocuments = require('./common_functions').insertDocuments;\n\nclass InsertOneOperation extends OperationBase {\n  constructor(collection, doc, options) {\n    super(options);\n\n    this.collection = collection;\n    this.doc = doc;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const doc = this.doc;\n    const options = this.options;\n\n    if (Array.isArray(doc)) {\n      return callback(\n        MongoError.create({ message: 'doc parameter must be an object', driver: true })\n      );\n    }\n\n    insertDocuments(coll, [doc], options, (err, r) => {\n      if (callback == null) return;\n      if (err && callback) return callback(err);\n      // Workaround for pre 2.6 servers\n      if (r == null) return callback(null, { result: { ok: 1 } });\n      // Add values to top level to ensure crud spec compatibility\n      r.insertedCount = r.result.n;\n      r.insertedId = doc._id;\n      if (callback) callback(null, r);\n    });\n  }\n}\n\nmodule.exports = InsertOneOperation;\n","'use strict';\n\nconst OptionsOperation = require('./options_operation');\nconst handleCallback = require('../utils').handleCallback;\n\nclass IsCappedOperation extends OptionsOperation {\n  constructor(collection, options) {\n    super(collection, options);\n  }\n\n  execute(callback) {\n    super.execute((err, document) => {\n      if (err) return handleCallback(callback, err);\n      handleCallback(callback, null, !!(document && document.capped));\n    });\n  }\n}\n\nmodule.exports = IsCappedOperation;\n","'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst CONSTANTS = require('../constants');\n\nconst LIST_COLLECTIONS_WIRE_VERSION = 3;\n\nfunction listCollectionsTransforms(databaseName) {\n  const matching = `${databaseName}.`;\n\n  return {\n    doc: doc => {\n      const index = doc.name.indexOf(matching);\n      // Remove database name if available\n      if (doc.name && index === 0) {\n        doc.name = doc.name.substr(index + matching.length);\n      }\n\n      return doc;\n    }\n  };\n}\n\nclass ListCollectionsOperation extends CommandOperationV2 {\n  constructor(db, filter, options) {\n    super(db, options, { fullResponse: true });\n\n    this.db = db;\n    this.filter = filter;\n    this.nameOnly = !!this.options.nameOnly;\n\n    if (typeof this.options.batchSize === 'number') {\n      this.batchSize = this.options.batchSize;\n    }\n  }\n\n  execute(server, callback) {\n    if (maxWireVersion(server) < LIST_COLLECTIONS_WIRE_VERSION) {\n      let filter = this.filter;\n      const databaseName = this.db.s.namespace.db;\n\n      // If we have legacy mode and have not provided a full db name filter it\n      if (\n        typeof filter.name === 'string' &&\n        !new RegExp('^' + databaseName + '\\\\.').test(filter.name)\n      ) {\n        filter = Object.assign({}, filter);\n        filter.name = this.db.s.namespace.withCollection(filter.name).toString();\n      }\n\n      // No filter, filter by current database\n      if (filter == null) {\n        filter.name = `/${databaseName}/`;\n      }\n\n      // Rewrite the filter to use $and to filter out indexes\n      if (filter.name) {\n        filter = { $and: [{ name: filter.name }, { name: /^((?!\\$).)*$/ }] };\n      } else {\n        filter = { name: /^((?!\\$).)*$/ };\n      }\n\n      const transforms = listCollectionsTransforms(databaseName);\n      server.query(\n        `${databaseName}.${CONSTANTS.SYSTEM_NAMESPACE_COLLECTION}`,\n        { query: filter },\n        { batchSize: this.batchSize || 1000 },\n        {},\n        (err, result) => {\n          if (\n            result &&\n            result.message &&\n            result.message.documents &&\n            Array.isArray(result.message.documents)\n          ) {\n            result.message.documents = result.message.documents.map(transforms.doc);\n          }\n\n          callback(err, result);\n        }\n      );\n\n      return;\n    }\n\n    const command = {\n      listCollections: 1,\n      filter: this.filter,\n      cursor: this.batchSize ? { batchSize: this.batchSize } : {},\n      nameOnly: this.nameOnly\n    };\n\n    return super.executeCommand(server, command, callback);\n  }\n}\n\ndefineAspects(ListCollectionsOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = ListCollectionsOperation;\n","'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nclass ListDatabasesOperation extends CommandOperationV2 {\n  constructor(db, options) {\n    super(db, options);\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  execute(server, callback) {\n    const cmd = { listDatabases: 1 };\n    if (this.options.nameOnly) {\n      cmd.nameOnly = Number(cmd.nameOnly);\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    }\n\n    super.executeCommand(server, cmd, callback);\n  }\n}\n\ndefineAspects(ListDatabasesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = ListDatabasesOperation;\n","'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\nconst LIST_INDEXES_WIRE_VERSION = 3;\n\nclass ListIndexesOperation extends CommandOperationV2 {\n  constructor(collection, options) {\n    super(collection, options, { fullResponse: true });\n\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  execute(server, callback) {\n    const serverWireVersion = maxWireVersion(server);\n    if (serverWireVersion < LIST_INDEXES_WIRE_VERSION) {\n      const systemIndexesNS = this.collectionNamespace.withCollection('system.indexes').toString();\n      const collectionNS = this.collectionNamespace.toString();\n\n      server.query(systemIndexesNS, { query: { ns: collectionNS } }, {}, this.options, callback);\n      return;\n    }\n\n    const cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};\n    super.executeCommand(\n      server,\n      { listIndexes: this.collectionNamespace.collection, cursor },\n      callback\n    );\n  }\n}\n\ndefineAspects(ListIndexesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXECUTE_WITH_SELECTION\n]);\n\nmodule.exports = ListIndexesOperation;\n","'use strict';\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst Code = require('../core').BSON.Code;\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\nconst executeCommand = require('./db_ops').executeCommand;\nconst handleCallback = require('../utils').handleCallback;\nconst isObject = require('../utils').isObject;\nconst loadDb = require('../dynamic_loaders').loadDb;\nconst OperationBase = require('./operation').OperationBase;\nconst ReadPreference = require('../core').ReadPreference;\nconst toError = require('../utils').toError;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst decorateWithExplain = require('../utils').decorateWithExplain;\nconst maxWireVersion = require('../core/utils').maxWireVersion;\nconst MongoError = require('../error').MongoError;\n\nconst exclusionList = [\n  'explain',\n  'readPreference',\n  'session',\n  'bypassDocumentValidation',\n  'w',\n  'wtimeout',\n  'j',\n  'writeConcern'\n];\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @class\n * @property {Collection} a Collection instance.\n * @property {(function|string)} map The mapping function.\n * @property {(function|string)} reduce The reduce function.\n * @property {object} [options] Optional settings. See Collection.prototype.mapReduce for a list of options.\n */\nclass MapReduceOperation extends OperationBase {\n  /**\n   * Constructs a MapReduce operation.\n   *\n   * @param {Collection} a Collection instance.\n   * @param {(function|string)} map The mapping function.\n   * @param {(function|string)} reduce The reduce function.\n   * @param {object} [options] Optional settings. See Collection.prototype.mapReduce for a list of options.\n   */\n  constructor(collection, map, reduce, options) {\n    super(options);\n\n    this.collection = collection;\n    this.map = map;\n    this.reduce = reduce;\n  }\n\n  /**\n   * Execute the operation.\n   *\n   * @param {Collection~resultCallback} [callback] The command result callback\n   */\n  execute(callback) {\n    const coll = this.collection;\n    const map = this.map;\n    const reduce = this.reduce;\n    let options = this.options;\n\n    let mapCommandHash = {\n      mapReduce: coll.collectionName,\n      map: map,\n      reduce: reduce\n    };\n\n    // Add any other options passed in\n    for (let n in options) {\n      if ('scope' === n) {\n        mapCommandHash[n] = processScope(options[n]);\n      } else {\n        // Only include if not in exclusion list\n        if (exclusionList.indexOf(n) === -1) {\n          mapCommandHash[n] = options[n];\n        }\n      }\n    }\n\n    options = Object.assign({}, options);\n\n    // Ensure we have the right read preference inheritance\n    options.readPreference = ReadPreference.resolve(coll, options);\n\n    // If we have a read preference and inline is not set as output fail hard\n    if (\n      options.readPreference !== false &&\n      options.readPreference !== 'primary' &&\n      options['out'] &&\n      options['out'].inline !== 1 &&\n      options['out'] !== 'inline'\n    ) {\n      // Force readPreference to primary\n      options.readPreference = 'primary';\n      // Decorate command with writeConcern if supported\n      applyWriteConcern(mapCommandHash, { db: coll.s.db, collection: coll }, options);\n    } else {\n      decorateWithReadConcern(mapCommandHash, coll, options);\n    }\n\n    // Is bypassDocumentValidation specified\n    if (options.bypassDocumentValidation === true) {\n      mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(mapCommandHash, coll, options);\n    } catch (err) {\n      return callback(err, null);\n    }\n\n    if (this.explain) {\n      if (maxWireVersion(coll.s.topology) < 9) {\n        callback(new MongoError(`server does not support explain on mapReduce`));\n        return;\n      }\n      mapCommandHash = decorateWithExplain(mapCommandHash, this.explain);\n    }\n\n    // Execute command\n    executeCommand(coll.s.db, mapCommandHash, options, (err, result) => {\n      if (err) return handleCallback(callback, err);\n      // Check if we have an error\n      if (1 !== result.ok || result.err || result.errmsg) {\n        return handleCallback(callback, toError(result));\n      }\n\n      // If an explain operation was executed, don't process the server results\n      if (this.explain) return callback(undefined, result);\n\n      // Create statistics value\n      const stats = {};\n      if (result.timeMillis) stats['processtime'] = result.timeMillis;\n      if (result.counts) stats['counts'] = result.counts;\n      if (result.timing) stats['timing'] = result.timing;\n\n      // invoked with inline?\n      if (result.results) {\n        // If we wish for no verbosity\n        if (options['verbose'] == null || !options['verbose']) {\n          return handleCallback(callback, null, result.results);\n        }\n\n        return handleCallback(callback, null, { results: result.results, stats: stats });\n      }\n\n      // The returned collection\n      let collection = null;\n\n      // If we have an object it's a different db\n      if (result.result != null && typeof result.result === 'object') {\n        const doc = result.result;\n        // Return a collection from another db\n        let Db = loadDb();\n        collection = new Db(doc.db, coll.s.db.s.topology, coll.s.db.s.options).collection(\n          doc.collection\n        );\n      } else {\n        // Create a collection object that wraps the result collection\n        collection = coll.s.db.collection(result.result);\n      }\n\n      // If we wish for no verbosity\n      if (options['verbose'] == null || !options['verbose']) {\n        return handleCallback(callback, err, collection);\n      }\n\n      // Return stats as third set of values\n      handleCallback(callback, err, { collection: collection, stats: stats });\n    });\n  }\n}\n\n/**\n * Functions that are passed as scope args must\n * be converted to Code instances.\n * @ignore\n */\nfunction processScope(scope) {\n  if (!isObject(scope) || scope._bsontype === 'ObjectID') {\n    return scope;\n  }\n\n  const keys = Object.keys(scope);\n  let key;\n  const new_scope = {};\n\n  for (let i = keys.length - 1; i >= 0; i--) {\n    key = keys[i];\n    if ('function' === typeof scope[key]) {\n      new_scope[key] = new Code(String(scope[key]));\n    } else {\n      new_scope[key] = processScope(scope[key]);\n    }\n  }\n\n  return new_scope;\n}\n\ndefineAspects(MapReduceOperation, [Aspect.EXPLAINABLE]);\n\nmodule.exports = MapReduceOperation;\n","'use strict';\n\nconst Explain = require('../explain').Explain;\nconst MongoError = require('../core').MongoError;\n\nconst Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXECUTE_WITH_SELECTION: Symbol('EXECUTE_WITH_SELECTION'),\n  NO_INHERIT_OPTIONS: Symbol('NO_INHERIT_OPTIONS'),\n  EXPLAINABLE: Symbol('EXPLAINABLE')\n};\n\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n */\nclass OperationBase {\n  constructor(options) {\n    this.options = Object.assign({}, options);\n\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      this.explain = Explain.fromOptions(options);\n    } else if (this.options.explain !== undefined) {\n      throw new MongoError(`explain is not supported on this command`);\n    }\n  }\n\n  hasAspect(aspect) {\n    if (this.constructor.aspects == null) {\n      return false;\n    }\n    return this.constructor.aspects.has(aspect);\n  }\n\n  set session(session) {\n    Object.assign(this.options, { session });\n  }\n\n  get session() {\n    return this.options.session;\n  }\n\n  clearSession() {\n    delete this.options.session;\n  }\n\n  get canRetryRead() {\n    return true;\n  }\n\n  execute() {\n    throw new TypeError('`execute` must be implemented for OperationBase subclasses');\n  }\n}\n\nfunction defineAspects(operation, aspects) {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n  return aspects;\n}\n\nmodule.exports = {\n  Aspect,\n  defineAspects,\n  OperationBase\n};\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('../core').MongoError;\n\nclass OptionsOperation extends OperationBase {\n  constructor(collection, options) {\n    super(options);\n\n    this.collection = collection;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const opts = this.options;\n\n    coll.s.db.listCollections({ name: coll.collectionName }, opts).toArray((err, collections) => {\n      if (err) return handleCallback(callback, err);\n      if (collections.length === 0) {\n        return handleCallback(\n          callback,\n          MongoError.create({ message: `collection ${coll.namespace} not found`, driver: true })\n        );\n      }\n\n      handleCallback(callback, err, collections[0].options || null);\n    });\n  }\n}\n\nmodule.exports = OptionsOperation;\n","'use strict';\n\nconst CommandOperation = require('./command');\n\nclass ProfilingLevelOperation extends CommandOperation {\n  constructor(db, command, options) {\n    super(db, options);\n  }\n\n  _buildCommand() {\n    const command = { profile: -1 };\n\n    return command;\n  }\n\n  execute(callback) {\n    super.execute((err, doc) => {\n      if (err == null && doc.ok === 1) {\n        const was = doc.was;\n        if (was === 0) return callback(null, 'off');\n        if (was === 1) return callback(null, 'slow_only');\n        if (was === 2) return callback(null, 'all');\n        return callback(new Error('Error: illegal profiling level value ' + was), null);\n      } else {\n        err != null ? callback(err, null) : callback(new Error('Error with profile command'), null);\n      }\n    });\n  }\n}\n\nmodule.exports = ProfilingLevelOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\nconst CommandOperationV2 = require('./command_v2');\nconst serverType = require('../core/sdam/common').serverType;\nconst ServerType = require('../core/sdam/common').ServerType;\nconst MongoError = require('../core').MongoError;\n\nclass ReIndexOperation extends CommandOperationV2 {\n  constructor(collection, options) {\n    super(collection, options);\n    this.collectionName = collection.collectionName;\n  }\n\n  execute(server, callback) {\n    if (serverType(server) !== ServerType.Standalone) {\n      callback(new MongoError(`reIndex can only be executed on standalone servers.`));\n      return;\n    }\n    super.executeCommand(server, { reIndex: this.collectionName }, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      callback(null, !!result.ok);\n    });\n  }\n}\n\ndefineAspects(ReIndexOperation, [Aspect.EXECUTE_WITH_SELECTION]);\n\nmodule.exports = ReIndexOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst CommandOperation = require('./command');\nconst defineAspects = require('./operation').defineAspects;\nconst handleCallback = require('../utils').handleCallback;\nconst WriteConcern = require('../write_concern');\n\nclass RemoveUserOperation extends CommandOperation {\n  constructor(db, username, options) {\n    const commandOptions = {};\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern != null) {\n      commandOptions.writeConcern = writeConcern;\n    }\n\n    if (options.dbName) {\n      commandOptions.dbName = options.dbName;\n    }\n\n    // Add maxTimeMS to options if set\n    if (typeof options.maxTimeMS === 'number') {\n      commandOptions.maxTimeMS = options.maxTimeMS;\n    }\n\n    super(db, commandOptions);\n\n    this.username = username;\n  }\n\n  _buildCommand() {\n    const username = this.username;\n\n    // Build the command to execute\n    const command = { dropUser: username };\n\n    return command;\n  }\n\n  execute(callback) {\n    // Attempt to execute command\n    super.execute((err, result) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, err, result.ok ? true : false);\n    });\n  }\n}\n\ndefineAspects(RemoveUserOperation, Aspect.WRITE_OPERATION);\n\nmodule.exports = RemoveUserOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst checkCollectionName = require('../utils').checkCollectionName;\nconst executeDbAdminCommand = require('./db_ops').executeDbAdminCommand;\nconst handleCallback = require('../utils').handleCallback;\nconst loadCollection = require('../dynamic_loaders').loadCollection;\nconst toError = require('../utils').toError;\n\nclass RenameOperation extends OperationBase {\n  constructor(collection, newName, options) {\n    super(options);\n\n    this.collection = collection;\n    this.newName = newName;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const newName = this.newName;\n    const options = this.options;\n\n    let Collection = loadCollection();\n    // Check the collection name\n    checkCollectionName(newName);\n    // Build the command\n    const renameCollection = coll.namespace;\n    const toCollection = coll.s.namespace.withCollection(newName).toString();\n    const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n    const cmd = { renameCollection: renameCollection, to: toCollection, dropTarget: dropTarget };\n\n    // Decorate command with writeConcern if supported\n    applyWriteConcern(cmd, { db: coll.s.db, collection: coll }, options);\n\n    // Execute against admin\n    executeDbAdminCommand(coll.s.db.admin().s.db, cmd, options, (err, doc) => {\n      if (err) return handleCallback(callback, err, null);\n      // We have an error\n      if (doc.errmsg) return handleCallback(callback, toError(doc), null);\n      try {\n        return handleCallback(\n          callback,\n          null,\n          new Collection(\n            coll.s.db,\n            coll.s.topology,\n            coll.s.namespace.db,\n            newName,\n            coll.s.pkFactory,\n            coll.s.options\n          )\n        );\n      } catch (err) {\n        return handleCallback(callback, toError(err), null);\n      }\n    });\n  }\n}\n\nmodule.exports = RenameOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst updateDocuments = require('./common_functions').updateDocuments;\nconst hasAtomicOperators = require('../utils').hasAtomicOperators;\n\nclass ReplaceOneOperation extends OperationBase {\n  constructor(collection, filter, replacement, options) {\n    super(options);\n\n    if (hasAtomicOperators(replacement)) {\n      throw new TypeError('Replacement document must not contain atomic operators');\n    }\n\n    this.collection = collection;\n    this.filter = filter;\n    this.replacement = replacement;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const filter = this.filter;\n    const replacement = this.replacement;\n    const options = this.options;\n\n    // Set single document update\n    options.multi = false;\n\n    // Execute update\n    updateDocuments(coll, filter, replacement, options, (err, r) =>\n      replaceCallback(err, r, replacement, callback)\n    );\n  }\n}\n\nfunction replaceCallback(err, r, doc, callback) {\n  if (callback == null) return;\n  if (err && callback) return callback(err);\n  if (r == null) return callback(null, { result: { ok: 1 } });\n\n  r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n  r.upsertedId =\n    Array.isArray(r.result.upserted) && r.result.upserted.length > 0\n      ? r.result.upserted[0] // FIXME(major): should be `r.result.upserted[0]._id`\n      : null;\n  r.upsertedCount =\n    Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n  r.matchedCount =\n    Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n  r.ops = [doc]; // TODO: Should we still have this?\n  if (callback) callback(null, r);\n}\n\nmodule.exports = ReplaceOneOperation;\n","'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\nconst defineAspects = require('./operation').defineAspects;\nconst Aspect = require('./operation').Aspect;\n\nclass RunCommandOperation extends CommandOperationV2 {\n  constructor(parent, command, options) {\n    super(parent, options);\n    this.command = command;\n  }\n  execute(server, callback) {\n    const command = this.command;\n    this.executeCommand(server, command, callback);\n  }\n}\ndefineAspects(RunCommandOperation, [Aspect.EXECUTE_WITH_SELECTION, Aspect.NO_INHERIT_OPTIONS]);\n\nmodule.exports = RunCommandOperation;\n","'use strict';\n\nconst CommandOperation = require('./command');\nconst levelValues = new Set(['off', 'slow_only', 'all']);\n\nclass SetProfilingLevelOperation extends CommandOperation {\n  constructor(db, level, options) {\n    let profile = 0;\n\n    if (level === 'off') {\n      profile = 0;\n    } else if (level === 'slow_only') {\n      profile = 1;\n    } else if (level === 'all') {\n      profile = 2;\n    }\n\n    super(db, options);\n    this.level = level;\n    this.profile = profile;\n  }\n\n  _buildCommand() {\n    const profile = this.profile;\n\n    // Set up the profile number\n    const command = { profile };\n\n    return command;\n  }\n\n  execute(callback) {\n    const level = this.level;\n\n    if (!levelValues.has(level)) {\n      return callback(new Error('Error: illegal profiling level value ' + level));\n    }\n\n    super.execute((err, doc) => {\n      if (err == null && doc.ok === 1) return callback(null, level);\n      return err != null\n        ? callback(err, null)\n        : callback(new Error('Error with profile command'), null);\n    });\n  }\n}\n\nmodule.exports = SetProfilingLevelOperation;\n","'use strict';\n\nconst Aspect = require('./operation').Aspect;\nconst CommandOperation = require('./command');\nconst defineAspects = require('./operation').defineAspects;\n\n/**\n * Get all the collection statistics.\n *\n * @class\n * @property {Collection} a Collection instance.\n * @property {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\n */\nclass StatsOperation extends CommandOperation {\n  /**\n   * Construct a Stats operation.\n   *\n   * @param {Collection} a Collection instance.\n   * @param {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\n   */\n  constructor(collection, options) {\n    super(collection.s.db, options, collection);\n  }\n\n  _buildCommand() {\n    const collection = this.collection;\n    const options = this.options;\n\n    // Build command object\n    const command = {\n      collStats: collection.collectionName\n    };\n\n    // Check if we have the scale value\n    if (options['scale'] != null) {\n      command['scale'] = options['scale'];\n    }\n\n    return command;\n  }\n}\n\ndefineAspects(StatsOperation, Aspect.READ_OPERATION);\n\nmodule.exports = StatsOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst updateDocuments = require('./common_functions').updateDocuments;\nconst hasAtomicOperators = require('../utils').hasAtomicOperators;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\n\nclass UpdateManyOperation extends OperationBase {\n  constructor(collection, filter, update, options) {\n    super(options);\n\n    if (!hasAtomicOperators(update)) {\n      throw new TypeError('Update document requires atomic operators');\n    }\n\n    this.collection = collection;\n    this.filter = filter;\n    this.update = update;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const filter = this.filter;\n    const update = this.update;\n    const options = this.options;\n\n    // Set single document update\n    options.multi = true;\n    // Execute update\n    updateDocuments(coll, filter, update, options, (err, r) => {\n      if (callback == null) return;\n      if (err) return callback(err);\n      if (r == null) return callback(null, { result: { ok: 1 } });\n\n      // If an explain operation was executed, don't process the server results\n      if (this.explain) return callback(undefined, r.result);\n\n      r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n      r.upsertedId =\n        Array.isArray(r.result.upserted) && r.result.upserted.length > 0\n          ? r.result.upserted[0] // FIXME(major): should be `r.result.upserted[0]._id`\n          : null;\n      r.upsertedCount =\n        Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n      r.matchedCount =\n        Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n      callback(null, r);\n    });\n  }\n}\n\ndefineAspects(UpdateManyOperation, [Aspect.EXPLAINABLE]);\n\nmodule.exports = UpdateManyOperation;\n","'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\nconst updateDocuments = require('./common_functions').updateDocuments;\nconst hasAtomicOperators = require('../utils').hasAtomicOperators;\nconst Aspect = require('./operation').Aspect;\nconst defineAspects = require('./operation').defineAspects;\n\nclass UpdateOneOperation extends OperationBase {\n  constructor(collection, filter, update, options) {\n    super(options);\n\n    if (!hasAtomicOperators(update)) {\n      throw new TypeError('Update document requires atomic operators');\n    }\n\n    this.collection = collection;\n    this.filter = filter;\n    this.update = update;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const filter = this.filter;\n    const update = this.update;\n    const options = this.options;\n\n    // Set single document update\n    options.multi = false;\n    // Execute update\n    updateDocuments(coll, filter, update, options, (err, r) => {\n      if (callback == null) return;\n      if (err) return callback(err);\n      if (r == null) return callback(null, { result: { ok: 1 } });\n\n      // If an explain operation was executed, don't process the server results\n      if (this.explain) return callback(undefined, r.result);\n\n      r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n      r.upsertedId =\n        Array.isArray(r.result.upserted) && r.result.upserted.length > 0\n          ? r.result.upserted[0] // FIXME(major): should be `r.result.upserted[0]._id`\n          : null;\n      r.upsertedCount =\n        Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n      r.matchedCount =\n        Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n      callback(null, r);\n    });\n  }\n}\n\ndefineAspects(UpdateOneOperation, [Aspect.EXPLAINABLE]);\n\nmodule.exports = UpdateOneOperation;\n","'use strict';\n\nconst CommandOperation = require('./command');\n\nclass ValidateCollectionOperation extends CommandOperation {\n  constructor(admin, collectionName, options) {\n    // Decorate command with extra options\n    let command = { validate: collectionName };\n    const keys = Object.keys(options);\n    for (let i = 0; i < keys.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(options, keys[i]) && keys[i] !== 'session') {\n        command[keys[i]] = options[keys[i]];\n      }\n    }\n\n    super(admin.s.db, options, null, command);\n    this.collectionName = collectionName;\n  }\n\n  execute(callback) {\n    const collectionName = this.collectionName;\n\n    super.execute((err, doc) => {\n      if (err != null) return callback(err, null);\n\n      if (doc.ok === 0) return callback(new Error('Error with validate command'), null);\n      if (doc.result != null && doc.result.constructor !== String)\n        return callback(new Error('Error with validation data'), null);\n      if (doc.result != null && doc.result.match(/exception|corrupt/) != null)\n        return callback(new Error('Error: invalid collection ' + collectionName), null);\n      if (doc.valid != null && !doc.valid)\n        return callback(new Error('Error: invalid collection ' + collectionName), null);\n\n      return callback(null, doc);\n    });\n  }\n}\n\nmodule.exports = ValidateCollectionOperation;\n","'use strict';\n\n/**\n * The **ReadConcern** class is a class that represents a MongoDB ReadConcern.\n * @class\n * @property {string} level The read concern level\n * @see https://docs.mongodb.com/manual/reference/read-concern/index.html\n */\nclass ReadConcern {\n  /**\n   * Constructs a ReadConcern from the read concern properties.\n   * @param {string} [level] The read concern level ({'local'|'available'|'majority'|'linearizable'|'snapshot'})\n   */\n  constructor(level) {\n    if (level != null) {\n      this.level = level;\n    }\n  }\n\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param {object} options The options object from which to extract the write concern.\n   * @return {ReadConcern}\n   */\n  static fromOptions(options) {\n    if (options == null) {\n      return;\n    }\n\n    if (options.readConcern) {\n      if (options.readConcern instanceof ReadConcern) {\n        return options.readConcern;\n      }\n\n      return new ReadConcern(options.readConcern.level);\n    }\n\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n  }\n\n  static get MAJORITY() {\n    return 'majority';\n  }\n\n  static get AVAILABLE() {\n    return 'available';\n  }\n\n  static get LINEARIZABLE() {\n    return 'linearizable';\n  }\n\n  static get SNAPSHOT() {\n    return 'snapshot';\n  }\n}\n\nmodule.exports = ReadConcern;\n","'use strict';\n\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst MongoError = require('../core').MongoError;\nconst CMongos = require('../core').Mongos;\nconst Cursor = require('../cursor');\nconst Server = require('./server');\nconst Store = require('./topology_base').Store;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is\n * used to construct connections.\n *\n * **Mongos Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'acceptableLatencyMS',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCRL',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'promiseLibrary',\n  'monitorCommands'\n];\n\n/**\n * Creates a new Mongos instance\n * @class\n * @deprecated\n * @param {Server[]} servers A seedlist of servers participating in the replicaset.\n * @param {object} [options] Optional settings.\n * @param {booelan} [options.ha=true] Turn on high availability monitoring.\n * @param {number} [options.haInterval=5000] Time between each replicaset status check.\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for MongoS proxy selection\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {boolean} [options.sslValidate=false] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCA] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.ciphers] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslCert] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslKey] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions] Socket options\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=120000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=10000] How long to wait for a connection to be established before timing out\n * @param {number} [options.socketOptions.socketTimeoutMS=0] How long a send or receive on a socket can take before timing out\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires Mongos#connect\n * @fires Mongos#ha\n * @fires Mongos#joined\n * @fires Mongos#left\n * @fires Mongos#fullsetup\n * @fires Mongos#open\n * @fires Mongos#close\n * @fires Mongos#error\n * @fires Mongos#timeout\n * @fires Mongos#parseError\n * @fires Mongos#commandStarted\n * @fires Mongos#commandSucceeded\n * @fires Mongos#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {Mongos} a Mongos instance.\n */\nclass Mongos extends TopologyBase {\n  constructor(servers, options) {\n    super();\n\n    options = options || {};\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Ensure all the instances are Server\n    for (var i = 0; i < servers.length; i++) {\n      if (!(servers[i] instanceof Server)) {\n        throw MongoError.create({\n          message: 'all seed list instances must be of the Server type',\n          driver: true\n        });\n      }\n    }\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Build seed list\n    var seedlist = servers.map(function(x) {\n      return { host: x.host, port: x.port };\n    });\n\n    // Get the reconnect option\n    var reconnect = typeof options.auto_reconnect === 'boolean' ? options.auto_reconnect : true;\n    reconnect = typeof options.autoReconnect === 'boolean' ? options.autoReconnect : reconnect;\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: reconnect,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the core types\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Internal state\n    this.s = {\n      // Create the Mongos\n      coreTopology: new CMongos(seedlist, clonedOptions),\n      // Server capabilities\n      sCapabilities: null,\n      // Debug turned on\n      debug: clonedOptions.debug,\n      // Store option defaults\n      storeOptions: storeOptions,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Actual store of callbacks\n      store: store,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: new Set(),\n      // Promise library\n      promiseLibrary: options.promiseLibrary || Promise\n    };\n  }\n\n  // Connect\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = {};\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        // Remove all event handlers\n        var events = ['timeout', 'error', 'close'];\n        events.forEach(function(e) {\n          self.removeListener(e, connectErrorHandler);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n        // Force close the topology\n        self.close(true);\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          process.nextTick(function() {\n            throw err;\n          });\n        }\n      };\n    };\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Error handler\n    var reconnectHandler = function() {\n      self.emit('reconnect');\n      self.s.store.execute();\n    };\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Connect handler\n    var connectHandler = function() {\n      // Clear out all the current handlers left over\n      var events = ['timeout', 'error', 'close', 'fullsetup'];\n      events.forEach(function(e) {\n        self.s.coreTopology.removeAllListeners(e);\n      });\n\n      // Set up listeners\n      self.s.coreTopology.on('timeout', errorHandler('timeout'));\n      self.s.coreTopology.on('error', errorHandler('error'));\n      self.s.coreTopology.on('close', errorHandler('close'));\n\n      // Set up serverConfig listeners\n      self.s.coreTopology.on('fullsetup', function() {\n        self.emit('fullsetup', self);\n      });\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Clear out all the current handlers left over\n    var events = [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed'\n    ];\n    events.forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n\n    // Set up listeners\n    self.s.coreTopology.once('timeout', connectErrorHandler('timeout'));\n    self.s.coreTopology.once('error', connectErrorHandler('error'));\n    self.s.coreTopology.once('close', connectErrorHandler('close'));\n    self.s.coreTopology.once('connect', connectHandler);\n    // Join and leave events\n    self.s.coreTopology.on('joined', relay('joined'));\n    self.s.coreTopology.on('left', relay('left'));\n\n    // Reconnect server\n    self.s.coreTopology.on('reconnect', reconnectHandler);\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n}\n\nObject.defineProperty(Mongos.prototype, 'haInterval', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.haInterval;\n  }\n});\n\n/**\n * A mongos connect event, used to verify that the connection is up and running\n *\n * @event Mongos#connect\n * @type {Mongos}\n */\n\n/**\n * The mongos high availability event\n *\n * @event Mongos#ha\n * @type {function}\n * @param {string} type The stage in the high availability event (start|end)\n * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only\n * @param {number} data.id The id for this high availability request\n * @param {object} data.state An object containing the information about the current replicaset\n */\n\n/**\n * A server member left the mongos set\n *\n * @event Mongos#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the mongos set\n *\n * @event Mongos#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * Mongos fullsetup event, emitted when all proxies in the topology have been connected to.\n *\n * @event Mongos#fullsetup\n * @type {Mongos}\n */\n\n/**\n * Mongos open event, emitted when mongos can start processing commands.\n *\n * @event Mongos#open\n * @type {Mongos}\n */\n\n/**\n * Mongos close event\n *\n * @event Mongos#close\n * @type {object}\n */\n\n/**\n * Mongos error event, emitted if there is an error listener.\n *\n * @event Mongos#error\n * @type {MongoError}\n */\n\n/**\n * Mongos timeout event\n *\n * @event Mongos#timeout\n * @type {object}\n */\n\n/**\n * Mongos parseError event\n *\n * @event Mongos#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Mongos#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Mongos#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Mongos#commandFailed\n * @type {object}\n */\n\nmodule.exports = Mongos;\n","'use strict';\n\nconst Topology = require('../core').Topology;\nconst ServerCapabilities = require('./topology_base').ServerCapabilities;\nconst Cursor = require('../cursor');\nconst translateOptions = require('../utils').translateOptions;\n\nclass NativeTopology extends Topology {\n  constructor(servers, options) {\n    options = options || {};\n\n    let clonedOptions = Object.assign(\n      {},\n      {\n        cursorFactory: Cursor,\n        reconnect: false,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        maxPoolSize:\n          typeof options.maxPoolSize === 'number'\n            ? options.maxPoolSize\n            : typeof options.poolSize === 'number'\n            ? options.poolSize\n            : 10,\n        minPoolSize:\n          typeof options.minPoolSize === 'number'\n            ? options.minPoolSize\n            : typeof options.minSize === 'number'\n            ? options.minSize\n            : 0,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the core types\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    super(servers, clonedOptions);\n  }\n\n  capabilities() {\n    if (this.s.sCapabilities) return this.s.sCapabilities;\n    if (this.lastIsMaster() == null) return null;\n    this.s.sCapabilities = new ServerCapabilities(this.lastIsMaster());\n    return this.s.sCapabilities;\n  }\n\n  // Command\n  command(ns, cmd, options, callback) {\n    super.command(ns.toString(), cmd, options, callback);\n  }\n\n  // Insert\n  insert(ns, ops, options, callback) {\n    super.insert(ns.toString(), ops, options, callback);\n  }\n\n  // Update\n  update(ns, ops, options, callback) {\n    super.update(ns.toString(), ops, options, callback);\n  }\n\n  // Remove\n  remove(ns, ops, options, callback) {\n    super.remove(ns.toString(), ops, options, callback);\n  }\n}\n\nmodule.exports = NativeTopology;\n","'use strict';\n\nconst Server = require('./server');\nconst Cursor = require('../cursor');\nconst MongoError = require('../core').MongoError;\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst Store = require('./topology_base').Store;\nconst CReplSet = require('../core').ReplSet;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **ReplSet** class is a class that represents a Replicaset topology and is\n * used to construct connections.\n *\n * **ReplSet Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'replicaSet',\n  'rs_name',\n  'secondaryAcceptableLatencyMS',\n  'connectWithNoPrimary',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslCRL',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'strategy',\n  'debug',\n  'family',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'maxStalenessSeconds',\n  'promiseLibrary',\n  'minSize',\n  'monitorCommands'\n];\n\n/**\n * Creates a new ReplSet instance\n * @class\n * @deprecated\n * @param {Server[]} servers A seedlist of servers participating in the replicaset.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.ha=true] Turn on high availability monitoring.\n * @param {number} [options.haInterval=10000] Time between each replicaset status check.\n * @param {string} [options.replicaSet] The name of the replicaset to connect to.\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms)\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {boolean} [options.sslValidate=false] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCA] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslCert] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher.\n * @param {string} [options.ciphers] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslKey] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions] Socket options\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=120000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=10000] How long to wait for a connection to be established before timing out\n * @param {number} [options.socketOptions.socketTimeoutMS=360000] How long a send or receive on a socket can take before timing out\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed);\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires ReplSet#connect\n * @fires ReplSet#ha\n * @fires ReplSet#joined\n * @fires ReplSet#left\n * @fires ReplSet#fullsetup\n * @fires ReplSet#open\n * @fires ReplSet#close\n * @fires ReplSet#error\n * @fires ReplSet#timeout\n * @fires ReplSet#parseError\n * @fires ReplSet#commandStarted\n * @fires ReplSet#commandSucceeded\n * @fires ReplSet#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {ReplSet} a ReplSet instance.\n */\nclass ReplSet extends TopologyBase {\n  constructor(servers, options) {\n    super();\n\n    options = options || {};\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Ensure all the instances are Server\n    for (var i = 0; i < servers.length; i++) {\n      if (!(servers[i] instanceof Server)) {\n        throw MongoError.create({\n          message: 'all seed list instances must be of the Server type',\n          driver: true\n        });\n      }\n    }\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Build seed list\n    var seedlist = servers.map(function(x) {\n      return { host: x.host, port: x.port };\n    });\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: false,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the core types\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Create the ReplSet\n    var coreTopology = new CReplSet(seedlist, clonedOptions);\n\n    // Listen to reconnect event\n    coreTopology.on('reconnect', function() {\n      self.emit('reconnect');\n      store.execute();\n    });\n\n    // Internal state\n    this.s = {\n      // Replicaset\n      coreTopology: coreTopology,\n      // Server capabilities\n      sCapabilities: null,\n      // Debug tag\n      tag: options.tag,\n      // Store options\n      storeOptions: storeOptions,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Store\n      store: store,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: new Set(),\n      // Promise library\n      promiseLibrary: options.promiseLibrary || Promise\n    };\n\n    // Debug\n    if (clonedOptions.debug) {\n      // Last ismaster\n      Object.defineProperty(this, 'replset', {\n        enumerable: true,\n        get: function() {\n          return coreTopology;\n        }\n      });\n    }\n  }\n\n  // Connect method\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = {};\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Clear out all the current handlers left over\n    var events = [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed',\n      'joined',\n      'left',\n      'ping',\n      'ha'\n    ];\n    events.forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Replset events relay\n    var replsetRelay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server.lastIsMaster(), server);\n      };\n    };\n\n    // Relay ha\n    var relayHa = function(t, state) {\n      self.emit('ha', t, state);\n\n      if (t === 'start') {\n        self.emit('ha_connect', t, state);\n      } else if (t === 'end') {\n        self.emit('ha_ismaster', t, state);\n      }\n    };\n\n    // Set up serverConfig listeners\n    self.s.coreTopology.on('joined', replsetRelay('joined'));\n    self.s.coreTopology.on('left', relay('left'));\n    self.s.coreTopology.on('ping', relay('ping'));\n    self.s.coreTopology.on('ha', relayHa);\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n\n    self.s.coreTopology.on('fullsetup', function() {\n      self.emit('fullsetup', self, self);\n    });\n\n    self.s.coreTopology.on('all', function() {\n      self.emit('all', null, self);\n    });\n\n    // Connect handler\n    var connectHandler = function() {\n      // Set up listeners\n      self.s.coreTopology.once('timeout', errorHandler('timeout'));\n      self.s.coreTopology.once('error', errorHandler('error'));\n      self.s.coreTopology.once('close', errorHandler('close'));\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        ['timeout', 'error', 'close'].forEach(function(e) {\n          self.s.coreTopology.removeListener(e, connectErrorHandler);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n        // Destroy the replset\n        self.s.coreTopology.destroy();\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          if (!self.s.coreTopology.isConnected())\n            process.nextTick(function() {\n              throw err;\n            });\n        }\n      };\n    };\n\n    // Set up listeners\n    self.s.coreTopology.once('timeout', connectErrorHandler('timeout'));\n    self.s.coreTopology.once('error', connectErrorHandler('error'));\n    self.s.coreTopology.once('close', connectErrorHandler('close'));\n    self.s.coreTopology.once('connect', connectHandler);\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n\n  close(forceClosed, callback) {\n    ['timeout', 'error', 'close', 'joined', 'left'].forEach(e => this.removeAllListeners(e));\n    super.close(forceClosed, callback);\n  }\n}\n\nObject.defineProperty(ReplSet.prototype, 'haInterval', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.haInterval;\n  }\n});\n\n/**\n * A replset connect event, used to verify that the connection is up and running\n *\n * @event ReplSet#connect\n * @type {ReplSet}\n */\n\n/**\n * The replset high availability event\n *\n * @event ReplSet#ha\n * @type {function}\n * @param {string} type The stage in the high availability event (start|end)\n * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only\n * @param {number} data.id The id for this high availability request\n * @param {object} data.state An object containing the information about the current replicaset\n */\n\n/**\n * A server member left the replicaset\n *\n * @event ReplSet#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the replicaset\n *\n * @event ReplSet#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * ReplSet open event, emitted when replicaset can start processing commands.\n *\n * @event ReplSet#open\n * @type {Replset}\n */\n\n/**\n * ReplSet fullsetup event, emitted when all servers in the topology have been connected to.\n *\n * @event ReplSet#fullsetup\n * @type {Replset}\n */\n\n/**\n * ReplSet close event\n *\n * @event ReplSet#close\n * @type {object}\n */\n\n/**\n * ReplSet error event, emitted if there is an error listener.\n *\n * @event ReplSet#error\n * @type {MongoError}\n */\n\n/**\n * ReplSet timeout event\n *\n * @event ReplSet#timeout\n * @type {object}\n */\n\n/**\n * ReplSet parseError event\n *\n * @event ReplSet#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event ReplSet#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event ReplSet#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event ReplSet#commandFailed\n * @type {object}\n */\n\nmodule.exports = ReplSet;\n","'use strict';\n\nconst CServer = require('../core').Server;\nconst Cursor = require('../cursor');\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst Store = require('./topology_base').Store;\nconst MongoError = require('../core').MongoError;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **Server** class is a class that represents a single server topology and is\n * used to construct connections.\n *\n * **Server Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'acceptableLatencyMS',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCRL',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'family',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'reconnectInterval',\n  'monitoring',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'compression',\n  'promiseLibrary',\n  'monitorCommands'\n];\n\n/**\n * Creates a new Server instance\n * @class\n * @deprecated\n * @param {string} host The host for the server, can be either an IP4, IP6 or domain socket style host.\n * @param {number} [port] The server port if IP4.\n * @param {object} [options] Optional settings.\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {boolean} [options.sslValidate=false] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {array} [options.sslCA] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslCert] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.ciphers] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslKey] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions] Socket options\n * @param {boolean} [options.socketOptions.autoReconnect=true] Reconnect on error.\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=120000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=10000] How long to wait for a connection to be established before timing out\n * @param {number} [options.socketOptions.socketTimeoutMS=0] How long a send or receive on a socket can take before timing out\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.monitoring=true] Triggers the server instance to call ismaster\n * @param {number} [options.haInterval=10000] The interval of calling ismaster when monitoring is enabled.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires Server#connect\n * @fires Server#close\n * @fires Server#error\n * @fires Server#timeout\n * @fires Server#parseError\n * @fires Server#reconnect\n * @fires Server#commandStarted\n * @fires Server#commandSucceeded\n * @fires Server#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {Server} a Server instance.\n */\nclass Server extends TopologyBase {\n  constructor(host, port, options) {\n    super();\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Promise library\n    const promiseLibrary = options.promiseLibrary;\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Detect if we have a socket connection\n    if (host.indexOf('/') !== -1) {\n      if (port != null && typeof port === 'object') {\n        options = port;\n        port = null;\n      }\n    } else if (port == null) {\n      throw MongoError.create({ message: 'port must be specified', driver: true });\n    }\n\n    // Get the reconnect option\n    var reconnect = typeof options.auto_reconnect === 'boolean' ? options.auto_reconnect : true;\n    reconnect = typeof options.autoReconnect === 'boolean' ? options.autoReconnect : reconnect;\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        host: host,\n        port: port,\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: reconnect,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the core types\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Define the internal properties\n    this.s = {\n      // Create an instance of a server instance from core module\n      coreTopology: new CServer(clonedOptions),\n      // Server capabilities\n      sCapabilities: null,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Reconnect\n      reconnect: clonedOptions.reconnect,\n      // Emit error\n      emitError: clonedOptions.emitError,\n      // Pool size\n      poolSize: clonedOptions.size,\n      // Store Options\n      storeOptions: storeOptions,\n      // Store\n      store: store,\n      // Host\n      host: host,\n      // Port\n      port: port,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: new Set(),\n      // Promise library\n      promiseLibrary: promiseLibrary || Promise\n    };\n  }\n\n  // Connect\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = this.s.clonedOptions;\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        // Remove all event handlers\n        var events = ['timeout', 'error', 'close'];\n        events.forEach(function(e) {\n          self.s.coreTopology.removeListener(e, connectHandlers[e]);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          process.nextTick(function() {\n            throw err;\n          });\n        }\n      };\n    };\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Error handler\n    var reconnectHandler = function() {\n      self.emit('reconnect', self);\n      self.s.store.execute();\n    };\n\n    // Reconnect failed\n    var reconnectFailedHandler = function(err) {\n      self.emit('reconnectFailed', err);\n      self.s.store.flush(err);\n    };\n\n    // Destroy called on topology, perform cleanup\n    var destroyHandler = function() {\n      self.s.store.flush();\n    };\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Connect handler\n    var connectHandler = function() {\n      // Clear out all the current handlers left over\n      ['timeout', 'error', 'close', 'destroy'].forEach(function(e) {\n        self.s.coreTopology.removeAllListeners(e);\n      });\n\n      // Set up listeners\n      self.s.coreTopology.on('timeout', errorHandler('timeout'));\n      self.s.coreTopology.once('error', errorHandler('error'));\n      self.s.coreTopology.on('close', errorHandler('close'));\n      // Only called on destroy\n      self.s.coreTopology.on('destroy', destroyHandler);\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Set up listeners\n    var connectHandlers = {\n      timeout: connectErrorHandler('timeout'),\n      error: connectErrorHandler('error'),\n      close: connectErrorHandler('close')\n    };\n\n    // Clear out all the current handlers left over\n    [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed'\n    ].forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // Add the event handlers\n    self.s.coreTopology.once('timeout', connectHandlers.timeout);\n    self.s.coreTopology.once('error', connectHandlers.error);\n    self.s.coreTopology.once('close', connectHandlers.close);\n    self.s.coreTopology.once('connect', connectHandler);\n    // Reconnect server\n    self.s.coreTopology.on('reconnect', reconnectHandler);\n    self.s.coreTopology.on('reconnectFailed', reconnectFailedHandler);\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n    self.s.coreTopology.on('attemptReconnect', relay('attemptReconnect'));\n    self.s.coreTopology.on('monitoring', relay('monitoring'));\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n}\n\nObject.defineProperty(Server.prototype, 'poolSize', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.connections().length;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'autoReconnect', {\n  enumerable: true,\n  get: function() {\n    return this.s.reconnect;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'host', {\n  enumerable: true,\n  get: function() {\n    return this.s.host;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'port', {\n  enumerable: true,\n  get: function() {\n    return this.s.port;\n  }\n});\n\n/**\n * Server connect event\n *\n * @event Server#connect\n * @type {object}\n */\n\n/**\n * Server close event\n *\n * @event Server#close\n * @type {object}\n */\n\n/**\n * Server reconnect event\n *\n * @event Server#reconnect\n * @type {object}\n */\n\n/**\n * Server error event\n *\n * @event Server#error\n * @type {MongoError}\n */\n\n/**\n * Server timeout event\n *\n * @event Server#timeout\n * @type {object}\n */\n\n/**\n * Server parseError event\n *\n * @event Server#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Server#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Server#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Server#commandFailed\n * @type {object}\n */\n\nmodule.exports = Server;\n","'use strict';\n\nconst EventEmitter = require('events'),\n  MongoError = require('../core').MongoError,\n  f = require('util').format,\n  ReadPreference = require('../core').ReadPreference,\n  ClientSession = require('../core').Sessions.ClientSession;\n\n// The store of ops\nvar Store = function(topology, storeOptions) {\n  var self = this;\n  var storedOps = [];\n  storeOptions = storeOptions || { force: false, bufferMaxEntries: -1 };\n\n  // Internal state\n  this.s = {\n    storedOps: storedOps,\n    storeOptions: storeOptions,\n    topology: topology\n  };\n\n  Object.defineProperty(this, 'length', {\n    enumerable: true,\n    get: function() {\n      return self.s.storedOps.length;\n    }\n  });\n};\n\nStore.prototype.add = function(opType, ns, ops, options, callback) {\n  if (this.s.storeOptions.force) {\n    return callback(MongoError.create({ message: 'db closed by application', driver: true }));\n  }\n\n  if (this.s.storeOptions.bufferMaxEntries === 0) {\n    return callback(\n      MongoError.create({\n        message: f(\n          'no connection available for operation and number of stored operation > %s',\n          this.s.storeOptions.bufferMaxEntries\n        ),\n        driver: true\n      })\n    );\n  }\n\n  if (\n    this.s.storeOptions.bufferMaxEntries > 0 &&\n    this.s.storedOps.length > this.s.storeOptions.bufferMaxEntries\n  ) {\n    while (this.s.storedOps.length > 0) {\n      var op = this.s.storedOps.shift();\n      op.c(\n        MongoError.create({\n          message: f(\n            'no connection available for operation and number of stored operation > %s',\n            this.s.storeOptions.bufferMaxEntries\n          ),\n          driver: true\n        })\n      );\n    }\n\n    return;\n  }\n\n  this.s.storedOps.push({ t: opType, n: ns, o: ops, op: options, c: callback });\n};\n\nStore.prototype.addObjectAndMethod = function(opType, object, method, params, callback) {\n  if (this.s.storeOptions.force) {\n    return callback(MongoError.create({ message: 'db closed by application', driver: true }));\n  }\n\n  if (this.s.storeOptions.bufferMaxEntries === 0) {\n    return callback(\n      MongoError.create({\n        message: f(\n          'no connection available for operation and number of stored operation > %s',\n          this.s.storeOptions.bufferMaxEntries\n        ),\n        driver: true\n      })\n    );\n  }\n\n  if (\n    this.s.storeOptions.bufferMaxEntries > 0 &&\n    this.s.storedOps.length > this.s.storeOptions.bufferMaxEntries\n  ) {\n    while (this.s.storedOps.length > 0) {\n      var op = this.s.storedOps.shift();\n      op.c(\n        MongoError.create({\n          message: f(\n            'no connection available for operation and number of stored operation > %s',\n            this.s.storeOptions.bufferMaxEntries\n          ),\n          driver: true\n        })\n      );\n    }\n\n    return;\n  }\n\n  this.s.storedOps.push({ t: opType, m: method, o: object, p: params, c: callback });\n};\n\nStore.prototype.flush = function(err) {\n  while (this.s.storedOps.length > 0) {\n    this.s.storedOps\n      .shift()\n      .c(\n        err ||\n          MongoError.create({ message: f('no connection available for operation'), driver: true })\n      );\n  }\n};\n\nvar primaryOptions = ['primary', 'primaryPreferred', 'nearest', 'secondaryPreferred'];\nvar secondaryOptions = ['secondary', 'secondaryPreferred'];\n\nStore.prototype.execute = function(options) {\n  options = options || {};\n  // Get current ops\n  var ops = this.s.storedOps;\n  // Reset the ops\n  this.s.storedOps = [];\n\n  // Unpack options\n  var executePrimary = typeof options.executePrimary === 'boolean' ? options.executePrimary : true;\n  var executeSecondary =\n    typeof options.executeSecondary === 'boolean' ? options.executeSecondary : true;\n\n  // Execute all the stored ops\n  while (ops.length > 0) {\n    var op = ops.shift();\n\n    if (op.t === 'cursor') {\n      if (executePrimary && executeSecondary) {\n        op.o[op.m].apply(op.o, op.p);\n      } else if (\n        executePrimary &&\n        op.o.options &&\n        op.o.options.readPreference &&\n        primaryOptions.indexOf(op.o.options.readPreference.mode) !== -1\n      ) {\n        op.o[op.m].apply(op.o, op.p);\n      } else if (\n        !executePrimary &&\n        executeSecondary &&\n        op.o.options &&\n        op.o.options.readPreference &&\n        secondaryOptions.indexOf(op.o.options.readPreference.mode) !== -1\n      ) {\n        op.o[op.m].apply(op.o, op.p);\n      }\n    } else if (op.t === 'auth') {\n      this.s.topology[op.t].apply(this.s.topology, op.o);\n    } else {\n      if (executePrimary && executeSecondary) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      } else if (\n        executePrimary &&\n        op.op &&\n        op.op.readPreference &&\n        primaryOptions.indexOf(op.op.readPreference.mode) !== -1\n      ) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      } else if (\n        !executePrimary &&\n        executeSecondary &&\n        op.op &&\n        op.op.readPreference &&\n        secondaryOptions.indexOf(op.op.readPreference.mode) !== -1\n      ) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      }\n    }\n  }\n};\n\nStore.prototype.all = function() {\n  return this.s.storedOps;\n};\n\n// Server capabilities\nvar ServerCapabilities = function(ismaster) {\n  var setup_get_property = function(object, name, value) {\n    Object.defineProperty(object, name, {\n      enumerable: true,\n      get: function() {\n        return value;\n      }\n    });\n  };\n\n  // Capabilities\n  var aggregationCursor = false;\n  var writeCommands = false;\n  var textSearch = false;\n  var authCommands = false;\n  var listCollections = false;\n  var listIndexes = false;\n  var maxNumberOfDocsInBatch = ismaster.maxWriteBatchSize || 1000;\n  var commandsTakeWriteConcern = false;\n  var commandsTakeCollation = false;\n\n  if (ismaster.minWireVersion >= 0) {\n    textSearch = true;\n  }\n\n  if (ismaster.maxWireVersion >= 1) {\n    aggregationCursor = true;\n    authCommands = true;\n  }\n\n  if (ismaster.maxWireVersion >= 2) {\n    writeCommands = true;\n  }\n\n  if (ismaster.maxWireVersion >= 3) {\n    listCollections = true;\n    listIndexes = true;\n  }\n\n  if (ismaster.maxWireVersion >= 5) {\n    commandsTakeWriteConcern = true;\n    commandsTakeCollation = true;\n  }\n\n  // If no min or max wire version set to 0\n  if (ismaster.minWireVersion == null) {\n    ismaster.minWireVersion = 0;\n  }\n\n  if (ismaster.maxWireVersion == null) {\n    ismaster.maxWireVersion = 0;\n  }\n\n  // Map up read only parameters\n  setup_get_property(this, 'hasAggregationCursor', aggregationCursor);\n  setup_get_property(this, 'hasWriteCommands', writeCommands);\n  setup_get_property(this, 'hasTextSearch', textSearch);\n  setup_get_property(this, 'hasAuthCommands', authCommands);\n  setup_get_property(this, 'hasListCollectionsCommand', listCollections);\n  setup_get_property(this, 'hasListIndexesCommand', listIndexes);\n  setup_get_property(this, 'minWireVersion', ismaster.minWireVersion);\n  setup_get_property(this, 'maxWireVersion', ismaster.maxWireVersion);\n  setup_get_property(this, 'maxNumberOfDocsInBatch', maxNumberOfDocsInBatch);\n  setup_get_property(this, 'commandsTakeWriteConcern', commandsTakeWriteConcern);\n  setup_get_property(this, 'commandsTakeCollation', commandsTakeCollation);\n};\n\nclass TopologyBase extends EventEmitter {\n  constructor() {\n    super();\n    this.setMaxListeners(Infinity);\n  }\n\n  // Sessions related methods\n  hasSessionSupport() {\n    return this.logicalSessionTimeoutMinutes != null;\n  }\n\n  startSession(options, clientOptions) {\n    const session = new ClientSession(this, this.s.sessionPool, options, clientOptions);\n\n    session.once('ended', () => {\n      this.s.sessions.delete(session);\n    });\n\n    this.s.sessions.add(session);\n    return session;\n  }\n\n  endSessions(sessions, callback) {\n    return this.s.coreTopology.endSessions(sessions, callback);\n  }\n\n  get clientMetadata() {\n    return this.s.coreTopology.s.options.metadata;\n  }\n\n  // Server capabilities\n  capabilities() {\n    if (this.s.sCapabilities) return this.s.sCapabilities;\n    if (this.s.coreTopology.lastIsMaster() == null) return null;\n    this.s.sCapabilities = new ServerCapabilities(this.s.coreTopology.lastIsMaster());\n    return this.s.sCapabilities;\n  }\n\n  // Command\n  command(ns, cmd, options, callback) {\n    this.s.coreTopology.command(ns.toString(), cmd, ReadPreference.translate(options), callback);\n  }\n\n  // Insert\n  insert(ns, ops, options, callback) {\n    this.s.coreTopology.insert(ns.toString(), ops, options, callback);\n  }\n\n  // Update\n  update(ns, ops, options, callback) {\n    this.s.coreTopology.update(ns.toString(), ops, options, callback);\n  }\n\n  // Remove\n  remove(ns, ops, options, callback) {\n    this.s.coreTopology.remove(ns.toString(), ops, options, callback);\n  }\n\n  // IsConnected\n  isConnected(options) {\n    options = options || {};\n    options = ReadPreference.translate(options);\n\n    return this.s.coreTopology.isConnected(options);\n  }\n\n  // IsDestroyed\n  isDestroyed() {\n    return this.s.coreTopology.isDestroyed();\n  }\n\n  // Cursor\n  cursor(ns, cmd, options) {\n    options = options || {};\n    options = ReadPreference.translate(options);\n    options.disconnectHandler = this.s.store;\n    options.topology = this;\n\n    return this.s.coreTopology.cursor(ns, cmd, options);\n  }\n\n  lastIsMaster() {\n    return this.s.coreTopology.lastIsMaster();\n  }\n\n  selectServer(selector, options, callback) {\n    return this.s.coreTopology.selectServer(selector, options, callback);\n  }\n\n  /**\n   * Unref all sockets\n   * @method\n   */\n  unref() {\n    return this.s.coreTopology.unref();\n  }\n\n  /**\n   * All raw connections\n   * @method\n   * @return {array}\n   */\n  connections() {\n    return this.s.coreTopology.connections();\n  }\n\n  close(forceClosed, callback) {\n    // If we have sessions, we want to individually move them to the session pool,\n    // and then send a single endSessions call.\n    this.s.sessions.forEach(session => session.endSession());\n\n    if (this.s.sessionPool) {\n      this.s.sessionPool.endAllPooledSessions();\n    }\n\n    // We need to wash out all stored processes\n    if (forceClosed === true) {\n      this.s.storeOptions.force = forceClosed;\n      this.s.store.flush();\n    }\n\n    this.s.coreTopology.destroy(\n      {\n        force: typeof forceClosed === 'boolean' ? forceClosed : false\n      },\n      callback\n    );\n  }\n}\n\n// Properties\nObject.defineProperty(TopologyBase.prototype, 'bson', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.bson;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.parserType;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.logicalSessionTimeoutMinutes;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.type;\n  }\n});\n\nexports.Store = Store;\nexports.ServerCapabilities = ServerCapabilities;\nexports.TopologyBase = TopologyBase;\n","'use strict';\n\nconst ReadPreference = require('./core').ReadPreference;\nconst parser = require('url');\nconst f = require('util').format;\nconst Logger = require('./core').Logger;\nconst dns = require('dns');\nconst ReadConcern = require('./read_concern');\nconst qs = require('querystring');\nconst MongoParseError = require('./core/error').MongoParseError;\n\nmodule.exports = function(url, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  let result;\n  try {\n    result = parser.parse(url, true);\n  } catch (e) {\n    return callback(new Error('URL malformed, cannot be parsed'));\n  }\n\n  if (result.protocol !== 'mongodb:' && result.protocol !== 'mongodb+srv:') {\n    return callback(new Error('Invalid schema, expected `mongodb` or `mongodb+srv`'));\n  }\n\n  if (result.protocol === 'mongodb:') {\n    return parseHandler(url, options, callback);\n  }\n\n  // Otherwise parse this as an SRV record\n  if (result.hostname.split('.').length < 3) {\n    return callback(new Error('URI does not have hostname, domain name and tld'));\n  }\n\n  result.domainLength = result.hostname.split('.').length;\n\n  if (result.pathname && result.pathname.match(',')) {\n    return callback(new Error('Invalid URI, cannot contain multiple hostnames'));\n  }\n\n  if (result.port) {\n    return callback(new Error('Ports not accepted with `mongodb+srv` URIs'));\n  }\n\n  let srvAddress = `_mongodb._tcp.${result.host}`;\n  dns.resolveSrv(srvAddress, function(err, addresses) {\n    if (err) return callback(err);\n\n    if (addresses.length === 0) {\n      return callback(new Error('No addresses found at host'));\n    }\n\n    for (let i = 0; i < addresses.length; i++) {\n      if (!matchesParentDomain(addresses[i].name, result.hostname, result.domainLength)) {\n        return callback(new Error('Server record does not share hostname with parent URI'));\n      }\n    }\n\n    let base = result.auth ? `mongodb://${result.auth}@` : `mongodb://`;\n    let connectionStrings = addresses.map(function(address, i) {\n      if (i === 0) return `${base}${address.name}:${address.port}`;\n      else return `${address.name}:${address.port}`;\n    });\n\n    let connectionString = connectionStrings.join(',') + '/';\n    let connectionStringOptions = [];\n\n    // Add the default database if needed\n    if (result.path) {\n      let defaultDb = result.path.slice(1);\n      if (defaultDb.indexOf('?') !== -1) {\n        defaultDb = defaultDb.slice(0, defaultDb.indexOf('?'));\n      }\n\n      connectionString += defaultDb;\n    }\n\n    // Default to SSL true\n    if (!options.ssl && !result.search) {\n      connectionStringOptions.push('ssl=true');\n    } else if (!options.ssl && result.search && !result.search.match('ssl')) {\n      connectionStringOptions.push('ssl=true');\n    }\n\n    // Keep original uri options\n    if (result.search) {\n      connectionStringOptions.push(result.search.replace('?', ''));\n    }\n\n    dns.resolveTxt(result.host, function(err, record) {\n      if (err && err.code !== 'ENODATA' && err.code !== 'ENOTFOUND') return callback(err);\n      if (err && err.code === 'ENODATA') record = null;\n\n      if (record) {\n        if (record.length > 1) {\n          return callback(new MongoParseError('Multiple text records not allowed'));\n        }\n\n        record = record[0].join('');\n        const parsedRecord = qs.parse(record);\n        const items = Object.keys(parsedRecord);\n        if (items.some(item => item !== 'authSource' && item !== 'replicaSet')) {\n          return callback(\n            new MongoParseError('Text record must only set `authSource` or `replicaSet`')\n          );\n        }\n\n        if (items.length > 0) {\n          connectionStringOptions.push(record);\n        }\n      }\n\n      // Add any options to the connection string\n      if (connectionStringOptions.length) {\n        connectionString += `?${connectionStringOptions.join('&')}`;\n      }\n\n      parseHandler(connectionString, options, callback);\n    });\n  });\n};\n\nfunction matchesParentDomain(srvAddress, parentDomain) {\n  let regex = /^.*?\\./;\n  let srv = `.${srvAddress.replace(regex, '')}`;\n  let parent = `.${parentDomain.replace(regex, '')}`;\n  if (srv.endsWith(parent)) return true;\n  else return false;\n}\n\nfunction parseHandler(address, options, callback) {\n  let result, err;\n  try {\n    result = parseConnectionString(address, options);\n  } catch (e) {\n    err = e;\n  }\n\n  return err ? callback(err, null) : callback(null, result);\n}\n\nfunction parseConnectionString(url, options) {\n  // Variables\n  let connection_part = '';\n  let auth_part = '';\n  let query_string_part = '';\n  let dbName = 'admin';\n\n  // Url parser result\n  let result = parser.parse(url, true);\n  if ((result.hostname == null || result.hostname === '') && url.indexOf('.sock') === -1) {\n    throw new Error('No hostname or hostnames provided in connection string');\n  }\n\n  if (result.port === '0') {\n    throw new Error('Invalid port (zero) with hostname');\n  }\n\n  if (!isNaN(parseInt(result.port, 10)) && parseInt(result.port, 10) > 65535) {\n    throw new Error('Invalid port (larger than 65535) with hostname');\n  }\n\n  if (\n    result.path &&\n    result.path.length > 0 &&\n    result.path[0] !== '/' &&\n    url.indexOf('.sock') === -1\n  ) {\n    throw new Error('Missing delimiting slash between hosts and options');\n  }\n\n  if (result.query) {\n    for (let name in result.query) {\n      if (name.indexOf('::') !== -1) {\n        throw new Error('Double colon in host identifier');\n      }\n\n      if (result.query[name] === '') {\n        throw new Error('Query parameter ' + name + ' is an incomplete value pair');\n      }\n    }\n  }\n\n  if (result.auth) {\n    let parts = result.auth.split(':');\n    if (url.indexOf(result.auth) !== -1 && parts.length > 2) {\n      throw new Error('Username with password containing an unescaped colon');\n    }\n\n    if (url.indexOf(result.auth) !== -1 && result.auth.indexOf('@') !== -1) {\n      throw new Error('Username containing an unescaped at-sign');\n    }\n  }\n\n  // Remove query\n  let clean = url.split('?').shift();\n\n  // Extract the list of hosts\n  let strings = clean.split(',');\n  let hosts = [];\n\n  for (let i = 0; i < strings.length; i++) {\n    let hostString = strings[i];\n\n    if (hostString.indexOf('mongodb') !== -1) {\n      if (hostString.indexOf('@') !== -1) {\n        hosts.push(hostString.split('@').pop());\n      } else {\n        hosts.push(hostString.substr('mongodb://'.length));\n      }\n    } else if (hostString.indexOf('/') !== -1) {\n      hosts.push(hostString.split('/').shift());\n    } else if (hostString.indexOf('/') === -1) {\n      hosts.push(hostString.trim());\n    }\n  }\n\n  for (let i = 0; i < hosts.length; i++) {\n    let r = parser.parse(f('mongodb://%s', hosts[i].trim()));\n    if (r.path && r.path.indexOf('.sock') !== -1) continue;\n    if (r.path && r.path.indexOf(':') !== -1) {\n      // Not connecting to a socket so check for an extra slash in the hostname.\n      // Using String#split as perf is better than match.\n      if (r.path.split('/').length > 1 && r.path.indexOf('::') === -1) {\n        throw new Error('Slash in host identifier');\n      } else {\n        throw new Error('Double colon in host identifier');\n      }\n    }\n  }\n\n  // If we have a ? mark cut the query elements off\n  if (url.indexOf('?') !== -1) {\n    query_string_part = url.substr(url.indexOf('?') + 1);\n    connection_part = url.substring('mongodb://'.length, url.indexOf('?'));\n  } else {\n    connection_part = url.substring('mongodb://'.length);\n  }\n\n  // Check if we have auth params\n  if (connection_part.indexOf('@') !== -1) {\n    auth_part = connection_part.split('@')[0];\n    connection_part = connection_part.split('@')[1];\n  }\n\n  // Check there is not more than one unescaped slash\n  if (connection_part.split('/').length > 2) {\n    throw new Error(\n      \"Unsupported host '\" +\n        connection_part.split('?')[0] +\n        \"', hosts must be URL encoded and contain at most one unencoded slash\"\n    );\n  }\n\n  // Check if the connection string has a db\n  if (connection_part.indexOf('.sock') !== -1) {\n    if (connection_part.indexOf('.sock/') !== -1) {\n      dbName = connection_part.split('.sock/')[1];\n      // Check if multiple database names provided, or just an illegal trailing backslash\n      if (dbName.indexOf('/') !== -1) {\n        if (dbName.split('/').length === 2 && dbName.split('/')[1].length === 0) {\n          throw new Error('Illegal trailing backslash after database name');\n        }\n        throw new Error('More than 1 database name in URL');\n      }\n      connection_part = connection_part.split(\n        '/',\n        connection_part.indexOf('.sock') + '.sock'.length\n      );\n    }\n  } else if (connection_part.indexOf('/') !== -1) {\n    // Check if multiple database names provided, or just an illegal trailing backslash\n    if (connection_part.split('/').length > 2) {\n      if (connection_part.split('/')[2].length === 0) {\n        throw new Error('Illegal trailing backslash after database name');\n      }\n      throw new Error('More than 1 database name in URL');\n    }\n    dbName = connection_part.split('/')[1];\n    connection_part = connection_part.split('/')[0];\n  }\n\n  // URI decode the host information\n  connection_part = decodeURIComponent(connection_part);\n\n  // Result object\n  let object = {};\n\n  // Pick apart the authentication part of the string\n  let authPart = auth_part || '';\n  let auth = authPart.split(':', 2);\n\n  // Decode the authentication URI components and verify integrity\n  let user = decodeURIComponent(auth[0]);\n  if (auth[0] !== encodeURIComponent(user)) {\n    throw new Error('Username contains an illegal unescaped character');\n  }\n  auth[0] = user;\n\n  if (auth[1]) {\n    let pass = decodeURIComponent(auth[1]);\n    if (auth[1] !== encodeURIComponent(pass)) {\n      throw new Error('Password contains an illegal unescaped character');\n    }\n    auth[1] = pass;\n  }\n\n  // Add auth to final object if we have 2 elements\n  if (auth.length === 2) object.auth = { user: auth[0], password: auth[1] };\n  // if user provided auth options, use that\n  if (options && options.auth != null) object.auth = options.auth;\n\n  // Variables used for temporary storage\n  let hostPart;\n  let urlOptions;\n  let servers;\n  let compression;\n  let serverOptions = { socketOptions: {} };\n  let dbOptions = { read_preference_tags: [] };\n  let replSetServersOptions = { socketOptions: {} };\n  let mongosOptions = { socketOptions: {} };\n  // Add server options to final object\n  object.server_options = serverOptions;\n  object.db_options = dbOptions;\n  object.rs_options = replSetServersOptions;\n  object.mongos_options = mongosOptions;\n\n  // Let's check if we are using a domain socket\n  if (url.match(/\\.sock/)) {\n    // Split out the socket part\n    let domainSocket = url.substring(\n      url.indexOf('mongodb://') + 'mongodb://'.length,\n      url.lastIndexOf('.sock') + '.sock'.length\n    );\n    // Clean out any auth stuff if any\n    if (domainSocket.indexOf('@') !== -1) domainSocket = domainSocket.split('@')[1];\n    domainSocket = decodeURIComponent(domainSocket);\n    servers = [{ domain_socket: domainSocket }];\n  } else {\n    // Split up the db\n    hostPart = connection_part;\n    // Deduplicate servers\n    let deduplicatedServers = {};\n\n    // Parse all server results\n    servers = hostPart\n      .split(',')\n      .map(function(h) {\n        let _host, _port, ipv6match;\n        //check if it matches [IPv6]:port, where the port number is optional\n        if ((ipv6match = /\\[([^\\]]+)\\](?::(.+))?/.exec(h))) {\n          _host = ipv6match[1];\n          _port = parseInt(ipv6match[2], 10) || 27017;\n        } else {\n          //otherwise assume it's IPv4, or plain hostname\n          let hostPort = h.split(':', 2);\n          _host = hostPort[0] || 'localhost';\n          _port = hostPort[1] != null ? parseInt(hostPort[1], 10) : 27017;\n          // Check for localhost?safe=true style case\n          if (_host.indexOf('?') !== -1) _host = _host.split(/\\?/)[0];\n        }\n\n        // No entry returned for duplicate server\n        if (deduplicatedServers[_host + '_' + _port]) return null;\n        deduplicatedServers[_host + '_' + _port] = 1;\n\n        // Return the mapped object\n        return { host: _host, port: _port };\n      })\n      .filter(function(x) {\n        return x != null;\n      });\n  }\n\n  // Get the db name\n  object.dbName = dbName || 'admin';\n  // Split up all the options\n  urlOptions = (query_string_part || '').split(/[&;]/);\n  // Ugh, we have to figure out which options go to which constructor manually.\n  urlOptions.forEach(function(opt) {\n    if (!opt) return;\n    var splitOpt = opt.split('='),\n      name = splitOpt[0],\n      value = splitOpt[1];\n\n    // Options implementations\n    switch (name) {\n      case 'slaveOk':\n      case 'slave_ok':\n        serverOptions.slave_ok = value === 'true';\n        dbOptions.slaveOk = value === 'true';\n        break;\n      case 'maxPoolSize':\n      case 'poolSize':\n        serverOptions.poolSize = parseInt(value, 10);\n        replSetServersOptions.poolSize = parseInt(value, 10);\n        break;\n      case 'appname':\n        object.appname = decodeURIComponent(value);\n        break;\n      case 'autoReconnect':\n      case 'auto_reconnect':\n        serverOptions.auto_reconnect = value === 'true';\n        break;\n      case 'ssl':\n        if (value === 'prefer') {\n          serverOptions.ssl = value;\n          replSetServersOptions.ssl = value;\n          mongosOptions.ssl = value;\n          break;\n        }\n        serverOptions.ssl = value === 'true';\n        replSetServersOptions.ssl = value === 'true';\n        mongosOptions.ssl = value === 'true';\n        break;\n      case 'sslValidate':\n        serverOptions.sslValidate = value === 'true';\n        replSetServersOptions.sslValidate = value === 'true';\n        mongosOptions.sslValidate = value === 'true';\n        break;\n      case 'replicaSet':\n      case 'rs_name':\n        replSetServersOptions.rs_name = value;\n        break;\n      case 'reconnectWait':\n        replSetServersOptions.reconnectWait = parseInt(value, 10);\n        break;\n      case 'retries':\n        replSetServersOptions.retries = parseInt(value, 10);\n        break;\n      case 'readSecondary':\n      case 'read_secondary':\n        replSetServersOptions.read_secondary = value === 'true';\n        break;\n      case 'fsync':\n        dbOptions.fsync = value === 'true';\n        break;\n      case 'journal':\n        dbOptions.j = value === 'true';\n        break;\n      case 'safe':\n        dbOptions.safe = value === 'true';\n        break;\n      case 'nativeParser':\n      case 'native_parser':\n        dbOptions.native_parser = value === 'true';\n        break;\n      case 'readConcernLevel':\n        dbOptions.readConcern = new ReadConcern(value);\n        break;\n      case 'connectTimeoutMS':\n        serverOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        break;\n      case 'socketTimeoutMS':\n        serverOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        break;\n      case 'w':\n        dbOptions.w = parseInt(value, 10);\n        if (isNaN(dbOptions.w)) dbOptions.w = value;\n        break;\n      case 'authSource':\n        dbOptions.authSource = value;\n        break;\n      case 'gssapiServiceName':\n        dbOptions.gssapiServiceName = value;\n        break;\n      case 'authMechanism':\n        if (value === 'GSSAPI') {\n          // If no password provided decode only the principal\n          if (object.auth == null) {\n            let urlDecodeAuthPart = decodeURIComponent(authPart);\n            if (urlDecodeAuthPart.indexOf('@') === -1)\n              throw new Error('GSSAPI requires a provided principal');\n            object.auth = { user: urlDecodeAuthPart, password: null };\n          } else {\n            object.auth.user = decodeURIComponent(object.auth.user);\n          }\n        } else if (value === 'MONGODB-X509') {\n          object.auth = { user: decodeURIComponent(authPart) };\n        }\n\n        // Only support GSSAPI or MONGODB-CR for now\n        if (\n          value !== 'GSSAPI' &&\n          value !== 'MONGODB-X509' &&\n          value !== 'MONGODB-CR' &&\n          value !== 'DEFAULT' &&\n          value !== 'SCRAM-SHA-1' &&\n          value !== 'SCRAM-SHA-256' &&\n          value !== 'PLAIN'\n        )\n          throw new Error(\n            'Only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1 is supported by authMechanism'\n          );\n\n        // Authentication mechanism\n        dbOptions.authMechanism = value;\n        break;\n      case 'authMechanismProperties':\n        {\n          // Split up into key, value pairs\n          let values = value.split(',');\n          let o = {};\n          // For each value split into key, value\n          values.forEach(function(x) {\n            let v = x.split(':');\n            o[v[0]] = v[1];\n          });\n\n          // Set all authMechanismProperties\n          dbOptions.authMechanismProperties = o;\n          // Set the service name value\n          if (typeof o.SERVICE_NAME === 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;\n          if (typeof o.SERVICE_REALM === 'string') dbOptions.gssapiServiceRealm = o.SERVICE_REALM;\n          if (typeof o.CANONICALIZE_HOST_NAME === 'string')\n            dbOptions.gssapiCanonicalizeHostName =\n              o.CANONICALIZE_HOST_NAME === 'true' ? true : false;\n        }\n        break;\n      case 'wtimeoutMS':\n        dbOptions.wtimeout = parseInt(value, 10);\n        break;\n      case 'readPreference':\n        if (!ReadPreference.isValid(value))\n          throw new Error(\n            'readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest'\n          );\n        dbOptions.readPreference = value;\n        break;\n      case 'maxStalenessSeconds':\n        dbOptions.maxStalenessSeconds = parseInt(value, 10);\n        break;\n      case 'readPreferenceTags':\n        {\n          // Decode the value\n          value = decodeURIComponent(value);\n          // Contains the tag object\n          let tagObject = {};\n          if (value == null || value === '') {\n            dbOptions.read_preference_tags.push(tagObject);\n            break;\n          }\n\n          // Split up the tags\n          let tags = value.split(/,/);\n          for (let i = 0; i < tags.length; i++) {\n            let parts = tags[i].trim().split(/:/);\n            tagObject[parts[0]] = parts[1];\n          }\n\n          // Set the preferences tags\n          dbOptions.read_preference_tags.push(tagObject);\n        }\n        break;\n      case 'compressors':\n        {\n          compression = serverOptions.compression || {};\n          let compressors = value.split(',');\n          if (\n            !compressors.every(function(compressor) {\n              return compressor === 'snappy' || compressor === 'zlib';\n            })\n          ) {\n            throw new Error('Compressors must be at least one of snappy or zlib');\n          }\n\n          compression.compressors = compressors;\n          serverOptions.compression = compression;\n        }\n        break;\n      case 'zlibCompressionLevel':\n        {\n          compression = serverOptions.compression || {};\n          let zlibCompressionLevel = parseInt(value, 10);\n          if (zlibCompressionLevel < -1 || zlibCompressionLevel > 9) {\n            throw new Error('zlibCompressionLevel must be an integer between -1 and 9');\n          }\n\n          compression.zlibCompressionLevel = zlibCompressionLevel;\n          serverOptions.compression = compression;\n        }\n        break;\n      case 'retryWrites':\n        dbOptions.retryWrites = value === 'true';\n        break;\n      case 'minSize':\n        dbOptions.minSize = parseInt(value, 10);\n        break;\n      default:\n        {\n          let logger = Logger('URL Parser');\n          logger.warn(`${name} is not supported as a connection string option`);\n        }\n        break;\n    }\n  });\n\n  // No tags: should be null (not [])\n  if (dbOptions.read_preference_tags.length === 0) {\n    dbOptions.read_preference_tags = null;\n  }\n\n  // Validate if there are an invalid write concern combinations\n  if (\n    (dbOptions.w === -1 || dbOptions.w === 0) &&\n    (dbOptions.journal === true || dbOptions.fsync === true || dbOptions.safe === true)\n  )\n    throw new Error('w set to -1 or 0 cannot be combined with safe/w/journal/fsync');\n\n  // If no read preference set it to primary\n  if (!dbOptions.readPreference) {\n    dbOptions.readPreference = 'primary';\n  }\n\n  // make sure that user-provided options are applied with priority\n  dbOptions = Object.assign(dbOptions, options);\n\n  // Add servers to result\n  object.servers = servers;\n\n  // Returned parsed object\n  return object;\n}\n","'use strict';\nconst MongoError = require('./core/error').MongoError;\nconst WriteConcern = require('./write_concern');\n\nvar shallowClone = function(obj) {\n  var copy = {};\n  for (var name in obj) copy[name] = obj[name];\n  return copy;\n};\n\n// Set simple property\nvar getSingleProperty = function(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    enumerable: true,\n    get: function() {\n      return value;\n    }\n  });\n};\n\nvar formatSortValue = (exports.formatSortValue = function(sortDirection) {\n  var value = ('' + sortDirection).toLowerCase();\n\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new Error(\n        'Illegal sort clause, must be of the form ' +\n          \"[['field1', '(ascending|descending)'], \" +\n          \"['field2', '(ascending|descending)']]\"\n      );\n  }\n});\n\nvar formattedOrderClause = (exports.formattedOrderClause = function(sortValue) {\n  var orderBy = {};\n  if (sortValue == null) return null;\n  if (Array.isArray(sortValue)) {\n    if (sortValue.length === 0) {\n      return null;\n    }\n\n    for (var i = 0; i < sortValue.length; i++) {\n      if (sortValue[i].constructor === String) {\n        orderBy[sortValue[i]] = 1;\n      } else {\n        orderBy[sortValue[i][0]] = formatSortValue(sortValue[i][1]);\n      }\n    }\n  } else if (sortValue != null && typeof sortValue === 'object') {\n    orderBy = sortValue;\n  } else if (typeof sortValue === 'string') {\n    orderBy[sortValue] = 1;\n  } else {\n    throw new Error(\n      'Illegal sort clause, must be of the form ' +\n        \"[['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\"\n    );\n  }\n\n  return orderBy;\n});\n\nvar checkCollectionName = function checkCollectionName(collectionName) {\n  if ('string' !== typeof collectionName) {\n    throw new MongoError('collection name must be a String');\n  }\n\n  if (!collectionName || collectionName.indexOf('..') !== -1) {\n    throw new MongoError('collection names cannot be empty');\n  }\n\n  if (\n    collectionName.indexOf('$') !== -1 &&\n    collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null\n  ) {\n    throw new MongoError(\"collection names must not contain '$'\");\n  }\n\n  if (collectionName.match(/^\\.|\\.$/) != null) {\n    throw new MongoError(\"collection names must not start or end with '.'\");\n  }\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (collectionName.indexOf('\\x00') !== -1) {\n    throw new MongoError('collection names cannot contain a null character');\n  }\n};\n\nvar handleCallback = function(callback, err, value1, value2) {\n  try {\n    if (callback == null) return;\n\n    if (callback) {\n      return value2 ? callback(err, value1, value2) : callback(err, value1);\n    }\n  } catch (err) {\n    process.nextTick(function() {\n      throw err;\n    });\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Wrap a Mongo error document in an Error instance\n * @ignore\n * @api private\n */\nvar toError = function(error) {\n  if (error instanceof Error) return error;\n\n  var msg = error.err || error.errmsg || error.errMessage || error;\n  var e = MongoError.create({ message: msg, driver: true });\n\n  // Get all object keys\n  var keys = typeof error === 'object' ? Object.keys(error) : [];\n\n  for (var i = 0; i < keys.length; i++) {\n    try {\n      e[keys[i]] = error[keys[i]];\n    } catch (err) {\n      // continue\n    }\n  }\n\n  return e;\n};\n\n/**\n * @ignore\n */\nvar normalizeHintField = function normalizeHintField(hint) {\n  var finalHint = null;\n\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n\n    hint.forEach(function(param) {\n      finalHint[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {};\n    for (var name in hint) {\n      finalHint[name] = hint[name];\n    }\n  }\n\n  return finalHint;\n};\n\n/**\n * Create index name based on field spec\n *\n * @ignore\n * @api private\n */\nvar parseIndexOptions = function(fieldOrSpec) {\n  var fieldHash = {};\n  var indexes = [];\n  var keys;\n\n  // Get all the fields accordingly\n  if ('string' === typeof fieldOrSpec) {\n    // 'type'\n    indexes.push(fieldOrSpec + '_' + 1);\n    fieldHash[fieldOrSpec] = 1;\n  } else if (Array.isArray(fieldOrSpec)) {\n    fieldOrSpec.forEach(function(f) {\n      if ('string' === typeof f) {\n        // [{location:'2d'}, 'type']\n        indexes.push(f + '_' + 1);\n        fieldHash[f] = 1;\n      } else if (Array.isArray(f)) {\n        // [['location', '2d'],['type', 1]]\n        indexes.push(f[0] + '_' + (f[1] || 1));\n        fieldHash[f[0]] = f[1] || 1;\n      } else if (isObject(f)) {\n        // [{location:'2d'}, {type:1}]\n        keys = Object.keys(f);\n        keys.forEach(function(k) {\n          indexes.push(k + '_' + f[k]);\n          fieldHash[k] = f[k];\n        });\n      } else {\n        // undefined (ignore)\n      }\n    });\n  } else if (isObject(fieldOrSpec)) {\n    // {location:'2d', type:1}\n    keys = Object.keys(fieldOrSpec);\n    keys.forEach(function(key) {\n      indexes.push(key + '_' + fieldOrSpec[key]);\n      fieldHash[key] = fieldOrSpec[key];\n    });\n  }\n\n  return {\n    name: indexes.join('_'),\n    keys: keys,\n    fieldHash: fieldHash\n  };\n};\n\nvar isObject = (exports.isObject = function(arg) {\n  return '[object Object]' === Object.prototype.toString.call(arg);\n});\n\nvar debugOptions = function(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n};\n\nvar decorateCommand = function(command, options, exclude) {\n  for (var name in options) {\n    if (exclude.indexOf(name) === -1) command[name] = options[name];\n  }\n\n  return command;\n};\n\nvar mergeOptions = function(target, source) {\n  for (var name in source) {\n    target[name] = source[name];\n  }\n\n  return target;\n};\n\n// Merge options with translation\nvar translateOptions = function(target, source) {\n  var translations = {\n    // SSL translation options\n    sslCA: 'ca',\n    sslCRL: 'crl',\n    sslValidate: 'rejectUnauthorized',\n    sslKey: 'key',\n    sslCert: 'cert',\n    sslPass: 'passphrase',\n    // SocketTimeout translation options\n    socketTimeoutMS: 'socketTimeout',\n    connectTimeoutMS: 'connectionTimeout',\n    // Replicaset options\n    replicaSet: 'setName',\n    rs_name: 'setName',\n    secondaryAcceptableLatencyMS: 'acceptableLatency',\n    connectWithNoPrimary: 'secondaryOnlyConnectionAllowed',\n    // Mongos options\n    acceptableLatencyMS: 'localThresholdMS'\n  };\n\n  for (var name in source) {\n    if (translations[name]) {\n      target[translations[name]] = source[name];\n    } else {\n      target[name] = source[name];\n    }\n  }\n\n  return target;\n};\n\nvar filterOptions = function(options, names) {\n  var filterOptions = {};\n\n  for (var name in options) {\n    if (names.indexOf(name) !== -1) filterOptions[name] = options[name];\n  }\n\n  // Filtered options\n  return filterOptions;\n};\n\n// Write concern keys\nvar writeConcernKeys = ['w', 'j', 'wtimeout', 'fsync'];\n\n// Merge the write concern options\nvar mergeOptionsAndWriteConcern = function(targetOptions, sourceOptions, keys, mergeWriteConcern) {\n  // Mix in any allowed options\n  for (var i = 0; i < keys.length; i++) {\n    if (!targetOptions[keys[i]] && sourceOptions[keys[i]] !== undefined) {\n      targetOptions[keys[i]] = sourceOptions[keys[i]];\n    }\n  }\n\n  // No merging of write concern\n  if (!mergeWriteConcern) return targetOptions;\n\n  // Found no write Concern options\n  var found = false;\n  for (i = 0; i < writeConcernKeys.length; i++) {\n    if (targetOptions[writeConcernKeys[i]]) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) {\n    for (i = 0; i < writeConcernKeys.length; i++) {\n      if (sourceOptions[writeConcernKeys[i]]) {\n        targetOptions[writeConcernKeys[i]] = sourceOptions[writeConcernKeys[i]];\n      }\n    }\n  }\n\n  return targetOptions;\n};\n\n/**\n * Executes the given operation with provided arguments.\n *\n * This method reduces large amounts of duplication in the entire codebase by providing\n * a single point for determining whether callbacks or promises should be used. Additionally\n * it allows for a single point of entry to provide features such as implicit sessions, which\n * are required by the Driver Sessions specification in the event that a ClientSession is\n * not provided\n *\n * @param {object} topology The topology to execute this operation on\n * @param {function} operation The operation to execute\n * @param {array} args Arguments to apply the provided operation\n * @param {object} [options] Options that modify the behavior of the method\n */\nconst executeLegacyOperation = (topology, operation, args, options) => {\n  if (topology == null) {\n    throw new TypeError('This method requires a valid topology instance');\n  }\n\n  if (!Array.isArray(args)) {\n    throw new TypeError('This method requires an array of arguments to apply');\n  }\n\n  options = options || {};\n  const Promise = topology.s.promiseLibrary;\n  let callback = args[args.length - 1];\n\n  // The driver sessions spec mandates that we implicitly create sessions for operations\n  // that are not explicitly provided with a session.\n  let session, opOptions, owner;\n  if (!options.skipSessions && topology.hasSessionSupport()) {\n    opOptions = args[args.length - 2];\n    if (opOptions == null || opOptions.session == null) {\n      owner = Symbol();\n      session = topology.startSession({ owner });\n      const optionsIndex = args.length - 2;\n      args[optionsIndex] = Object.assign({}, args[optionsIndex], { session: session });\n    } else if (opOptions.session && opOptions.session.hasEnded) {\n      throw new MongoError('Use of expired sessions is not permitted');\n    }\n  }\n\n  const makeExecuteCallback = (resolve, reject) =>\n    function executeCallback(err, result) {\n      if (session && session.owner === owner && !options.returnsCursor) {\n        session.endSession(() => {\n          delete opOptions.session;\n          if (err) return reject(err);\n          resolve(result);\n        });\n      } else {\n        if (err) return reject(err);\n        resolve(result);\n      }\n    };\n\n  // Execute using callback\n  if (typeof callback === 'function') {\n    callback = args.pop();\n    const handler = makeExecuteCallback(\n      result => callback(null, result),\n      err => callback(err, null)\n    );\n    args.push(handler);\n\n    try {\n      return operation.apply(null, args);\n    } catch (e) {\n      handler(e);\n      throw e;\n    }\n  }\n\n  // Return a Promise\n  if (args[args.length - 1] != null) {\n    throw new TypeError('final argument to `executeLegacyOperation` must be a callback');\n  }\n\n  return new Promise(function(resolve, reject) {\n    const handler = makeExecuteCallback(resolve, reject);\n    args[args.length - 1] = handler;\n\n    try {\n      return operation.apply(null, args);\n    } catch (e) {\n      handler(e);\n    }\n  });\n};\n\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n *\n * @param {object} target The target command to which we will apply retryWrites.\n * @param {object} db The database from which we can inherit a retryWrites value.\n */\nfunction applyRetryableWrites(target, db) {\n  if (db && db.s.options.retryWrites) {\n    target.retryWrites = true;\n  }\n\n  return target;\n}\n\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n *\n * @param {Object} target the target command we will be applying the write concern to\n * @param {Object} sources sources where we can inherit default write concerns from\n * @param {Object} [options] optional settings passed into a command for write concern overrides\n * @returns {Object} the (now) decorated target\n */\nfunction applyWriteConcern(target, sources, options) {\n  options = options || {};\n  const db = sources.db;\n  const coll = sources.collection;\n\n  if (options.session && options.session.inTransaction()) {\n    // writeConcern is not allowed within a multi-statement transaction\n    if (target.writeConcern) {\n      delete target.writeConcern;\n    }\n\n    return target;\n  }\n\n  const writeConcern = WriteConcern.fromOptions(options);\n  if (writeConcern) {\n    return Object.assign(target, { writeConcern });\n  }\n\n  if (coll && coll.writeConcern) {\n    return Object.assign(target, { writeConcern: Object.assign({}, coll.writeConcern) });\n  }\n\n  if (db && db.writeConcern) {\n    return Object.assign(target, { writeConcern: Object.assign({}, db.writeConcern) });\n  }\n\n  return target;\n}\n\n/**\n * Checks if a given value is a Promise\n *\n * @param {*} maybePromise\n * @return true if the provided value is a Promise\n */\nfunction isPromiseLike(maybePromise) {\n  return maybePromise && typeof maybePromise.then === 'function';\n}\n\n/**\n * Applies collation to a given command.\n *\n * @param {object} [command] the command on which to apply collation\n * @param {(Cursor|Collection)} [target] target of command\n * @param {object} [options] options containing collation settings\n */\nfunction decorateWithCollation(command, target, options) {\n  const topology = (target.s && target.s.topology) || target.topology;\n\n  if (!topology) {\n    throw new TypeError('parameter \"target\" is missing a topology');\n  }\n\n  const capabilities = topology.capabilities();\n  if (options.collation && typeof options.collation === 'object') {\n    if (capabilities && capabilities.commandsTakeCollation) {\n      command.collation = options.collation;\n    } else {\n      throw new MongoError(`Current topology does not support collation`);\n    }\n  }\n}\n\n/**\n * Applies a read concern to a given command.\n *\n * @param {object} command the command on which to apply the read concern\n * @param {Collection} coll the parent collection of the operation calling this method\n */\nfunction decorateWithReadConcern(command, coll, options) {\n  if (options && options.session && options.session.inTransaction()) {\n    return;\n  }\n  let readConcern = Object.assign({}, command.readConcern || {});\n  if (coll.s.readConcern) {\n    Object.assign(readConcern, coll.s.readConcern);\n  }\n\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, { readConcern: readConcern });\n  }\n}\n\n/**\n * Applies an explain to a given command.\n * @internal\n *\n * @param {object} command - the command on which to apply the explain\n * @param {Explain} explain - the options containing the explain verbosity\n * @return the new command\n */\nfunction decorateWithExplain(command, explain) {\n  if (command.explain) {\n    return command;\n  }\n\n  return { explain: command, verbosity: explain.verbosity };\n}\n\nconst emitProcessWarning = msg => process.emitWarning(msg, 'DeprecationWarning');\nconst emitConsoleWarning = msg => console.error(msg);\nconst emitDeprecationWarning = process.emitWarning ? emitProcessWarning : emitConsoleWarning;\n\n/**\n * Default message handler for generating deprecation warnings.\n *\n * @param {string} name function name\n * @param {string} option option name\n * @return {string} warning message\n * @ignore\n * @api private\n */\nfunction defaultMsgHandler(name, option) {\n  return `${name} option [${option}] is deprecated and will be removed in a later version.`;\n}\n\n/**\n * Deprecates a given function's options.\n *\n * @param {object} config configuration for deprecation\n * @param {string} config.name function name\n * @param {Array} config.deprecatedOptions options to deprecate\n * @param {number} config.optionsIndex index of options object in function arguments array\n * @param {function} [config.msgHandler] optional custom message handler to generate warnings\n * @param {function} fn the target function of deprecation\n * @return {function} modified function that warns once per deprecated option, and executes original function\n * @ignore\n * @api private\n */\nfunction deprecateOptions(config, fn) {\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  const msgHandler = config.msgHandler ? config.msgHandler : defaultMsgHandler;\n\n  const optionsWarned = new Set();\n  function deprecated() {\n    const options = arguments[config.optionsIndex];\n\n    // ensure options is a valid, non-empty object, otherwise short-circuit\n    if (!isObject(options) || Object.keys(options).length === 0) {\n      return fn.apply(this, arguments);\n    }\n\n    config.deprecatedOptions.forEach(deprecatedOption => {\n      if (\n        Object.prototype.hasOwnProperty.call(options, deprecatedOption) &&\n        !optionsWarned.has(deprecatedOption)\n      ) {\n        optionsWarned.add(deprecatedOption);\n        const msg = msgHandler(config.name, deprecatedOption);\n        emitDeprecationWarning(msg);\n        if (this && this.getLogger) {\n          const logger = this.getLogger();\n          if (logger) {\n            logger.warn(msg);\n          }\n        }\n      }\n    });\n\n    return fn.apply(this, arguments);\n  }\n\n  // These lines copied from https://github.com/nodejs/node/blob/25e5ae41688676a5fd29b2e2e7602168eee4ceb5/lib/internal/util.js#L73-L80\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  Object.setPrototypeOf(deprecated, fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype, as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nconst SUPPORTS = {};\n// Test asyncIterator support\ntry {\n  require('./async/async_iterator');\n  SUPPORTS.ASYNC_ITERATOR = true;\n} catch (e) {\n  SUPPORTS.ASYNC_ITERATOR = false;\n}\n\nclass MongoDBNamespace {\n  constructor(db, collection) {\n    this.db = db;\n    this.collection = collection;\n  }\n\n  toString() {\n    return this.collection ? `${this.db}.${this.collection}` : this.db;\n  }\n\n  withCollection(collection) {\n    return new MongoDBNamespace(this.db, collection);\n  }\n\n  static fromString(namespace) {\n    if (!namespace) {\n      throw new Error(`Cannot parse namespace from \"${namespace}\"`);\n    }\n\n    const index = namespace.indexOf('.');\n    return new MongoDBNamespace(namespace.substring(0, index), namespace.substring(index + 1));\n  }\n}\n\nfunction* makeCounter(seed) {\n  let count = seed || 0;\n  while (true) {\n    const newCount = count;\n    count += 1;\n    yield newCount;\n  }\n}\n\n/**\n * Helper function for either accepting a callback, or returning a promise\n *\n * @param {Object} parent an instance of parent with promiseLibrary.\n * @param {object} parent.s an object containing promiseLibrary.\n * @param {function} parent.s.promiseLibrary an object containing promiseLibrary.\n * @param {[Function]} callback an optional callback.\n * @param {Function} fn A function that takes a callback\n * @returns {Promise|void} Returns nothing if a callback is supplied, else returns a Promise.\n */\nfunction maybePromise(parent, callback, fn) {\n  const PromiseLibrary = (parent && parent.s && parent.s.promiseLibrary) || Promise;\n\n  let result;\n  if (typeof callback !== 'function') {\n    result = new PromiseLibrary((resolve, reject) => {\n      callback = (err, res) => {\n        if (err) return reject(err);\n        resolve(res);\n      };\n    });\n  }\n\n  fn(function(err, res) {\n    if (err != null) {\n      try {\n        callback(err);\n      } catch (error) {\n        return process.nextTick(() => {\n          throw error;\n        });\n      }\n      return;\n    }\n\n    callback(err, res);\n  });\n\n  return result;\n}\n\nfunction now() {\n  const hrtime = process.hrtime();\n  return Math.floor(hrtime[0] * 1000 + hrtime[1] / 1000000);\n}\n\nfunction calculateDurationInMs(started) {\n  if (typeof started !== 'number') {\n    throw TypeError('numeric value required to calculate duration');\n  }\n\n  const elapsed = now() - started;\n  return elapsed < 0 ? 0 : elapsed;\n}\n\n/**\n * Creates an interval timer which is able to be woken up sooner than\n * the interval. The timer will also debounce multiple calls to wake\n * ensuring that the function is only ever called once within a minimum\n * interval window.\n *\n * @param {function} fn An async function to run on an interval, must accept a `callback` as its only parameter\n * @param {object} [options] Optional settings\n * @param {number} [options.interval] The interval at which to run the provided function\n * @param {number} [options.minInterval] The minimum time which must pass between invocations of the provided function\n * @param {boolean} [options.immediate] Execute the function immediately when the interval is started\n */\nfunction makeInterruptableAsyncInterval(fn, options) {\n  let timerId;\n  let lastCallTime;\n  let lastWakeTime;\n  let stopped = false;\n\n  options = options || {};\n  const interval = options.interval || 1000;\n  const minInterval = options.minInterval || 500;\n  const immediate = typeof options.immediate === 'boolean' ? options.immediate : false;\n  const clock = typeof options.clock === 'function' ? options.clock : now;\n\n  function wake() {\n    const currentTime = clock();\n    const timeSinceLastWake = currentTime - lastWakeTime;\n    const timeSinceLastCall = currentTime - lastCallTime;\n    const timeUntilNextCall = interval - timeSinceLastCall;\n    lastWakeTime = currentTime;\n\n    // For the streaming protocol: there is nothing obviously stopping this\n    // interval from being woken up again while we are waiting \"infinitely\"\n    // for `fn` to be called again`. Since the function effectively\n    // never completes, the `timeUntilNextCall` will continue to grow\n    // negatively unbounded, so it will never trigger a reschedule here.\n\n    // debounce multiple calls to wake within the `minInterval`\n    if (timeSinceLastWake < minInterval) {\n      return;\n    }\n\n    // reschedule a call as soon as possible, ensuring the call never happens\n    // faster than the `minInterval`\n    if (timeUntilNextCall > minInterval) {\n      reschedule(minInterval);\n    }\n\n    // This is possible in virtualized environments like AWS Lambda where our\n    // clock is unreliable. In these cases the timer is \"running\" but never\n    // actually completes, so we want to execute immediately and then attempt\n    // to reschedule.\n    if (timeUntilNextCall < 0) {\n      executeAndReschedule();\n    }\n  }\n\n  function stop() {\n    stopped = true;\n    if (timerId) {\n      clearTimeout(timerId);\n      timerId = null;\n    }\n\n    lastCallTime = 0;\n    lastWakeTime = 0;\n  }\n\n  function reschedule(ms) {\n    if (stopped) return;\n    clearTimeout(timerId);\n    timerId = setTimeout(executeAndReschedule, ms || interval);\n  }\n\n  function executeAndReschedule() {\n    lastWakeTime = 0;\n    lastCallTime = clock();\n\n    fn(err => {\n      if (err) throw err;\n      reschedule(interval);\n    });\n  }\n\n  if (immediate) {\n    executeAndReschedule();\n  } else {\n    lastCallTime = clock();\n    reschedule();\n  }\n\n  return { wake, stop };\n}\n\nfunction hasAtomicOperators(doc) {\n  if (Array.isArray(doc)) {\n    return doc.reduce((err, u) => err || hasAtomicOperators(u), null);\n  }\n\n  return (\n    Object.keys(typeof doc.toBSON !== 'function' ? doc : doc.toBSON())\n      .map(k => k[0])\n      .indexOf('$') >= 0\n  );\n}\n\nmodule.exports = {\n  filterOptions,\n  mergeOptions,\n  translateOptions,\n  shallowClone,\n  getSingleProperty,\n  checkCollectionName,\n  toError,\n  formattedOrderClause,\n  parseIndexOptions,\n  normalizeHintField,\n  handleCallback,\n  decorateCommand,\n  isObject,\n  debugOptions,\n  MAX_JS_INT: Number.MAX_SAFE_INTEGER + 1,\n  mergeOptionsAndWriteConcern,\n  executeLegacyOperation,\n  applyRetryableWrites,\n  applyWriteConcern,\n  isPromiseLike,\n  decorateWithCollation,\n  decorateWithReadConcern,\n  decorateWithExplain,\n  deprecateOptions,\n  SUPPORTS,\n  MongoDBNamespace,\n  emitDeprecationWarning,\n  makeCounter,\n  maybePromise,\n  now,\n  calculateDurationInMs,\n  makeInterruptableAsyncInterval,\n  hasAtomicOperators\n};\n","'use strict';\n\nconst kWriteConcernKeys = new Set(['w', 'wtimeout', 'j', 'journal', 'fsync']);\n\n/**\n * The **WriteConcern** class is a class that represents a MongoDB WriteConcern.\n * @class\n * @property {(number|string)} w The write concern\n * @property {number} wtimeout The write concern timeout\n * @property {boolean} j The journal write concern\n * @property {boolean} fsync The file sync write concern\n * @see https://docs.mongodb.com/manual/reference/write-concern/index.html\n */\nclass WriteConcern {\n  /**\n   * Constructs a WriteConcern from the write concern properties.\n   * @param {(number|string)} [w] The write concern\n   * @param {number} [wtimeout] The write concern timeout\n   * @param {boolean} [j] The journal write concern\n   * @param {boolean} [fsync] The file sync write concern\n   */\n  constructor(w, wtimeout, j, fsync) {\n    if (w != null) {\n      this.w = w;\n    }\n    if (wtimeout != null) {\n      this.wtimeout = wtimeout;\n    }\n    if (j != null) {\n      this.j = j;\n    }\n    if (fsync != null) {\n      this.fsync = fsync;\n    }\n  }\n\n  /**\n   * Construct a WriteConcern given an options object.\n   *\n   * @param {object} [options] The options object from which to extract the write concern.\n   * @param {(number|string)} [options.w] **Deprecated** Use `options.writeConcern` instead\n   * @param {number} [options.wtimeout] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.j] **Deprecated** Use `options.writeConcern` instead\n   * @param {boolean} [options.fsync] **Deprecated** Use `options.writeConcern` instead\n   * @param {object|WriteConcern} [options.writeConcern] Specify write concern settings.\n   * @return {WriteConcern}\n   */\n  static fromOptions(options) {\n    if (\n      options == null ||\n      (options.writeConcern == null &&\n        options.w == null &&\n        options.wtimeout == null &&\n        options.j == null &&\n        options.journal == null &&\n        options.fsync == null)\n    ) {\n      return;\n    }\n\n    if (options.writeConcern) {\n      if (typeof options.writeConcern === 'string') {\n        return new WriteConcern(options.writeConcern);\n      }\n\n      if (!Object.keys(options.writeConcern).some(key => kWriteConcernKeys.has(key))) {\n        return;\n      }\n\n      return new WriteConcern(\n        options.writeConcern.w,\n        options.writeConcern.wtimeout,\n        options.writeConcern.j || options.writeConcern.journal,\n        options.writeConcern.fsync\n      );\n    }\n\n    console.warn(\n      `Top-level use of w, wtimeout, j, and fsync is deprecated. Use writeConcern instead.`\n    );\n    return new WriteConcern(\n      options.w,\n      options.wtimeout,\n      options.j || options.journal,\n      options.fsync\n    );\n  }\n}\n\nmodule.exports = WriteConcern;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../node_modules/require_optional sync recursive\";","var path = require('path'),\n  fs = require('fs'),\n  f = require('util').format,\n  resolveFrom = require('resolve-from'),\n  semver = require('semver');\n\nvar exists = fs.existsSync || path.existsSync;\n\n// Find the location of a package.json file near or above the given location\nvar find_package_json = function(location) {\n  var found = false;\n\n  while(!found) {\n    if (exists(location + '/package.json')) {\n      found = location;\n    } else if (location !== '/') {\n      location = path.dirname(location);\n    } else {\n      return false;\n    }\n  }\n\n  return location;\n}\n\n// Find the package.json object of the module closest up the module call tree that contains name in that module's peerOptionalDependencies\nvar find_package_json_with_name = function(name) {\n  // Walk up the module call tree until we find a module containing name in its peerOptionalDependencies\n  var currentModule = module;\n  var found = false;\n  while (currentModule) {\n    // Check currentModule has a package.json\n    location = currentModule.filename;\n    var location = find_package_json(location)\n    if (!location) {\n      currentModule = currentModule.parent;\n      continue;\n    }\n\n    // Read the package.json file\n    var object = JSON.parse(fs.readFileSync(f('%s/package.json', location)));\n    // Is the name defined by interal file references\n    var parts = name.split(/\\//);\n\n    // Check whether this package.json contains peerOptionalDependencies containing the name we're searching for\n    if (!object.peerOptionalDependencies || (object.peerOptionalDependencies && !object.peerOptionalDependencies[parts[0]])) {\n      currentModule = currentModule.parent;\n      continue;\n    }\n    found = true;\n    break;\n  }\n\n  // Check whether name has been found in currentModule's peerOptionalDependencies\n  if (!found) {\n    throw new Error(f('no optional dependency [%s] defined in peerOptionalDependencies in any package.json', parts[0]));\n  }\n\n  return {\n    object: object,\n    parts: parts\n  }\n}\n\nvar require_optional = function(name, options) {\n  options = options || {};\n  options.strict = typeof options.strict == 'boolean' ? options.strict : true;\n\n  var res = find_package_json_with_name(name)\n  var object = res.object;\n  var parts = res.parts;\n\n  // Unpack the expected version\n  var expectedVersions = object.peerOptionalDependencies[parts[0]];\n  // The resolved package\n  var moduleEntry = undefined;\n  // Module file\n  var moduleEntryFile = name;\n\n  try {\n    // Validate if it's possible to read the module\n    moduleEntry = require(moduleEntryFile);\n  } catch(err) {\n    // Attempt to resolve in top level package\n    try {\n      // Get the module entry file\n      moduleEntryFile = resolveFrom(process.cwd(), name);\n      if(moduleEntryFile == null) return undefined;\n      // Attempt to resolve the module\n      moduleEntry = require(moduleEntryFile);\n    } catch(err) {\n      if(err.code === 'MODULE_NOT_FOUND') return undefined;\n    }\n  }\n\n  // Resolve the location of the module's package.json file\n  var location = find_package_json(require.resolve(moduleEntryFile));\n  if(!location) {\n    throw new Error('package.json can not be located');\n  }\n\n  // Read the module file\n  var dependentOnModule = JSON.parse(fs.readFileSync(f('%s/package.json', location)));\n  // Get the version\n  var version = dependentOnModule.version;\n  // Validate if the found module satisfies the version id\n  if(semver.satisfies(version, expectedVersions) == false\n    && options.strict) {\n      var error = new Error(f('optional dependency [%s] found but version [%s] did not satisfy constraint [%s]', parts[0], version, expectedVersions));\n      error.code = 'OPTIONAL_MODULE_NOT_FOUND';\n      throw error;\n  }\n\n  // Satifies the module requirement\n  return moduleEntry;\n}\n\nrequire_optional.exists = function(name) {\n  try {\n    var m = require_optional(name);\n    if(m === undefined) return false;\n    return true;\n  } catch(err) {\n    return false;\n  }\n}\n\nmodule.exports = require_optional;\n","'use strict';\n\nconst {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n} = require('./lib/memory-code-points');\n\nmodule.exports = saslprep;\n\n// 2.1.  Mapping\n\n/**\n * non-ASCII space characters [StringPrep, C.1.2] that can be\n * mapped to SPACE (U+0020)\n */\nconst mapping2space = non_ASCII_space_characters;\n\n/**\n * the \"commonly mapped to nothing\" characters [StringPrep, B.1]\n * that can be mapped to nothing.\n */\nconst mapping2nothing = commonly_mapped_to_nothing;\n\n// utils\nconst getCodePoint = character => character.codePointAt(0);\nconst first = x => x[0];\nconst last = x => x[x.length - 1];\n\n/**\n * Convert provided string into an array of Unicode Code Points.\n * Based on https://stackoverflow.com/a/21409165/1556249\n * and https://www.npmjs.com/package/code-point-at.\n * @param {string} input\n * @returns {number[]}\n */\nfunction toCodePoints(input) {\n  const codepoints = [];\n  const size = input.length;\n\n  for (let i = 0; i < size; i += 1) {\n    const before = input.charCodeAt(i);\n\n    if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n      const next = input.charCodeAt(i + 1);\n\n      if (next >= 0xdc00 && next <= 0xdfff) {\n        codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n        i += 1;\n        continue;\n      }\n    }\n\n    codepoints.push(before);\n  }\n\n  return codepoints;\n}\n\n/**\n * SASLprep.\n * @param {string} input\n * @param {Object} opts\n * @param {boolean} opts.allowUnassigned\n * @returns {string}\n */\nfunction saslprep(input, opts = {}) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected string.');\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  // 1. Map\n  const mapped_input = toCodePoints(input)\n    // 1.1 mapping to space\n    .map(character => (mapping2space.get(character) ? 0x20 : character))\n    // 1.2 mapping to nothing\n    .filter(character => !mapping2nothing.get(character));\n\n  // 2. Normalize\n  const normalized_input = String.fromCodePoint\n    .apply(null, mapped_input)\n    .normalize('NFKC');\n\n  const normalized_map = toCodePoints(normalized_input);\n\n  // 3. Prohibit\n  const hasProhibited = normalized_map.some(character =>\n    prohibited_characters.get(character)\n  );\n\n  if (hasProhibited) {\n    throw new Error(\n      'Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3'\n    );\n  }\n\n  // Unassigned Code Points\n  if (opts.allowUnassigned !== true) {\n    const hasUnassigned = normalized_map.some(character =>\n      unassigned_code_points.get(character)\n    );\n\n    if (hasUnassigned) {\n      throw new Error(\n        'Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5'\n      );\n    }\n  }\n\n  // 4. check bidi\n\n  const hasBidiRAL = normalized_map.some(character =>\n    bidirectional_r_al.get(character)\n  );\n\n  const hasBidiL = normalized_map.some(character =>\n    bidirectional_l.get(character)\n  );\n\n  // 4.1 If a string contains any RandALCat character, the string MUST NOT\n  // contain any LCat character.\n  if (hasBidiRAL && hasBidiL) {\n    throw new Error(\n      'String must not contain RandALCat and LCat at the same time,' +\n        ' see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  /**\n   * 4.2 If a string contains any RandALCat character, a RandALCat\n   * character MUST be the first character of the string, and a\n   * RandALCat character MUST be the last character of the string.\n   */\n\n  const isFirstBidiRAL = bidirectional_r_al.get(\n    getCodePoint(first(normalized_input))\n  );\n  const isLastBidiRAL = bidirectional_r_al.get(\n    getCodePoint(last(normalized_input))\n  );\n\n  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n    throw new Error(\n      'Bidirectional RandALCat character must be the first and the last' +\n        ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  return normalized_input;\n}\n","'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst bitfield = require('sparse-bitfield');\n\n/* eslint-disable-next-line security/detect-non-literal-fs-filename */\nconst memory = fs.readFileSync(path.resolve(__dirname, '../code-points.mem'));\nlet offset = 0;\n\n/**\n * Loads each code points sequence from buffer.\n * @returns {bitfield}\n */\nfunction read() {\n  const size = memory.readUInt32BE(offset);\n  offset += 4;\n\n  const codepoints = memory.slice(offset, offset + size);\n  offset += size;\n\n  return bitfield({ buffer: codepoints });\n}\n\nconst unassigned_code_points = read();\nconst commonly_mapped_to_nothing = read();\nconst non_ASCII_space_characters = read();\nconst prohibited_characters = read();\nconst bidirectional_r_al = read();\nconst bidirectional_l = read();\n\nmodule.exports = {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n};\n","var pager = require('memory-pager')\n\nmodule.exports = Bitfield\n\nfunction Bitfield (opts) {\n  if (!(this instanceof Bitfield)) return new Bitfield(opts)\n  if (!opts) opts = {}\n  if (Buffer.isBuffer(opts)) opts = {buffer: opts}\n\n  this.pageOffset = opts.pageOffset || 0\n  this.pageSize = opts.pageSize || 1024\n  this.pages = opts.pages || pager(this.pageSize)\n\n  this.byteLength = this.pages.length * this.pageSize\n  this.length = 8 * this.byteLength\n\n  if (!powerOfTwo(this.pageSize)) throw new Error('The page size should be a power of two')\n\n  this._trackUpdates = !!opts.trackUpdates\n  this._pageMask = this.pageSize - 1\n\n  if (opts.buffer) {\n    for (var i = 0; i < opts.buffer.length; i += this.pageSize) {\n      this.pages.set(i / this.pageSize, opts.buffer.slice(i, i + this.pageSize))\n    }\n    this.byteLength = opts.buffer.length\n    this.length = 8 * this.byteLength\n  }\n}\n\nBitfield.prototype.get = function (i) {\n  var o = i & 7\n  var j = (i - o) / 8\n\n  return !!(this.getByte(j) & (128 >> o))\n}\n\nBitfield.prototype.getByte = function (i) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, true)\n\n  return page ? page.buffer[o + this.pageOffset] : 0\n}\n\nBitfield.prototype.set = function (i, v) {\n  var o = i & 7\n  var j = (i - o) / 8\n  var b = this.getByte(j)\n\n  return this.setByte(j, v ? b | (128 >> o) : b & (255 ^ (128 >> o)))\n}\n\nBitfield.prototype.toBuffer = function () {\n  var all = alloc(this.pages.length * this.pageSize)\n\n  for (var i = 0; i < this.pages.length; i++) {\n    var next = this.pages.get(i, true)\n    var allOffset = i * this.pageSize\n    if (next) next.buffer.copy(all, allOffset, this.pageOffset, this.pageOffset + this.pageSize)\n  }\n\n  return all\n}\n\nBitfield.prototype.setByte = function (i, b) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, false)\n\n  o += this.pageOffset\n\n  if (page.buffer[o] === b) return false\n  page.buffer[o] = b\n\n  if (i >= this.byteLength) {\n    this.byteLength = i + 1\n    this.length = this.byteLength * 8\n  }\n\n  if (this._trackUpdates) this.pages.updated(page)\n\n  return true\n}\n\nfunction alloc (n) {\n  if (Buffer.alloc) return Buffer.alloc(n)\n  var b = new Buffer(n)\n  b.fill(0)\n  return b\n}\n\nfunction powerOfTwo (x) {\n  return !(x & (x - 1))\n}\n","const cosmiconfig = require('cosmiconfig');\nconst webpack = require('webpack');\nconst defaultConfig = require('./webpack.config');\n\nconst explorer = cosmiconfig('graphpack').search();\n\nconst loadServerConfig = async () => {\n  const result = await explorer;\n  const userConfig = result\n    ? typeof result.config === 'function'\n      ? result.config(defaultConfig.mode)\n      : result.config\n    : {};\n\n  return { port: Number(process.env.PORT), ...userConfig.server };\n};\n\nconst loadWebpackConfig = async () => {\n  const result = await explorer;\n  const userConfig = result\n    ? typeof result.config === 'function'\n      ? result.config(defaultConfig.mode)\n      : result.config\n    : {};\n\n  if (typeof userConfig.webpack === 'function') {\n    return userConfig.webpack({ config: defaultConfig, webpack });\n  }\n\n  return { ...defaultConfig, ...userConfig.webpack };\n};\n\nexports.loadServerConfig = loadServerConfig;\nexports.loadWebpackConfig = loadWebpackConfig;\n","const FriendlyErrorsWebpackPlugin = require('friendly-errors-webpack-plugin');\nconst fs = require('fs');\nconst path = require('path');\nconst webpack = require('webpack');\nconst nodeExternals = require('webpack-node-externals');\n\nconst isDev = process.env.NODE_ENV !== 'production';\nconst isWebpack = typeof __webpack_modules__ === 'object';\nconst hasBabelRc = fs.existsSync(path.resolve('babel.config.js'));\n\nif (hasBabelRc && !isWebpack) {\n  console.info('🐠 Using babel.config.js defined in your app root');\n}\n\nmodule.exports = {\n  devtool: 'source-map',\n  entry: {\n    // We take care of setting up entry file under lib/index.js\n    index: ['graphpack'],\n  },\n  // When bundling with Webpack for the backend you usually don't want to bundle\n  // its node_modules dependencies. This creates an externals function that\n  // ignores node_modules when bundling in Webpack.\n  externals: [nodeExternals({ whitelist: [/^graphpack$/] })],\n  mode: isDev ? 'development' : 'production',\n  module: {\n    rules: [\n      {\n        test: /\\.(gql|graphql)/,\n        use: 'graphql-tag/loader',\n      },\n      {\n        test: /\\.(js|ts)$/,\n        use: [\n          {\n            loader: require.resolve('babel-loader'),\n            options: {\n              babelrc: true,\n              cacheDirectory: true,\n              presets: hasBabelRc\n                ? undefined\n                : [require.resolve('babel-preset-graphpack')],\n            },\n          },\n        ],\n      },\n      {\n        test: /\\.mjs$/,\n        type: 'javascript/auto',\n      },\n    ],\n  },\n  node: {\n    __filename: true,\n    __dirname: true,\n  },\n  optimization: { noEmitOnErrors: true },\n  output: {\n    filename: '[name].js',\n    libraryTarget: 'commonjs2',\n    path: path.join(process.cwd(), './build'),\n    sourceMapFilename: '[name].map',\n  },\n  performance: {\n    hints: false,\n  },\n  plugins: [\n    new webpack.optimize.LimitChunkCountPlugin({ maxChunks: 1 }),\n    new webpack.EnvironmentPlugin({\n      DEBUG: false,\n      GRAPHPACK_SRC_DIR: path.resolve(process.cwd(), 'src'),\n      NODE_ENV: 'development',\n    }),\n    new FriendlyErrorsWebpackPlugin({ clearConsole: isDev }),\n  ],\n  resolve: {\n    extensions: ['.ts', '.js'],\n  },\n  stats: 'minimal',\n  target: 'node',\n};\n","import { ApolloServer } from 'apollo-server';\nimport { ApolloServer as ApolloExpressServer } from 'apollo-server-express';\nimport { context, resolvers, typeDefs } from './srcFiles';\nimport { loadServerConfig } from '../config';\n\nif (!(resolvers && Object.keys(resolvers).length > 0)) {\n  throw Error(\n    `Couldn't find any resolvers. Please add resolvers to your src/resolvers.js`,\n  );\n}\n\nconst createServer = config => {\n  const { applyMiddleware, port: serverPort, ...options } = config;\n  const port = Number(process.env.PORT) || serverPort || 4000;\n  // Pull out fields that are not relevant for the apollo server\n\n  // Use apollo-server-express when middleware detected\n  if (\n    applyMiddleware &&\n    applyMiddleware.app &&\n    typeof applyMiddleware.app.listen === 'function'\n  ) {\n    const server = new ApolloExpressServer(options);\n    server.applyMiddleware(applyMiddleware);\n\n    return applyMiddleware.app.listen({ port }, () =>\n      console.log(\n        `🚀 Server ready at http://localhost:${port}${server.graphqlPath}`,\n      ),\n    );\n  }\n\n  // Use apollo-server\n  const server = new ApolloServer(options);\n\n  return server\n    .listen({ port })\n    .then(({ url }) => console.log(`🚀 Server ready at ${url}`));\n};\n\nconst startServer = async () => {\n  // Load server config from graphpack.config.js\n  const config = await loadServerConfig();\n\n  createServer({ ...config, context, resolvers, typeDefs });\n};\n\nstartServer();\n","export const importFirst = req =>\n  req.keys().map(mod => req(mod).default || req(mod))[0];\n\n// Optionally import modules\nexport const context = importFirst(\n  require.context(\n    process.env.GRAPHPACK_SRC_DIR,\n    true,\n    /^\\.\\/(context|context\\/index)\\.(js|ts)$/,\n  ),\n);\nexport const resolvers = importFirst(\n  require.context(\n    process.env.GRAPHPACK_SRC_DIR,\n    true,\n    /^\\.\\/(resolvers|resolvers\\/index)\\.(js|ts)$/,\n  ),\n);\nexport const typeDefs = importFirst(\n  require.context(\n    process.env.GRAPHPACK_SRC_DIR,\n    true,\n    /^\\.\\/(schema|schema\\/index)\\.(gql|graphql|js|ts)$/,\n  ),\n);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src sync recursive ^\\\\.\\\\/(context|context\\\\/index)\\\\.(js|ts)$\";","var map = {\n\t\"./resolvers/index.js\": \"./src/resolvers/index.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.\\\\/(resolvers|resolvers\\\\/index)\\\\.(js|ts)$\";","var map = {\n\t\"./schema.graphql\": \"./src/schema.graphql\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.\\\\/(schema|schema\\\\/index)\\\\.(gql|graphql|js|ts)$\";","/**\n * 功能: 封装常用数据库操作\n */\n\nconst MongoClient = require('mongodb').MongoClient\nconst { DB_URL, DEFAULT_BASE } = require('./setting.js')\n\n/**\n * 数据库连接\n * @param callback\n * @private\n */\nfunction _connectDB(callback) {\n  MongoClient.connect(DB_URL, { useNewUrlParser: true }, (err, db) => {\n    if (err) {\n      console.log('😱 数据库连接出错 ！')\n      callback(err, null)\n      return\n    }\n    callback(err, db.db(DEFAULT_BASE))\n    db.close()\n  })\n}\n\n/**\n * 查询数据，如果成功则返回一个数组\n * @param collectionName\n * @param data\n * @param callback\n */\nexports.find = function (collectionName, data, callback) {\n  _connectDB((err, db) =>\n    db\n      .collection(collectionName)\n      .find(data)\n      .toArray((err, result) => {\n        if (err) throw err\n        callback(result)\n      })\n  )\n}\n\n/**\n * 查询数据，如果成功则返回一个数组\n * @param collectionName\n * @param data\n * @param callback\n */\nexports.findOne = function (collectionName, data, callback) {\n  _connectDB((err, db) =>\n    db.collection(collectionName).findOne(data, (err, result) => {\n      if (err) throw err\n      callback(result)\n    })\n  )\n}\n\n/**\n * 插入一条数据，如果成功就把插入的数据返回\n * @param collectionName\n * @param data\n * @param callback\n */\nexports.insertOne = function (collectionName, data, callback) {\n  _connectDB((err, db) =>\n    db.collection(collectionName).insertOne(data, (err, result) => {\n      if (err) throw err\n      callback(data)\n    })\n  )\n}\n\n/**\n * 删除单个用户，如果成功就把删除的用户返回\n * @param collectionName\n * @param data\n * @param callback\n */\nexports.deleteOne = function (collectionName, data, callback) {\n  _connectDB((err, db) =>\n    db.collection(collectionName).deleteOne(data, (err, results) => {\n      if (err) throw err\n      callback(data)\n    })\n  )\n}\n\n/**\n * 更新单个用户，如果成功把更改之后的用户信息返回\n * @param collectionName\n * @param data\n * @param targ\n * @param callback\n */\nexports.updateOne = function (collectionName, data, targ, callback) {\n  _connectDB((err, db) =>\n    db.collection(collectionName).updateOne(data, targ, (err, results) => {\n      if (err) throw err\n      callback(targ['$set'])\n    })\n  )\n}\n","/*\n * @Description: 这是***页面\n * @Date: 2021-03-01 15:26:51\n * @Author: chenxingyu\n * @LastEditors: chenxingyu\n */\n\nconst DbConn = require('./connect')\n\nconst DB_USERS = 'users'\n\n/**\n * 用户查询\n * @param data\n * @returns {Promise}\n */\nconst findUsers = (data) =>\n  new Promise((resolve) => DbConn.find(DB_USERS, data, resolve))\n\n/**\n * 单个用户查询\n * @param data\n * @returns {Promise}\n */\nconst findUser = (data) =>\n  new Promise((resolve) => DbConn.findOne(DB_USERS, data, resolve))\n\n/**\n * 创建用户\n * @param id\n * @param name\n * @param email\n * @param age\n * @returns {Promise}\n * @param gender\n */\nconst createUser = ({ id, name, email, age, gender }) =>\n  new Promise((resolve) =>\n    DbConn.insertOne(DB_USERS, { id, name, email, age, gender }, resolve)\n  )\n\n/**\n * 删除用户\n * @param id\n * @param name\n * @returns {Promise}\n */\nconst deleteUser = ({ id }) =>\n  new Promise((resolve) => DbConn.deleteOne(DB_USERS, { id }, resolve))\n\n/**\n * 更新用户\n * @param id\n * @param name\n * @returns {Promise}\n * @param email\n * @param age\n * @param gender\n */\nconst updateUser = ({ id, name, email, age, gender }) =>\n  new Promise((resolve) =>\n    DbConn.updateOne(\n      DB_USERS,\n      { id },\n      { $set: { id, name, email, age, gender } },\n      resolve\n    )\n  )\n\nmodule.exports = {\n  users: findUsers,\n  user: findUser,\n  createUser,\n  deleteUser,\n  updateUser\n}\n","/*\n * @Description: 这是***页面\n * @Date: 2021-03-01 15:28:49\n * @Author: chenxingyu\n * @LastEditors: chenxingyu\n */\nmodule.exports = {\n  DB_URL: 'mongodb://localhost:27017/',\n  DEFAULT_BASE: 'graph-pack-test'\n}\n","/*\n * @Description: 这是***页面\n * @Date: 2021-03-01 15:26:38\n * @Author: chenxingyu\n * @LastEditors: chenxingyu\n */\nimport Db from '../db'\n\nexport default {\n  Query: {\n    user: (parent, { id }) => Db.user({ id }),\n    users: (parent, args) => Db.users({})\n  },\n  Mutation: {\n    createUser: (parent, { id, name, email, age, gender }) =>\n      Db.user({ id })\n        .then((existUser) => {\n          if (existUser) throw new Error('已经有这个id的人了')\n        })\n        .then(() => Db.createUser({ id, name, email, age, gender }))\n  }\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"hello\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"users\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"user\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Mutation\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"createUser\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"age\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gender\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Gender\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updateUser\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"age\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gender\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Gender\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteUser\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Subscription\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"subsUser\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"},\"interfaces\":[{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UserInterface\"}}],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"age\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gender\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Gender\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Gender\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"MAN\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"WOMAN\"},\"directives\":[]}]},{\"kind\":\"InterfaceTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"UserInterface\"},\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"age\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gender\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Gender\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":681}};\n    doc.loc.source = {\"body\":\"# src/schema.graphql\\n\\n# Query 入口\\ntype Query {\\n  hello: String\\n  users: [User]!\\n  user(id: String): User\\n}\\n\\n# Mutation 入口\\ntype Mutation {\\n  createUser(\\n    id: ID!\\n    name: String!\\n    email: String!\\n    age: Int\\n    gender: Gender\\n  ): User\\n  updateUser(\\n    id: ID!\\n    name: String\\n    email: String\\n    age: Int\\n    gender: Gender\\n  ): User\\n  deleteUser(id: ID!): User\\n}\\n\\n# Subscription 入口\\ntype Subscription {\\n  subsUser(id: ID!): User\\n}\\n\\ntype User implements UserInterface {\\n  id: ID!\\n  name: String!\\n  age: Int\\n  gender: Gender\\n  email: String!\\n}\\n\\n# 枚举类型\\nenum Gender {\\n  MAN\\n  WOMAN\\n}\\n\\n# 接口类型\\ninterface UserInterface {\\n  id: ID!\\n  name: String!\\n  age: Int\\n  gender: Gender\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","module.exports = require(\"apollo-server\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"babel-loader\");","module.exports = require(\"babel-preset-graphpack\");","module.exports = require(\"buffer\");","module.exports = require(\"cosmiconfig\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"events\");","module.exports = require(\"friendly-errors-webpack-plugin\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"readable-stream\");","module.exports = require(\"resolve-from\");","module.exports = require(\"safe-buffer\");","module.exports = require(\"semver\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"webpack\");","module.exports = require(\"webpack-node-externals\");","module.exports = require(\"zlib\");"],"sourceRoot":""}