{"version":3,"sources":["Game.js"],"names":["Player","require","ScoreFX","Star","Game","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","scoreFXPrefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","btnNode","gameOverNode","controlHintLabel","keyboardHint","multiline","touchHint","onLoad","groundY","y","height","currentStar","currentStarX","timer","starDuration","isRunning","hintText","sys","isMobile","string","starPool","NodePool","scorePool","onStartGame","resetScore","setPositionX","active","startMoveAt","p","spawnNewStar","newStar","size","get","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","init","startTimer","despawnStar","star","put","random0To1","randomMinus1To1","width","randX","randY","jumpHeight","maxX","gainScore","pos","score","toString","fx","spawnScoreFX","play","audioEngine","playEffect","despawnScoreFX","scoreFX","update","dt","gameOver","enabled","stopMove","destroy"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const Player = require('Player');\nconst ScoreFX = require('ScoreFX');\nconst Star = require('Star');\n\n\nvar Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        scoreFXPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: Player\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        btnNode: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverNode: {\n            default: null,\n            type: cc.Node\n        },\n        controlHintLabel: {\n            default: null,\n            type: cc.Label\n        },\n        keyboardHint: {\n            default: '',\n            multiline: true\n        },\n        touchHint: {\n            default: '',\n            multiline: true\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n\n        // store last star's x position\n        this.currentStar = null;\n        this.currentStarX = 0;\n\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n\n        // is showing menu or running game\n        this.isRunning = false;\n\n        // initialize control hint\n        var hintText = cc.sys.isMobile ? this.touchHint : this.keyboardHint;\n        this.controlHintLabel.string = hintText;\n\n        // initialize star and score pool\n        this.starPool = new cc.NodePool('Star');\n        this.scorePool = new cc.NodePool('ScoreFX');\n    },\n\n    onStartGame: function () {\n        // 初始化计分\n        this.resetScore();\n        // set game state to running\n        this.isRunning = true;\n        // set button and gameover text out of screen\n        this.btnNode.setPositionX(3000);\n        this.gameOverNode.active = false;\n        // reset player position and move speed\n        this.player.startMoveAt(cc.p(0, this.groundY));\n        // spawn star\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function() {\n        var newStar = null;\n        // 使用给定的模板在场景中生成一个新节点\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this); // this will be passed to Star's reuse method\n        } else {\n            newStar = cc.instantiate(this.starPrefab);\n        }\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // pass Game instance to star\n        newStar.getComponent('Star').init(this);\n        // start star timer and store star reference\n        this.startTimer();\n        this.currentStar = newStar;\n    },\n\n    despawnStar (star) {\n        this.starPool.put(star);\n        this.spawnNewStar();\n    },\n\n    startTimer: function () {\n        // get a life duration for next star\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        // if there's no star, set a random x pos\n        if (!this.currentStar) {\n            this.currentStarX = cc.randomMinus1To1() * this.node.width/2;\n        }\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + cc.random0To1() * this.player.jumpHeight + 50;\n        // 根据屏幕宽度和上一个星星的 x 坐标，随机得到一个新生成星星 x 坐标\n        var maxX = this.node.width/2;\n        if (this.currentStarX >= 0) {\n            randX = -cc.random0To1() * maxX;\n        } else {\n            randX = cc.random0To1() * maxX;\n        }\n        this.currentStarX = randX;\n        // 返回星星坐标\n        return cc.p(randX, randY);\n    },\n\n    gainScore: function (pos) {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        // 播放特效\n        var fx = this.spawnScoreFX();\n        this.node.addChild(fx.node);\n        fx.node.setPosition(pos);\n        fx.play();\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    resetScore: function () {\n        this.score = 0;\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n    },\n\n    spawnScoreFX: function () {\n        var fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get();\n            return fx.getComponent('ScoreFX');\n        } else {\n            fx = cc.instantiate(this.scoreFXPrefab).getComponent('ScoreFX');\n            fx.init(this);\n            return fx;\n        }\n    },\n\n    despawnScoreFX (scoreFX) {\n        this.scorePool.put(scoreFX);\n    },\n\n    // called every frame\n    update: function (dt) {\n        if (!this.isRunning) return;\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gameOver: function () {\n       this.gameOverNode.active = true;\n       this.player.enabled = false;\n       this.player.stopMove();\n       this.currentStar.destroy();\n       this.isRunning = false;\n       this.btnNode.setPositionX(0);\n    }\n});\n"]}